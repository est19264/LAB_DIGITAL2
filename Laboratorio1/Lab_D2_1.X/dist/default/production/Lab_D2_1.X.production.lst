

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 20 11:59:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370                           
   371                           	psect	idataBANK0
   372  0120                     __pidataBANK0:
   373                           
   374                           ;initializer for _tab
   375  0120  343F               	retlw	63
   376  0121  3406               	retlw	6
   377  0122  345B               	retlw	91
   378  0123  344F               	retlw	79
   379  0124  3466               	retlw	102
   380  0125  346D               	retlw	109
   381  0126  347D               	retlw	125
   382  0127  3407               	retlw	7
   383  0128  347F               	retlw	127
   384  0129  346F               	retlw	111
   385  012A  3477               	retlw	119
   386  012B  347C               	retlw	124
   387  012C  3439               	retlw	57
   388  012D  345E               	retlw	94
   389  012E  3479               	retlw	121
   390  012F  3471               	retlw	113
   391                           
   392                           	psect	nvCOMMON
   393  007D                     __pnvCOMMON:
   394  007D                     _nibble2:
   395  007D                     	ds	1
   396                           
   397                           	psect	nvBANK0
   398  0030                     __pnvBANK0:
   399  0030                     _bandera:
   400  0030                     	ds	2
   401  0032                     _nibble1:
   402  0032                     	ds	1
   403  0009                     _PORTE	set	9
   404  0006                     _PORTB	set	6
   405  0005                     _PORTA	set	5
   406  0007                     _PORTC	set	7
   407  0006                     _PORTBbits	set	6
   408  0001                     _TMR0	set	1
   409  000B                     _INTCONbits	set	11
   410  0008                     _PORTD	set	8
   411  0009                     _PORTEbits	set	9
   412  001E                     _ADRESH	set	30
   413  001F                     _ADCON0bits	set	31
   414  000C                     _PIR1bits	set	12
   415  0037                     _RB7	set	55
   416  00F9                     _GO	set	249
   417  0058                     _RBIF	set	88
   418  0049                     _RE1	set	73
   419  0048                     _RE0	set	72
   420  005A                     _T0IF	set	90
   421  009F                     _ADCON1bits	set	159
   422  008C                     _PIE1bits	set	140
   423  0096                     _IOCBbits	set	150
   424  0095                     _WPUB	set	149
   425  0081                     _OPTION_REGbits	set	129
   426  008F                     _OSCCONbits	set	143
   427  0089                     _TRISE	set	137
   428  0088                     _TRISD	set	136
   429  0087                     _TRISC	set	135
   430  0086                     _TRISBbits	set	134
   431  0085                     _TRISAbits	set	133
   432  0189                     _ANSELH	set	393
   433  0188                     _ANSEL	set	392
   434                           
   435                           	psect	cinit
   436  0011                     start_initialization:	
   437                           ; #config settings
   438                           
   439  0011                     __initialization:
   440                           
   441                           ; Initialize objects allocated to BANK0
   442  0011  1383               	bcf	3,7	;select IRP bank0
   443  0012  3030               	movlw	low (__pdataBANK0+16)
   444  0013  00FD               	movwf	btemp+-1
   445  0014  3001               	movlw	high __pidataBANK0
   446  0015  00FE               	movwf	btemp
   447  0016  3020               	movlw	low __pidataBANK0
   448  0017  00FF               	movwf	btemp+1
   449  0018  3020               	movlw	low __pdataBANK0
   450  0019  0084               	movwf	4
   451  001A  120A  118A  2111  120A  118A  	fcall	init_ram0
   452                           
   453                           ; Clear objects allocated to COMMON
   454  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   455  0020  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   456  0021  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   457  0022  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   458  0023  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   459  0024  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   460  0025                     end_of_initialization:	
   461                           ;End of C runtime variable initialization code
   462                           
   463  0025                     __end_of__initialization:
   464  0025  0183               	clrf	3
   465  0026  120A  118A  28C0   	ljmp	_main	;jump to C main() function
   466                           
   467                           	psect	bssCOMMON
   468  0077                     __pbssCOMMON:
   469  0077                     _ADC:
   470  0077                     	ds	2
   471  0079                     _multi:
   472  0079                     	ds	2
   473  007B                     _trad:
   474  007B                     	ds	1
   475  007C                     _display:
   476  007C                     	ds	1
   477                           
   478                           	psect	dataBANK0
   479  0020                     __pdataBANK0:
   480  0020                     _tab:
   481  0020                     	ds	16
   482                           
   483                           	psect	inittext
   484  010D                     init_fetch0:	
   485                           ;	Called with low address in FSR and high address in W
   486                           
   487  010D  087E               	movf	btemp,w
   488  010E  008A               	movwf	10
   489  010F  087F               	movf	btemp+1,w
   490  0110  0082               	movwf	2
   491  0111                     init_ram0:	
   492                           ;Called with:
   493                           ;	high address of idata address in btemp 
   494                           ;	low address of idata address in btemp+1 
   495                           ;	low address of data in FSR
   496                           ;	high address + 1 of data in btemp-1
   497                           
   498  0111  120A  118A  210D  120A  118A  	fcall	init_fetch0
   499  0116  0080               	movwf	0
   500  0117  0A84               	incf	4,f
   501  0118  0804               	movf	4,w
   502  0119  067D               	xorwf	btemp+-1,w
   503  011A  1903               	btfsc	3,2
   504  011B  3400               	retlw	0
   505  011C  0AFF               	incf	btemp+1,f
   506  011D  1903               	btfsc	3,2
   507  011E  0AFE               	incf	btemp,f
   508  011F  2911               	goto	init_ram0
   509                           
   510                           	psect	cstackCOMMON
   511  0070                     __pcstackCOMMON:
   512  0070                     ?_tabla:
   513  0070                     ??_tabla:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_setup:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_nibbles_setup:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_alarma:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_ADC_canal0:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_isr:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_main:	
   532                           ; 1 bytes @ 0x0
   533                           
   534                           
   535                           ; 1 bytes @ 0x0
   536  0070                     	ds	1
   537  0071                     tabla@hex:
   538                           
   539                           ; 1 bytes @ 0x1
   540  0071                     	ds	1
   541  0072                     ??_isr:
   542                           
   543                           ; 1 bytes @ 0x2
   544  0072                     	ds	5
   545                           
   546                           	psect	cstackBANK0
   547  0033                     __pcstackBANK0:
   548  0033                     ??_setup:
   549  0033                     ??_nibbles_setup:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0033                     ??_alarma:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0033                     ??_ADC_canal0:	
   556                           ; 1 bytes @ 0x0
   557                           
   558                           
   559                           ; 1 bytes @ 0x0
   560  0033                     	ds	2
   561  0035                     nibbles_setup@display:
   562                           
   563                           ; 1 bytes @ 0x2
   564  0035                     	ds	1
   565  0036                     ??_main:
   566                           
   567                           	psect	maintext
   568  00C0                     __pmaintext:	
   569                           ; 1 bytes @ 0x3
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 90 in file "main.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0, pclath, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : B00/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels required when called:    4
   595 ;; This function calls:
   596 ;;		_alarma
   597 ;;		_nibbles_setup
   598 ;;		_setup
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _main
   606  00C0                     _main:
   607  00C0                     l1103:	
   608                           ;incstack = 0
   609                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   610                           
   611                           
   612                           ;main.c: 92:     setup();
   613  00C0  120A  118A  2086  120A  118A  	fcall	_setup
   614  00C5                     l102:	
   615                           ;main.c: 94:     while(1)
   616                           
   617                           
   618                           ;main.c: 95:     {;main.c: 97:         nibbles_setup(ADC);
   619  00C5  0877               	movf	_ADC,w
   620  00C6  120A  118A  20F7  120A  118A  	fcall	_nibbles_setup
   621  00CB                     l1105:
   622                           
   623                           ;main.c: 98:         if (GO == 0){
   624  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   625  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   626  00CD  189F               	btfsc	31,1	;volatile
   627  00CE  28D0               	goto	u211
   628  00CF  28D1               	goto	u210
   629  00D0                     u211:
   630  00D0  28D7               	goto	l1109
   631  00D1                     u210:
   632  00D1                     l1107:
   633                           
   634                           ;main.c: 99:             _delay((unsigned long)((100)*(250000/4000000.0)));
   635  00D1  28D2               	nop2	;2 cycle nop
   636  00D2  28D3               	nop2	;2 cycle nop
   637  00D3  28D4               	nop2	;2 cycle nop
   638                           
   639                           ;main.c: 100:             GO = 1;
   640  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   641  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   642  00D6  149F               	bsf	31,1	;volatile
   643  00D7                     l1109:
   644                           
   645                           ;main.c: 102:         alarma();
   646  00D7  120A  118A  20E0  120A  118A  	fcall	_alarma
   647  00DC  28C5               	goto	l102
   648  00DD  120A  118A  280E   	ljmp	start
   649  00E0                     __end_of_main:
   650                           
   651                           	psect	text1
   652  0086                     __ptext1:	
   653 ;; *************** function _setup *****************
   654 ;; Defined at:
   655 ;;		line 108 in file "main.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0, pclath, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0
   672 ;;      Totals:         0       0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; Hardware stack levels required when called:    3
   676 ;; This function calls:
   677 ;;		_ADC_canal0
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           
   684                           ;psect for function _setup
   685  0086                     _setup:
   686  0086                     l1033:	
   687                           ;incstack = 0
   688                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   689                           
   690                           
   691                           ;main.c: 109:     bandera = 1;
   692  0086  3001               	movlw	1
   693  0087  1283               	bcf	3,5	;RP0=0, select bank0
   694  0088  1303               	bcf	3,6	;RP1=0, select bank0
   695  0089  00B0               	movwf	_bandera
   696  008A  3000               	movlw	0
   697  008B  00B1               	movwf	_bandera+1
   698                           
   699                           ;main.c: 111:     ANSEL = 0b00000001;
   700  008C  3001               	movlw	1
   701  008D  1683               	bsf	3,5	;RP0=1, select bank3
   702  008E  1703               	bsf	3,6	;RP1=1, select bank3
   703  008F  0088               	movwf	8	;volatile
   704  0090                     l1035:
   705                           
   706                           ;main.c: 112:     ANSELH = 0x00;
   707  0090  0189               	clrf	9	;volatile
   708  0091                     l1037:
   709                           
   710                           ;main.c: 116:     TRISAbits.TRISA0 = 1;
   711  0091  1683               	bsf	3,5	;RP0=1, select bank1
   712  0092  1303               	bcf	3,6	;RP1=0, select bank1
   713  0093  1405               	bsf	5,0	;volatile
   714  0094                     l1039:
   715                           
   716                           ;main.c: 119:     TRISBbits.TRISB0 = 1;
   717  0094  1406               	bsf	6,0	;volatile
   718  0095                     l1041:
   719                           
   720                           ;main.c: 120:     TRISBbits.TRISB1 = 1;
   721  0095  1486               	bsf	6,1	;volatile
   722  0096                     l1043:
   723                           
   724                           ;main.c: 121:     TRISBbits.TRISB7 = 0;
   725  0096  1386               	bcf	6,7	;volatile
   726  0097                     l1045:
   727                           
   728                           ;main.c: 124:     TRISC = 0x00;
   729  0097  0187               	clrf	7	;volatile
   730  0098                     l1047:
   731                           
   732                           ;main.c: 125:     TRISD = 0x00;
   733  0098  0188               	clrf	8	;volatile
   734  0099                     l1049:
   735                           
   736                           ;main.c: 126:     TRISE = 0x00;
   737  0099  0189               	clrf	9	;volatile
   738  009A                     l1051:
   739                           
   740                           ;main.c: 129:     PORTA = 0x00;
   741  009A  1283               	bcf	3,5	;RP0=0, select bank0
   742  009B  1303               	bcf	3,6	;RP1=0, select bank0
   743  009C  0185               	clrf	5	;volatile
   744  009D                     l1053:
   745                           
   746                           ;main.c: 130:     PORTB = 0x00;
   747  009D  0186               	clrf	6	;volatile
   748  009E                     l1055:
   749                           
   750                           ;main.c: 131:     PORTC = 0x00;
   751  009E  0187               	clrf	7	;volatile
   752  009F                     l1057:
   753                           
   754                           ;main.c: 132:     PORTD = 0x00;
   755  009F  0188               	clrf	8	;volatile
   756  00A0                     l1059:
   757                           
   758                           ;main.c: 133:     PORTE = 0x00;
   759  00A0  0189               	clrf	9	;volatile
   760  00A1                     l1061:
   761                           
   762                           ;main.c: 136:     OSCCONbits.IRCF2 = 0;
   763  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   764  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   765  00A3  130F               	bcf	15,6	;volatile
   766  00A4                     l1063:
   767                           
   768                           ;main.c: 137:     OSCCONbits.IRCF1 = 1;
   769  00A4  168F               	bsf	15,5	;volatile
   770  00A5                     l1065:
   771                           
   772                           ;main.c: 138:     OSCCONbits.IRCF0 = 0;
   773  00A5  120F               	bcf	15,4	;volatile
   774  00A6                     l1067:
   775                           
   776                           ;main.c: 139:     OSCCONbits.SCS = 1;
   777  00A6  140F               	bsf	15,0	;volatile
   778  00A7                     l1069:
   779                           
   780                           ;main.c: 142:     OPTION_REGbits.T0CS = 0;
   781  00A7  1281               	bcf	1,5	;volatile
   782  00A8                     l1071:
   783                           
   784                           ;main.c: 143:     OPTION_REGbits.PSA = 0;
   785  00A8  1181               	bcf	1,3	;volatile
   786  00A9                     l1073:
   787                           
   788                           ;main.c: 144:     OPTION_REGbits.PS2 = 1;
   789  00A9  1501               	bsf	1,2	;volatile
   790  00AA                     l1075:
   791                           
   792                           ;main.c: 145:     OPTION_REGbits.PS1 = 1;
   793  00AA  1481               	bsf	1,1	;volatile
   794  00AB                     l1077:
   795                           
   796                           ;main.c: 146:     OPTION_REGbits.PS0 = 1;
   797  00AB  1401               	bsf	1,0	;volatile
   798  00AC                     l1079:
   799                           
   800                           ;main.c: 149:     OPTION_REGbits.nRBPU = 0;
   801  00AC  1381               	bcf	1,7	;volatile
   802  00AD                     l1081:
   803                           
   804                           ;main.c: 150:     WPUB = 0b00000011;
   805  00AD  3003               	movlw	3
   806  00AE  0095               	movwf	21	;volatile
   807  00AF                     l1083:
   808                           
   809                           ;main.c: 151:     IOCBbits.IOCB0 = 1;
   810  00AF  1416               	bsf	22,0	;volatile
   811  00B0                     l1085:
   812                           
   813                           ;main.c: 152:     IOCBbits.IOCB1 = 1;
   814  00B0  1496               	bsf	22,1	;volatile
   815  00B1                     l1087:
   816                           
   817                           ;main.c: 155:     INTCONbits.GIE = 1;
   818  00B1  178B               	bsf	11,7	;volatile
   819  00B2                     l1089:
   820                           
   821                           ;main.c: 156:     INTCONbits.RBIF = 1;
   822  00B2  140B               	bsf	11,0	;volatile
   823  00B3                     l1091:
   824                           
   825                           ;main.c: 157:     INTCONbits.RBIE = 1;
   826  00B3  158B               	bsf	11,3	;volatile
   827  00B4                     l1093:
   828                           
   829                           ;main.c: 158:     INTCONbits.PEIE = 1;
   830  00B4  170B               	bsf	11,6	;volatile
   831  00B5                     l1095:
   832                           
   833                           ;main.c: 159:     INTCONbits.T0IF = 0;
   834  00B5  110B               	bcf	11,2	;volatile
   835  00B6                     l1097:
   836                           
   837                           ;main.c: 160:     PIE1bits.ADIE = 1;
   838  00B6  170C               	bsf	12,6	;volatile
   839  00B7                     l1099:
   840                           
   841                           ;main.c: 161:     PIR1bits.ADIF = 0;
   842  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   843  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   844  00B9  130C               	bcf	12,6	;volatile
   845  00BA                     l1101:
   846                           
   847                           ;main.c: 164:     ADC_canal0();
   848  00BA  120A  118A  2130  120A  118A  	fcall	_ADC_canal0
   849  00BF                     l109:
   850  00BF  0008               	return
   851  00C0                     __end_of_setup:
   852                           
   853                           	psect	text2
   854  0130                     __ptext2:	
   855 ;; *************** function _ADC_canal0 *****************
   856 ;; Defined at:
   857 ;;		line 6 in file "ADC.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    2
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_setup
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _ADC_canal0
   887  0130                     _ADC_canal0:
   888  0130                     l1019:	
   889                           ;incstack = 0
   890                           ; Regs used in _ADC_canal0: [wreg+status,2+status,0]
   891                           
   892                           
   893                           ;ADC.c: 8:     ADCON0bits.CHS = 0;
   894  0130  30C3               	movlw	-61
   895  0131  1283               	bcf	3,5	;RP0=0, select bank0
   896  0132  1303               	bcf	3,6	;RP1=0, select bank0
   897  0133  059F               	andwf	31,f	;volatile
   898  0134                     l1021:
   899                           
   900                           ;ADC.c: 9:     ADCON0bits.ADCS1 = 1;
   901  0134  179F               	bsf	31,7	;volatile
   902  0135                     l1023:
   903                           
   904                           ;ADC.c: 10:     ADCON0bits.ADCS0 = 1;
   905  0135  171F               	bsf	31,6	;volatile
   906  0136                     l1025:
   907                           
   908                           ;ADC.c: 11:     ADCON0bits.ADON = 1;
   909  0136  141F               	bsf	31,0	;volatile
   910  0137                     l1027:
   911                           
   912                           ;ADC.c: 13:     ADCON1bits.ADFM = 0;
   913  0137  1683               	bsf	3,5	;RP0=1, select bank1
   914  0138  1303               	bcf	3,6	;RP1=0, select bank1
   915  0139  139F               	bcf	31,7	;volatile
   916  013A                     l1029:
   917                           
   918                           ;ADC.c: 14:     ADCON1bits.VCFG0 = 0;
   919  013A  121F               	bcf	31,4	;volatile
   920  013B                     l1031:
   921                           
   922                           ;ADC.c: 15:     ADCON1bits.VCFG1 = 0;
   923  013B  129F               	bcf	31,5	;volatile
   924  013C                     l124:
   925  013C  0008               	return
   926  013D                     __end_of_ADC_canal0:
   927                           
   928                           	psect	text3
   929  00F7                     __ptext3:	
   930 ;; *************** function _nibbles_setup *****************
   931 ;; Defined at:
   932 ;;		line 169 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  display         1    wreg     unsigned char 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  display         1    2[BANK0 ] unsigned char 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      unsigned char 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   946 ;;      Params:         0       0       0       0       0
   947 ;;      Locals:         0       1       0       0       0
   948 ;;      Temps:          0       2       0       0       0
   949 ;;      Totals:         0       3       0       0       0
   950 ;;Total ram usage:        3 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    2
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _nibbles_setup
   962  00F7                     _nibbles_setup:
   963                           
   964                           ;incstack = 0
   965                           ; Regs used in _nibbles_setup: [wreg+status,2+status,0]
   966                           ;nibbles_setup@display stored from wreg
   967  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   968  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   969  00F9  00B5               	movwf	nibbles_setup@display
   970  00FA                     l961:
   971                           
   972                           ;main.c: 170:     nibble1 = display&0x0F;
   973  00FA  0835               	movf	nibbles_setup@display,w
   974  00FB  390F               	andlw	15
   975  00FC  00B3               	movwf	??_nibbles_setup
   976  00FD  0833               	movf	??_nibbles_setup,w
   977  00FE  00B2               	movwf	_nibble1
   978  00FF                     l963:
   979                           
   980                           ;main.c: 171:     nibble2 = (display>>4)&0x0F;
   981  00FF  0835               	movf	nibbles_setup@display,w
   982  0100  00B3               	movwf	??_nibbles_setup
   983  0101  3004               	movlw	4
   984  0102                     u115:
   985  0102  1003               	clrc
   986  0103  0CB3               	rrf	??_nibbles_setup,f
   987  0104  3EFF               	addlw	-1
   988  0105  1D03               	skipz
   989  0106  2902               	goto	u115
   990  0107  0833               	movf	??_nibbles_setup,w
   991  0108  390F               	andlw	15
   992  0109  00B4               	movwf	??_nibbles_setup+1
   993  010A  0834               	movf	??_nibbles_setup+1,w
   994  010B  00FD               	movwf	_nibble2
   995  010C                     l112:
   996  010C  0008               	return
   997  010D                     __end_of_nibbles_setup:
   998                           
   999                           	psect	text4
  1000  00E0                     __ptext4:	
  1001 ;; *************** function _alarma *****************
  1002 ;; Defined at:
  1003 ;;		line 176 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          0       1       0       0       0
  1020 ;;      Totals:         0       1       0       0       0
  1021 ;;Total ram usage:        1 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    2
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _alarma
  1033  00E0                     _alarma:
  1034  00E0                     l967:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _alarma: [wreg]
  1037                           
  1038                           
  1039                           ;main.c: 177:     if (ADC < PORTC){
  1040  00E0  0878               	movf	_ADC+1,w
  1041  00E1  3A80               	xorlw	128
  1042  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1043  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1044  00E4  00B3               	movwf	??_alarma
  1045  00E5  3080               	movlw	128
  1046  00E6  0233               	subwf	??_alarma,w
  1047  00E7  1D03               	skipz
  1048  00E8  28EB               	goto	u125
  1049  00E9  0807               	movf	7,w	;volatile
  1050  00EA  0277               	subwf	_ADC,w
  1051  00EB                     u125:
  1052  00EB  1803               	skipnc
  1053  00EC  28EE               	goto	u121
  1054  00ED  28EF               	goto	u120
  1055  00EE                     u121:
  1056  00EE  28F3               	goto	l115
  1057  00EF                     u120:
  1058  00EF                     l969:
  1059                           
  1060                           ;main.c: 178:         RB7 = 0;
  1061  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1062  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1063  00F1  1386               	bcf	6,7	;volatile
  1064                           
  1065                           ;main.c: 179:     }
  1066  00F2  28F6               	goto	l117
  1067  00F3                     l115:	
  1068                           ;main.c: 180:     else {
  1069                           
  1070                           
  1071                           ;main.c: 181:         RB7 = 1;
  1072  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1073  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1074  00F5  1786               	bsf	6,7	;volatile
  1075  00F6                     l117:
  1076  00F6  0008               	return
  1077  00F7                     __end_of_alarma:
  1078                           
  1079                           	psect	text5
  1080  0029                     __ptext5:	
  1081 ;; *************** function _isr *****************
  1082 ;; Defined at:
  1083 ;;		line 46 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0
  1099 ;;      Temps:          5       0       0       0       0
  1100 ;;      Totals:         5       0       0       0       0
  1101 ;;Total ram usage:        5 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    1
  1104 ;; This function calls:
  1105 ;;		_tabla
  1106 ;; This function is called by:
  1107 ;;		Interrupt level 1
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _isr
  1113  0029                     _isr:
  1114  0029                     i1l971:
  1115                           
  1116                           ;main.c: 49:        if(PIR1bits.ADIF == 1)
  1117  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1118  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1119  002B  1F0C               	btfss	12,6	;volatile
  1120  002C  282E               	goto	u13_21
  1121  002D  282F               	goto	u13_20
  1122  002E                     u13_21:
  1123  002E  2840               	goto	i1l979
  1124  002F                     u13_20:
  1125  002F                     i1l973:
  1126                           
  1127                           ;main.c: 50:        {;main.c: 51:            if(ADCON0bits.CHS == 0) {
  1128  002F  0C1F               	rrf	31,w	;volatile
  1129  0030  00F2               	movwf	??_isr
  1130  0031  0C72               	rrf	??_isr,w
  1131  0032  390F               	andlw	15
  1132  0033  3A00               	xorlw	0
  1133  0034  1D03               	skipz
  1134  0035  2837               	goto	u14_21
  1135  0036  2838               	goto	u14_20
  1136  0037                     u14_21:
  1137  0037  283F               	goto	i1l977
  1138  0038                     u14_20:
  1139  0038                     i1l975:
  1140                           
  1141                           ;main.c: 52:                ADC = ADRESH;
  1142  0038  081E               	movf	30,w	;volatile
  1143  0039  00F2               	movwf	??_isr
  1144  003A  01F3               	clrf	??_isr+1
  1145  003B  0872               	movf	??_isr,w
  1146  003C  00F7               	movwf	_ADC
  1147  003D  0873               	movf	??_isr+1,w
  1148  003E  00F8               	movwf	_ADC+1
  1149  003F                     i1l977:
  1150                           
  1151                           ;main.c: 54:            PIR1bits.ADIF = 0;
  1152  003F  130C               	bcf	12,6	;volatile
  1153  0040                     i1l979:
  1154                           
  1155                           ;main.c: 56:     if(T0IF == 1)
  1156  0040  1D0B               	btfss	11,2	;volatile
  1157  0041  2843               	goto	u15_21
  1158  0042  2844               	goto	u15_20
  1159  0043                     u15_21:
  1160  0043  286A               	goto	i1l999
  1161  0044                     u15_20:
  1162  0044                     i1l981:
  1163                           
  1164                           ;main.c: 57:     {;main.c: 58:         RE0 = 0;
  1165  0044  1009               	bcf	9,0	;volatile
  1166                           
  1167                           ;main.c: 59:         RE1 = 0;
  1168  0045  1089               	bcf	9,1	;volatile
  1169  0046                     i1l983:
  1170                           
  1171                           ;main.c: 60:         if (bandera == 1){
  1172  0046  0330               	decf	_bandera,w
  1173  0047  0431               	iorwf	_bandera+1,w
  1174  0048  1D03               	btfss	3,2
  1175  0049  284B               	goto	u16_21
  1176  004A  284C               	goto	u16_20
  1177  004B                     u16_21:
  1178  004B  2859               	goto	i1l92
  1179  004C                     u16_20:
  1180  004C                     i1l985:
  1181                           
  1182                           ;main.c: 61:             PORTEbits.RE0 = 1;
  1183  004C  1409               	bsf	9,0	;volatile
  1184  004D                     i1l987:
  1185                           
  1186                           ;main.c: 62:             PORTD = tabla(nibble2);
  1187  004D  087D               	movf	_nibble2,w
  1188  004E  120A  118A  213D  120A  118A  	fcall	_tabla
  1189  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0055  0088               	movwf	8	;volatile
  1192  0056                     i1l989:
  1193                           
  1194                           ;main.c: 63:             bandera = 0;
  1195  0056  01B0               	clrf	_bandera
  1196  0057  01B1               	clrf	_bandera+1
  1197                           
  1198                           ;main.c: 64:         }
  1199  0058  2867               	goto	i1l995
  1200  0059                     i1l92:	
  1201                           ;main.c: 65:         else {
  1202                           
  1203                           
  1204                           ;main.c: 66:             PORTEbits.RE1 = 1;
  1205  0059  1489               	bsf	9,1	;volatile
  1206  005A                     i1l991:
  1207                           
  1208                           ;main.c: 67:             PORTD = tabla(nibble1);
  1209  005A  0832               	movf	_nibble1,w
  1210  005B  120A  118A  213D  120A  118A  	fcall	_tabla
  1211  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0062  0088               	movwf	8	;volatile
  1214  0063                     i1l993:
  1215                           
  1216                           ;main.c: 68:             bandera = 1;
  1217  0063  3001               	movlw	1
  1218  0064  00B0               	movwf	_bandera
  1219  0065  3000               	movlw	0
  1220  0066  00B1               	movwf	_bandera+1
  1221  0067                     i1l995:
  1222                           
  1223                           ;main.c: 71:         INTCONbits.T0IF = 0;
  1224  0067  110B               	bcf	11,2	;volatile
  1225  0068                     i1l997:
  1226                           
  1227                           ;main.c: 72:         TMR0 = 255;
  1228  0068  30FF               	movlw	255
  1229  0069  0081               	movwf	1	;volatile
  1230  006A                     i1l999:
  1231                           
  1232                           ;main.c: 75:     if (RBIF == 1)
  1233  006A  1C0B               	btfss	11,0	;volatile
  1234  006B  286D               	goto	u17_21
  1235  006C  286E               	goto	u17_20
  1236  006D                     u17_21:
  1237  006D  287D               	goto	i1l97
  1238  006E                     u17_20:
  1239  006E                     i1l1001:
  1240                           
  1241                           ;main.c: 76:     {;main.c: 77:         if (PORTBbits.RB0 == 0)
  1242  006E  1806               	btfsc	6,0	;volatile
  1243  006F  2871               	goto	u18_21
  1244  0070  2872               	goto	u18_20
  1245  0071                     u18_21:
  1246  0071  2875               	goto	i1l1005
  1247  0072                     u18_20:
  1248  0072                     i1l1003:
  1249                           
  1250                           ;main.c: 78:         {;main.c: 79:             PORTC = PORTC + 1;
  1251  0072  0807               	movf	7,w	;volatile
  1252  0073  3E01               	addlw	1
  1253  0074  0087               	movwf	7	;volatile
  1254  0075                     i1l1005:
  1255                           
  1256                           ;main.c: 81:         if (PORTBbits.RB1 == 0)
  1257  0075  1886               	btfsc	6,1	;volatile
  1258  0076  2878               	goto	u19_21
  1259  0077  2879               	goto	u19_20
  1260  0078                     u19_21:
  1261  0078  287C               	goto	i1l1009
  1262  0079                     u19_20:
  1263  0079                     i1l1007:
  1264                           
  1265                           ;main.c: 82:         {;main.c: 83:             PORTC = PORTC - 1;
  1266  0079  0807               	movf	7,w	;volatile
  1267  007A  3EFF               	addlw	255
  1268  007B  0087               	movwf	7	;volatile
  1269  007C                     i1l1009:
  1270                           
  1271                           ;main.c: 85:         INTCONbits.RBIF = 0;
  1272  007C  100B               	bcf	11,0	;volatile
  1273  007D                     i1l97:
  1274  007D  0876               	movf	??_isr+4,w
  1275  007E  008A               	movwf	10
  1276  007F  0875               	movf	??_isr+3,w
  1277  0080  0084               	movwf	4
  1278  0081  0E74               	swapf	??_isr+2,w
  1279  0082  0083               	movwf	3
  1280  0083  0EFE               	swapf	btemp,f
  1281  0084  0E7E               	swapf	btemp,w
  1282  0085  0009               	retfie
  1283  0086                     __end_of_isr:
  1284                           
  1285                           	psect	intentry
  1286  0004                     __pintentry:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1289                           
  1290  0004                     interrupt_function:
  1291  007E                     saved_w	set	btemp
  1292  0004  00FE               	movwf	btemp
  1293  0005  0E03               	swapf	3,w
  1294  0006  00F4               	movwf	??_isr+2
  1295  0007  0804               	movf	4,w
  1296  0008  00F5               	movwf	??_isr+3
  1297  0009  080A               	movf	10,w
  1298  000A  00F6               	movwf	??_isr+4
  1299  000B  120A  118A  2829   	ljmp	_isr
  1300                           
  1301                           	psect	text6
  1302  013D                     __ptext6:	
  1303 ;; *************** function _tabla *****************
  1304 ;; Defined at:
  1305 ;;		line 15 in file "display7seg.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  hex             1    wreg     unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  hex             1    1[COMMON] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      unsigned char 
  1312 ;; Registers used:
  1313 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0
  1321 ;;      Temps:          1       0       0       0       0
  1322 ;;      Totals:         2       0       0       0       0
  1323 ;;Total ram usage:        2 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_isr
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _tabla
  1334  013D                     _tabla:
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1338                           ;tabla@hex stored from wreg
  1339  013D  00F1               	movwf	tabla@hex
  1340  013E                     i1l885:
  1341                           
  1342                           ;display7seg.c: 16:     trad = tab[hex];
  1343  013E  0871               	movf	tabla@hex,w
  1344  013F  3E20               	addlw	(low (_tab| 0))& (0+255)
  1345  0140  0084               	movwf	4
  1346  0141  1383               	bcf	3,7	;select IRP bank0
  1347  0142  0800               	movf	0,w
  1348  0143  00F0               	movwf	??_tabla
  1349  0144  0870               	movf	??_tabla,w
  1350  0145  00FB               	movwf	_trad
  1351  0146                     i1l887:
  1352                           
  1353                           ;display7seg.c: 17:     return trad;
  1354  0146  087B               	movf	_trad,w
  1355  0147                     i1l131:
  1356  0147  0008               	return
  1357  0148                     __end_of_tabla:
  1358  007E                     btemp	set	126	;btemp
  1359  007E                     wtemp0	set	126
  1360                           
  1361                           	psect	config
  1362                           
  1363                           ;Config register CONFIG1 @ 0x2007
  1364                           ;	Oscillator Selection bits
  1365                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1366                           ;	Watchdog Timer Enable bit
  1367                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1368                           ;	Power-up Timer Enable bit
  1369                           ;	PWRTE = OFF, PWRT disabled
  1370                           ;	RE3/MCLR pin function select bit
  1371                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1372                           ;	Code Protection bit
  1373                           ;	CP = OFF, Program memory code protection is disabled
  1374                           ;	Data Code Protection bit
  1375                           ;	CPD = OFF, Data memory code protection is disabled
  1376                           ;	Brown Out Reset Selection bits
  1377                           ;	BOREN = OFF, BOR disabled
  1378                           ;	Internal External Switchover bit
  1379                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1380                           ;	Fail-Safe Clock Monitor Enabled bit
  1381                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1382                           ;	Low Voltage Programming Enable bit
  1383                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1384                           ;	In-Circuit Debugger Mode bit
  1385                           ;	DEBUG = 0x1, unprogrammed default
  1386  2007                     	org	8199
  1387  2007  20D4               	dw	8404
  1388                           
  1389                           ;Config register CONFIG2 @ 0x2008
  1390                           ;	Brown-out Reset Selection bit
  1391                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1392                           ;	Flash Program Memory Self Write Enable bits
  1393                           ;	WRT = OFF, Write protection off
  1394  2008                     	org	8200
  1395  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         6
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80      3      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tabla

Critical Paths under _main in BANK0

    _main->_nibbles_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      44
                             _alarma
                      _nibbles_setup
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _ADC_canal0
 ---------------------------------------------------------------------------------
 (2) _ADC_canal0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nibbles_setup                                        3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _alarma                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0      22
                                              2 COMMON     5     5      0
                              _tabla
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _alarma
   _nibbles_setup
   _setup
     _ADC_canal0

 _isr (ROOT)
   _tabla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 20 11:59:27 2021

                      pc 0002                       _GO 00F9                       fsr 0004  
                    l102 00C5                      l112 010C                      l115 00F3  
                    l124 013C                      l117 00F6                      l109 00BF  
                    _ADC 0077                      l961 00FA                      l963 00FF  
                    l967 00E0                      l969 00EF                      _RE0 0048  
                    _RE1 0049                      _RB7 0037                      u120 00EF  
                    u121 00EE                      u210 00D1                      u115 0102  
                    u211 00D0                      u125 00EB                      _tab 0020  
                    _isr 0029                      fsr0 0004                      indf 0000  
    __size_of_ADC_canal0 000D                     l1021 0134                     l1101 00BA  
                   l1031 013B                     l1023 0135                     l1103 00C0  
                   l1025 0136                     l1041 0095                     l1033 0086  
                   l1105 00CB                     l1027 0137                     l1019 0130  
                   l1051 009A                     l1043 0096                     l1035 0090  
                   l1107 00D1                     l1029 013A                     l1061 00A1  
                   l1053 009D                     l1045 0097                     l1037 0091  
                   l1109 00D7                     l1071 00A8                     l1063 00A4  
                   l1055 009E                     l1047 0098                     l1039 0094  
                   l1081 00AD                     l1073 00A9                     l1065 00A5  
                   l1057 009F                     l1049 0099                     l1091 00B3  
                   l1083 00AF                     l1075 00AA                     l1067 00A6  
                   l1059 00A0                     l1093 00B4                     l1085 00B0  
                   l1077 00AB                     l1069 00A7                     l1095 00B5  
                   l1087 00B1                     l1079 00AC                     l1097 00B6  
                   l1089 00B2                     l1099 00B7                     ?_isr 0070  
                   _T0IF 005A                     _RBIF 0058                     i1l92 0059  
                   i1l97 007D                     _TMR0 0001                     _WPUB 0095  
                   _main 00C0                     _trad 007B                     btemp 007E  
                   start 000E                    ??_isr 0072                    ?_main 0070  
                  _ANSEL 0188                    i1l131 0147                    i1l971 0029  
                  i1l885 013E                    i1l981 0044                    i1l973 002F  
                  i1l887 0146                    i1l991 005A                    i1l983 0046  
                  i1l975 0038                    i1l993 0063                    i1l985 004C  
                  i1l977 003F                    i1l995 0067                    i1l987 004D  
                  i1l979 0040                    i1l997 0068                    i1l989 0056  
                  i1l999 006A                    u13_20 002F                    u13_21 002E  
                  u14_20 0038                    u14_21 0037                    u15_20 0044  
                  u15_21 0043                    u16_20 004C                    u16_21 004B  
                  u17_20 006E                    u17_21 006D                    u18_20 0072  
                  u18_21 0071                    u19_20 0079                    u19_21 0078  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _tabla 013D  
                  _multi 0079                    _setup 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 00E0                   ??_main 0036   __size_of_nibbles_setup 0016  
                 ?_tabla 0070                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1001 006E                   i1l1003 0072  
                 i1l1005 0075                   i1l1007 0079                   i1l1009 007C  
           ??_ADC_canal0 0033                   _alarma 00E0                   saved_w 007E  
     __end_of_ADC_canal0 013D  __end_of__initialization 0025            _nibbles_setup 00F7  
         __pcstackCOMMON 0070             __pidataBANK0 0120            __end_of_tabla 0148  
          __end_of_setup 00C0           _OPTION_REGbits 0081                  ??_tabla 0070  
                ??_setup 0033           ?_nibbles_setup 0070               __pnvCOMMON 007D  
             __pmaintext 00C0                  ?_alarma 0070               __pintentry 0004  
        __size_of_alarma 0017                  _bandera 0030                  __ptext1 0086  
                __ptext2 0130                  __ptext3 00F7                  __ptext4 00E0  
                __ptext5 0029                  __ptext6 013D                  _display 007C  
                _nibble1 0032                  _nibble2 007D             __size_of_isr 005D  
   end_of_initialization 0025          ??_nibbles_setup 0033     nibbles_setup@display 0035  
              _PORTBbits 0006                _PORTEbits 0009                _TRISAbits 0085  
              _TRISBbits 0086           __end_of_alarma 00F7      start_initialization 0011  
            __end_of_isr 0086               init_fetch0 010D                 ??_alarma 0033  
            __pdataBANK0 0020              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0033                __pnvBANK0 0030           __size_of_tabla 000B  
         __size_of_setup 003A        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F    __end_of_nibbles_setup 010D               _ADC_canal0 0130  
          __size_of_main 0020               _INTCONbits 000B                 init_ram0 0111  
               tabla@hex 0071                 intlevel1 0000              ?_ADC_canal0 0070  
             _OSCCONbits 008F  
