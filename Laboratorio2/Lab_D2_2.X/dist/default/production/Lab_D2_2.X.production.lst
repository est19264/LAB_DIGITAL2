

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 18:03:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	psect	text3_split_1,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F887 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  0105                     	;# 
   146  0107                     	;# 
   147  0108                     	;# 
   148  0109                     	;# 
   149  010C                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0185                     	;# 
   155  0187                     	;# 
   156  0188                     	;# 
   157  0189                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  008F                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  0105                     	;# 
   224  0107                     	;# 
   225  0108                     	;# 
   226  0109                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  0185                     	;# 
   233  0187                     	;# 
   234  0188                     	;# 
   235  0189                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001D                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  0081                     	;# 
   274  0085                     	;# 
   275  0086                     	;# 
   276  0087                     	;# 
   277  0088                     	;# 
   278  0089                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0094                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0097                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  0105                     	;# 
   302  0107                     	;# 
   303  0108                     	;# 
   304  0109                     	;# 
   305  010C                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  010F                     	;# 
   310  0185                     	;# 
   311  0187                     	;# 
   312  0188                     	;# 
   313  0189                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  0088                     	;# 
   356  0089                     	;# 
   357  008C                     	;# 
   358  008D                     	;# 
   359  008E                     	;# 
   360  008F                     	;# 
   361  0090                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  0105                     	;# 
   380  0107                     	;# 
   381  0108                     	;# 
   382  0109                     	;# 
   383  010C                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010F                     	;# 
   388  0185                     	;# 
   389  0187                     	;# 
   390  0188                     	;# 
   391  0189                     	;# 
   392  018C                     	;# 
   393  018D                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  000E                     	;# 
   409  000E                     	;# 
   410  000F                     	;# 
   411  0010                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0015                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001B                     	;# 
   425  001C                     	;# 
   426  001D                     	;# 
   427  001E                     	;# 
   428  001F                     	;# 
   429  0081                     	;# 
   430  0085                     	;# 
   431  0086                     	;# 
   432  0087                     	;# 
   433  0088                     	;# 
   434  0089                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  008F                     	;# 
   439  0090                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0094                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  0105                     	;# 
   458  0107                     	;# 
   459  0108                     	;# 
   460  0109                     	;# 
   461  010C                     	;# 
   462  010C                     	;# 
   463  010D                     	;# 
   464  010E                     	;# 
   465  010F                     	;# 
   466  0185                     	;# 
   467  0187                     	;# 
   468  0188                     	;# 
   469  0189                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472                           
   473                           	psect	strings
   474  0800                     __pstrings:
   475  0800                     stringtab:
   476  0800                     __stringtab:
   477                           
   478                           ;	String table - string pointers are 1 byte each
   479  0800  1BFF               	btfsc	btemp+1,7
   480  0801  280A               	ljmp	stringcode
   481  0802  1383               	bcf	3,7
   482  0803  187F               	btfsc	btemp+1,0
   483  0804  1783               	bsf	3,7
   484  0805  0800               	movf	0,w
   485  0806  0A84               	incf	4,f
   486  0807  1903               	skipnz
   487  0808  0AFF               	incf	btemp+1,f
   488  0809  0008               	return
   489  080A                     stringcode:
   490  080A                     stringdir:
   491  080A  3008               	movlw	high stringdir
   492  080B  008A               	movwf	10
   493  080C  0804               	movf	4,w
   494  080D  0A84               	incf	4,f
   495  080E  0782               	addwf	2,f
   496  080F                     __stringbase:
   497  080F  3400               	retlw	0
   498  0810                     __end_of__stringtab:
   499  0810                     __powers_:
   500  0810  3400               	retlw	0
   501  0811  3400               	retlw	0
   502  0812  3480               	retlw	128
   503  0813  343F               	retlw	63
   504  0814  3400               	retlw	0
   505  0815  3400               	retlw	0
   506  0816  3420               	retlw	32
   507  0817  3441               	retlw	65
   508  0818  3400               	retlw	0
   509  0819  3400               	retlw	0
   510  081A  34C8               	retlw	200
   511  081B  3442               	retlw	66
   512  081C  3400               	retlw	0
   513  081D  3400               	retlw	0
   514  081E  347A               	retlw	122
   515  081F  3444               	retlw	68
   516  0820  3400               	retlw	0
   517  0821  3440               	retlw	64
   518  0822  341C               	retlw	28
   519  0823  3446               	retlw	70
   520  0824  3400               	retlw	0
   521  0825  3450               	retlw	80
   522  0826  34C3               	retlw	195
   523  0827  3447               	retlw	71
   524  0828  3400               	retlw	0
   525  0829  3424               	retlw	36
   526  082A  3474               	retlw	116
   527  082B  3449               	retlw	73
   528  082C  3480               	retlw	128
   529  082D  3496               	retlw	150
   530  082E  3418               	retlw	24
   531  082F  344B               	retlw	75
   532  0830  3420               	retlw	32
   533  0831  34BC               	retlw	188
   534  0832  34BE               	retlw	190
   535  0833  344C               	retlw	76
   536  0834  3428               	retlw	40
   537  0835  346B               	retlw	107
   538  0836  346E               	retlw	110
   539  0837  344E               	retlw	78
   540  0838  34F9               	retlw	249
   541  0839  3402               	retlw	2
   542  083A  3415               	retlw	21
   543  083B  3450               	retlw	80
   544  083C  34EC               	retlw	236
   545  083D  3478               	retlw	120
   546  083E  34AD               	retlw	173
   547  083F  3460               	retlw	96
   548  0840  34CA               	retlw	202
   549  0841  34F2               	retlw	242
   550  0842  3449               	retlw	73
   551  0843  3471               	retlw	113
   552  0844                     __end_of__powers_:
   553  0844                     __npowers_:
   554  0844  3400               	retlw	0
   555  0845  3400               	retlw	0
   556  0846  3480               	retlw	128
   557  0847  343F               	retlw	63
   558  0848  34CD               	retlw	205
   559  0849  34CC               	retlw	204
   560  084A  34CC               	retlw	204
   561  084B  343D               	retlw	61
   562  084C  340A               	retlw	10
   563  084D  34D7               	retlw	215
   564  084E  3423               	retlw	35
   565  084F  343C               	retlw	60
   566  0850  346F               	retlw	111
   567  0851  3412               	retlw	18
   568  0852  3483               	retlw	131
   569  0853  343A               	retlw	58
   570  0854  3417               	retlw	23
   571  0855  34B7               	retlw	183
   572  0856  34D1               	retlw	209
   573  0857  3438               	retlw	56
   574  0858  34AC               	retlw	172
   575  0859  34C5               	retlw	197
   576  085A  3427               	retlw	39
   577  085B  3437               	retlw	55
   578  085C  34BD               	retlw	189
   579  085D  3437               	retlw	55
   580  085E  3486               	retlw	134
   581  085F  3435               	retlw	53
   582  0860  3495               	retlw	149
   583  0861  34BF               	retlw	191
   584  0862  34D6               	retlw	214
   585  0863  3433               	retlw	51
   586  0864  3477               	retlw	119
   587  0865  34CC               	retlw	204
   588  0866  342B               	retlw	43
   589  0867  3432               	retlw	50
   590  0868  345F               	retlw	95
   591  0869  3470               	retlw	112
   592  086A  3489               	retlw	137
   593  086B  3430               	retlw	48
   594  086C  34FF               	retlw	255
   595  086D  34E6               	retlw	230
   596  086E  34DB               	retlw	219
   597  086F  342E               	retlw	46
   598  0870  3408               	retlw	8
   599  0871  34E5               	retlw	229
   600  0872  343C               	retlw	60
   601  0873  341E               	retlw	30
   602  0874  3460               	retlw	96
   603  0875  3442               	retlw	66
   604  0876  34A2               	retlw	162
   605  0877  340D               	retlw	13
   606  0878                     __end_of__npowers_:
   607  0878                     _dpowers:
   608  0878  3401               	retlw	1
   609  0879  3400               	retlw	0
   610  087A  3400               	retlw	0
   611  087B  3400               	retlw	0
   612  087C  340A               	retlw	10
   613  087D  3400               	retlw	0
   614  087E  3400               	retlw	0
   615  087F  3400               	retlw	0
   616  0880  3464               	retlw	100
   617  0881  3400               	retlw	0
   618  0882  3400               	retlw	0
   619  0883  3400               	retlw	0
   620  0884  34E8               	retlw	232
   621  0885  3403               	retlw	3
   622  0886  3400               	retlw	0
   623  0887  3400               	retlw	0
   624  0888  3410               	retlw	16
   625  0889  3427               	retlw	39
   626  088A  3400               	retlw	0
   627  088B  3400               	retlw	0
   628  088C  34A0               	retlw	160
   629  088D  3486               	retlw	134
   630  088E  3401               	retlw	1
   631  088F  3400               	retlw	0
   632  0890  3440               	retlw	64
   633  0891  3442               	retlw	66
   634  0892  340F               	retlw	15
   635  0893  3400               	retlw	0
   636  0894  3480               	retlw	128
   637  0895  3496               	retlw	150
   638  0896  3498               	retlw	152
   639  0897  3400               	retlw	0
   640  0898  3400               	retlw	0
   641  0899  34E1               	retlw	225
   642  089A  34F5               	retlw	245
   643  089B  3405               	retlw	5
   644  089C  3400               	retlw	0
   645  089D  34CA               	retlw	202
   646  089E  349A               	retlw	154
   647  089F  343B               	retlw	59
   648  08A0                     __end_of_dpowers:
   649  0019                     _TXREG	set	25
   650  001A                     _RCREG	set	26
   651  0018                     _RCSTAbits	set	24
   652  001E                     _ADRESH	set	30
   653  001F                     _ADCON0bits	set	31
   654  000C                     _PIR1bits	set	12
   655  000B                     _INTCONbits	set	11
   656  0009                     _PORTE	set	9
   657  0008                     _PORTD	set	8
   658  0007                     _PORTC	set	7
   659  0005                     _PORTA	set	5
   660  0065                     _RCIF	set	101
   661  0049                     _RE1	set	73
   662  0048                     _RE0	set	72
   663  0047                     _RD7	set	71
   664  0046                     _RD6	set	70
   665  0045                     _RD5	set	69
   666  0044                     _RD4	set	68
   667  0043                     _RD3	set	67
   668  0042                     _RD2	set	66
   669  0041                     _RD1	set	65
   670  0040                     _RD0	set	64
   671  0098                     _TXSTAbits	set	152
   672  0099                     _SPBRG	set	153
   673  009F                     _ADCON1	set	159
   674  008C                     _PIE1bits	set	140
   675  0089                     _TRISE	set	137
   676  0088                     _TRISD	set	136
   677  0085                     _TRISAbits	set	133
   678  04C1                     _TRMT	set	1217
   679  0189                     _ANSELHbits	set	393
   680  0188                     _ANSELbits	set	392
   681  0189                     _ANSELH	set	393
   682  0188                     _ANSEL	set	392
   683  08A0                     STR_2:
   684  08A0  3425               	retlw	37	;'%'
   685  08A1  3432               	retlw	50	;'2'
   686  08A2  342E               	retlw	46	;'.'
   687  08A3  3431               	retlw	49	;'1'
   688  08A4  3466               	retlw	102	;'f'
   689  08A5  3420               	retlw	32	;' '
   690  08A6  3420               	retlw	32	;' '
   691  08A7  3425               	retlw	37	;'%'
   692  08A8  3432               	retlw	50	;'2'
   693  08A9  342E               	retlw	46	;'.'
   694  08AA  3431               	retlw	49	;'1'
   695  08AB  3466               	retlw	102	;'f'
   696  08AC  3420               	retlw	32	;' '
   697  08AD  3420               	retlw	32	;' '
   698  08AE  3425               	retlw	37	;'%'
   699  08AF  3464               	retlw	100	;'d'
   700  08B0  3400               	retlw	0
   701  08B1                     STR_1:
   702  08B1  3453               	retlw	83	;'S'
   703  08B2  3431               	retlw	49	;'1'
   704  08B3  3420               	retlw	32	;' '
   705  08B4  3420               	retlw	32	;' '
   706  08B5  3420               	retlw	32	;' '
   707  08B6  3453               	retlw	83	;'S'
   708  08B7  3432               	retlw	50	;'2'
   709  08B8  3420               	retlw	32	;' '
   710  08B9  3420               	retlw	32	;' '
   711  08BA  3420               	retlw	32	;' '
   712  08BB  3453               	retlw	83	;'S'
   713  08BC  3433               	retlw	51	;'3'
   714  08BD  3400               	retlw	0
   715                           
   716                           	psect	cinit
   717  07EF                     start_initialization:	
   718                           ; #config settings
   719                           
   720  07EF                     __initialization:
   721                           
   722                           ; Clear objects allocated to BANK0
   723  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   724  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   725  07F1  01EE               	clrf	__pbssBANK0& (0+127)
   726  07F2  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   727                           
   728                           ; Clear objects allocated to BANK1
   729  07F3  1383               	bcf	3,7	;select IRP bank0
   730  07F4  30CF               	movlw	low __pbssBANK1
   731  07F5  0084               	movwf	4
   732  07F6  30EE               	movlw	low (__pbssBANK1+31)
   733  07F7  160A  118A  2001  120A  118A  	fcall	clear_ram0
   734  07FC                     end_of_initialization:	
   735                           ;End of C runtime variable initialization code
   736                           
   737  07FC                     __end_of__initialization:
   738  07FC  0183               	clrf	3
   739  07FD  120A  118A  28E2   	ljmp	_main	;jump to C main() function
   740                           
   741                           	psect	bssBANK0
   742  006E                     __pbssBANK0:
   743  006E                     _entregado:
   744  006E                     	ds	1
   745  006F                     _readUSART:
   746  006F                     	ds	1
   747                           
   748                           	psect	bssBANK1
   749  00CF                     __pbssBANK1:
   750  00CF                     _V2:
   751  00CF                     	ds	4
   752  00D3                     _V1:
   753  00D3                     	ds	4
   754  00D7                     _contador:
   755  00D7                     	ds	1
   756  00D8                     _ADC1:
   757  00D8                     	ds	1
   758  00D9                     _ADC0:
   759  00D9                     	ds	1
   760  00DA                     _BUFFER:
   761  00DA                     	ds	20
   762                           
   763                           	psect	clrtext
   764  1001                     clear_ram0:	
   765                           ;	Called with FSR containing the base address, and
   766                           ;	W with the last address+1
   767                           
   768  1001  0064               	clrwdt	;clear the watchdog before getting into this loop
   769  1002                     clrloop0:
   770  1002  0180               	clrf	0	;clear RAM location pointed to by FSR
   771  1003  0A84               	incf	4,f	;increment pointer
   772  1004  0604               	xorwf	4,w	;XOR with final address
   773  1005  1903               	btfsc	3,2	;have we reached the end yet?
   774  1006  3400               	retlw	0	;all done for this memory range, return
   775  1007  0604               	xorwf	4,w	;XOR again to restore value
   776  1008  2802               	goto	clrloop0	;do the next byte
   777                           
   778                           	psect	cstackBANK1
   779  00A0                     __pcstackBANK1:
   780  00A0                     ?_sprintf:
   781  00A0                     sprintf@f:	
   782                           ; 2 bytes @ 0x0
   783                           
   784                           
   785                           ; 1 bytes @ 0x0
   786  00A0                     	ds	11
   787  00AB                     ??_sprintf:
   788                           
   789                           ; 1 bytes @ 0xB
   790  00AB                     	ds	5
   791  00B0                     _sprintf$1147:
   792                           
   793                           ; 4 bytes @ 0x10
   794  00B0                     	ds	4
   795  00B4                     sprintf@ap:
   796                           
   797                           ; 1 bytes @ 0x14
   798  00B4                     	ds	1
   799  00B5                     sprintf@flag:
   800                           
   801                           ; 2 bytes @ 0x15
   802  00B5                     	ds	2
   803  00B7                     sprintf@width:
   804                           
   805                           ; 2 bytes @ 0x17
   806  00B7                     	ds	2
   807  00B9                     sprintf@tmpval:
   808                           
   809                           ; 4 bytes @ 0x19
   810  00B9                     	ds	4
   811  00BD                     sprintf@val:
   812                           
   813                           ; 4 bytes @ 0x1D
   814  00BD                     	ds	4
   815  00C1                     sprintf@eexp:
   816                           
   817                           ; 2 bytes @ 0x21
   818  00C1                     	ds	2
   819  00C3                     sprintf@fval:
   820                           
   821                           ; 4 bytes @ 0x23
   822  00C3                     	ds	4
   823  00C7                     sprintf@sp:
   824                           
   825                           ; 1 bytes @ 0x27
   826  00C7                     	ds	1
   827  00C8                     sprintf@prec:
   828                           
   829                           ; 2 bytes @ 0x28
   830  00C8                     	ds	2
   831  00CA                     sprintf@c:
   832                           
   833                           ; 1 bytes @ 0x2A
   834  00CA                     	ds	1
   835  00CB                     ??_main:
   836                           
   837                           ; 1 bytes @ 0x2B
   838  00CB                     	ds	4
   839                           
   840                           	psect	cstackCOMMON
   841  0070                     __pcstackCOMMON:
   842  0070                     ?_isdigit:
   843  0070                     ?___fleq:	
   844                           ; 1 bit 
   845                           
   846  0070                     ?___flge:	
   847                           ; 1 bit 
   848                           
   849  0070                     ?_setup:	
   850                           ; 1 bit 
   851                           
   852  0070                     ??_setup:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_configLCD:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_clear_LCD:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_configADC:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ??_configADC:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ??_isdigit:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_main:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_pin:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ??_pin:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_CMDs:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_write_char:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?__Umul8_16:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?___wmul:	
   889                           ; 2 bytes @ 0x0
   890                           
   891  0070                     ?___awmod:	
   892                           ; 2 bytes @ 0x0
   893                           
   894  0070                     ?___lwmod:	
   895                           ; 2 bytes @ 0x0
   896                           
   897  0070                     ?__tdiv_to_l_:	
   898                           ; 2 bytes @ 0x0
   899                           
   900  0070                     ?__div_to_l_:	
   901                           ; 4 bytes @ 0x0
   902                           
   903  0070                     ?___lldiv:	
   904                           ; 4 bytes @ 0x0
   905                           
   906  0070                     ?___flneg:	
   907                           ; 4 bytes @ 0x0
   908                           
   909  0070                     ?___xxtofl:	
   910                           ; 4 bytes @ 0x0
   911                           
   912  0070                     pin@a:	
   913                           ; 4 bytes @ 0x0
   914                           
   915  0070                     __Umul8_16@multiplicand:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     _isdigit$955:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ___wmul@multiplier:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ___awmod@divisor:	
   925                           ; 2 bytes @ 0x0
   926                           
   927  0070                     ___lwmod@divisor:	
   928                           ; 2 bytes @ 0x0
   929                           
   930  0070                     ___lldiv@divisor:	
   931                           ; 2 bytes @ 0x0
   932                           
   933  0070                     __div_to_l_@f1:	
   934                           ; 4 bytes @ 0x0
   935                           
   936  0070                     ___fleq@ff1:	
   937                           ; 4 bytes @ 0x0
   938                           
   939  0070                     ___flge@ff1:	
   940                           ; 4 bytes @ 0x0
   941                           
   942  0070                     ___flneg@f1:	
   943                           ; 4 bytes @ 0x0
   944                           
   945  0070                     __tdiv_to_l_@f1:	
   946                           ; 4 bytes @ 0x0
   947                           
   948  0070                     ___xxtofl@val:	
   949                           ; 4 bytes @ 0x0
   950                           
   951                           
   952                           ; 4 bytes @ 0x0
   953  0070                     	ds	1
   954  0071                     ??_CMDs:
   955  0071                     ??_write_char:	
   956                           ; 1 bytes @ 0x1
   957                           
   958  0071                     isdigit@c:	
   959                           ; 1 bytes @ 0x1
   960                           
   961                           
   962                           ; 1 bytes @ 0x1
   963  0071                     	ds	1
   964  0072                     ??__Umul8_16:
   965  0072                     configADC@ch:	
   966                           ; 1 bytes @ 0x2
   967                           
   968  0072                     write_char@a:	
   969                           ; 1 bytes @ 0x2
   970                           
   971  0072                     ___wmul@multiplicand:	
   972                           ; 1 bytes @ 0x2
   973                           
   974  0072                     ___awmod@dividend:	
   975                           ; 2 bytes @ 0x2
   976                           
   977  0072                     ___lwmod@dividend:	
   978                           ; 2 bytes @ 0x2
   979                           
   980                           
   981                           ; 2 bytes @ 0x2
   982  0072                     	ds	1
   983  0073                     ?_write_string:
   984  0073                     CMDs@a:	
   985                           ; 1 bytes @ 0x3
   986                           
   987  0073                     write_string@a:	
   988                           ; 1 bytes @ 0x3
   989                           
   990                           
   991                           ; 2 bytes @ 0x3
   992  0073                     	ds	1
   993  0074                     ??_configLCD:
   994  0074                     ??_clear_LCD:	
   995                           ; 1 bytes @ 0x4
   996                           
   997  0074                     ?_cursor:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0074                     ??___wmul:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0074                     ??___awmod:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006  0074                     ??___flneg:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0074                     ??___lwmod:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012  0074                     ??___xxtofl:	
  1013                           ; 1 bytes @ 0x4
  1014                           
  1015  0074                     cursor@b:	
  1016                           ; 1 bytes @ 0x4
  1017                           
  1018  0074                     ___wmul@product:	
  1019                           ; 1 bytes @ 0x4
  1020                           
  1021  0074                     __Umul8_16@product:	
  1022                           ; 2 bytes @ 0x4
  1023                           
  1024  0074                     ___lldiv@dividend:	
  1025                           ; 2 bytes @ 0x4
  1026                           
  1027  0074                     __div_to_l_@f2:	
  1028                           ; 4 bytes @ 0x4
  1029                           
  1030  0074                     ___fleq@ff2:	
  1031                           ; 4 bytes @ 0x4
  1032                           
  1033  0074                     ___flge@ff2:	
  1034                           ; 4 bytes @ 0x4
  1035                           
  1036  0074                     __tdiv_to_l_@f2:	
  1037                           ; 4 bytes @ 0x4
  1038                           
  1039                           
  1040                           ; 4 bytes @ 0x4
  1041  0074                     	ds	1
  1042  0075                     ??_cursor:
  1043  0075                     ??_write_string:	
  1044                           ; 1 bytes @ 0x5
  1045                           
  1046  0075                     ___awmod@counter:	
  1047                           ; 1 bytes @ 0x5
  1048                           
  1049  0075                     ___lwmod@counter:	
  1050                           ; 1 bytes @ 0x5
  1051                           
  1052                           
  1053                           ; 1 bytes @ 0x5
  1054  0075                     	ds	1
  1055  0076                     ?___lwdiv:
  1056  0076                     cursor@a:	
  1057                           ; 2 bytes @ 0x6
  1058                           
  1059  0076                     ___awmod@sign:	
  1060                           ; 1 bytes @ 0x6
  1061                           
  1062  0076                     ___lwdiv@divisor:	
  1063                           ; 1 bytes @ 0x6
  1064                           
  1065  0076                     __Umul8_16@word_mpld:	
  1066                           ; 2 bytes @ 0x6
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x6
  1070  0076                     	ds	1
  1071  0077                     ?___awdiv:
  1072  0077                     cursor@x:	
  1073                           ; 2 bytes @ 0x7
  1074                           
  1075  0077                     ___awdiv@divisor:	
  1076                           ; 1 bytes @ 0x7
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x7
  1080  0077                     	ds	1
  1081  0078                     ??__tdiv_to_l_:
  1082  0078                     ??__div_to_l_:	
  1083                           ; 1 bytes @ 0x8
  1084                           
  1085  0078                     ??___lldiv:	
  1086                           ; 1 bytes @ 0x8
  1087                           
  1088  0078                     ??___fleq:	
  1089                           ; 1 bytes @ 0x8
  1090                           
  1091  0078                     ??___flge:	
  1092                           ; 1 bytes @ 0x8
  1093                           
  1094  0078                     __Umul8_16@multiplier:	
  1095                           ; 1 bytes @ 0x8
  1096                           
  1097  0078                     ___xxtofl@sign:	
  1098                           ; 1 bytes @ 0x8
  1099                           
  1100  0078                     write_string@i:	
  1101                           ; 1 bytes @ 0x8
  1102                           
  1103  0078                     ___lwdiv@dividend:	
  1104                           ; 2 bytes @ 0x8
  1105                           
  1106                           
  1107                           ; 2 bytes @ 0x8
  1108  0078                     	ds	1
  1109  0079                     ___xxtofl@exp:
  1110  0079                     ___awdiv@dividend:	
  1111                           ; 1 bytes @ 0x9
  1112                           
  1113  0079                     ___lldiv@quotient:	
  1114                           ; 2 bytes @ 0x9
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0x9
  1118  0079                     	ds	1
  1119  007A                     ??___lwdiv:
  1120  007A                     ___xxtofl@arg:	
  1121                           ; 1 bytes @ 0xA
  1122                           
  1123                           
  1124                           ; 4 bytes @ 0xA
  1125  007A                     	ds	1
  1126  007B                     ??___awdiv:
  1127  007B                     ___lwdiv@quotient:	
  1128                           ; 1 bytes @ 0xB
  1129                           
  1130                           
  1131                           ; 2 bytes @ 0xB
  1132  007B                     	ds	2
  1133  007D                     ___lldiv@counter:
  1134  007D                     ___lwdiv@counter:	
  1135                           ; 1 bytes @ 0xD
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0xD
  1139  007D                     	ds	1
  1140  007E                     ??___flsub:
  1141                           
  1142                           	psect	cstackBANK0
  1143  0020                     __pcstackBANK0:	
  1144                           ; 1 bytes @ 0xE
  1145                           
  1146  0020                     ?___llmod:
  1147  0020                     ___awdiv@counter:	
  1148                           ; 4 bytes @ 0x0
  1149                           
  1150  0020                     __div_to_l_@quot:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0020                     __tdiv_to_l_@quot:	
  1154                           ; 4 bytes @ 0x0
  1155                           
  1156  0020                     ___llmod@divisor:	
  1157                           ; 4 bytes @ 0x0
  1158                           
  1159                           
  1160                           ; 4 bytes @ 0x0
  1161  0020                     	ds	1
  1162  0021                     ___awdiv@sign:
  1163                           
  1164                           ; 1 bytes @ 0x1
  1165  0021                     	ds	1
  1166  0022                     ___awdiv@quotient:
  1167                           
  1168                           ; 2 bytes @ 0x2
  1169  0022                     	ds	2
  1170  0024                     ?___flmul:
  1171  0024                     __div_to_l_@cntr:	
  1172                           ; 4 bytes @ 0x4
  1173                           
  1174  0024                     __tdiv_to_l_@cntr:	
  1175                           ; 1 bytes @ 0x4
  1176                           
  1177  0024                     ___llmod@dividend:	
  1178                           ; 1 bytes @ 0x4
  1179                           
  1180  0024                     ___flmul@b:	
  1181                           ; 4 bytes @ 0x4
  1182                           
  1183                           
  1184                           ; 4 bytes @ 0x4
  1185  0024                     	ds	1
  1186  0025                     __div_to_l_@exp1:
  1187  0025                     __tdiv_to_l_@exp1:	
  1188                           ; 1 bytes @ 0x5
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x5
  1192  0025                     	ds	3
  1193  0028                     ??___llmod:
  1194  0028                     ___flmul@a:	
  1195                           ; 1 bytes @ 0x8
  1196                           
  1197                           
  1198                           ; 4 bytes @ 0x8
  1199  0028                     	ds	1
  1200  0029                     ___llmod@counter:
  1201                           
  1202                           ; 1 bytes @ 0x9
  1203  0029                     	ds	3
  1204  002C                     ??___flmul:
  1205                           
  1206                           ; 1 bytes @ 0xC
  1207  002C                     	ds	5
  1208  0031                     ___flmul@sign:
  1209                           
  1210                           ; 1 bytes @ 0x11
  1211  0031                     	ds	1
  1212  0032                     ___flmul@grs:
  1213                           
  1214                           ; 4 bytes @ 0x12
  1215  0032                     	ds	4
  1216  0036                     ___flmul@aexp:
  1217                           
  1218                           ; 1 bytes @ 0x16
  1219  0036                     	ds	1
  1220  0037                     ___flmul@bexp:
  1221                           
  1222                           ; 1 bytes @ 0x17
  1223  0037                     	ds	1
  1224  0038                     ___flmul@prod:
  1225                           
  1226                           ; 4 bytes @ 0x18
  1227  0038                     	ds	4
  1228  003C                     ___flmul@temp:
  1229                           
  1230                           ; 2 bytes @ 0x1C
  1231  003C                     	ds	2
  1232  003E                     ?_fround:
  1233  003E                     ?_scale:	
  1234                           ; 4 bytes @ 0x1E
  1235                           
  1236                           
  1237                           ; 4 bytes @ 0x1E
  1238  003E                     	ds	4
  1239  0042                     ??_fround:
  1240  0042                     ??_scale:	
  1241                           ; 1 bytes @ 0x22
  1242                           
  1243                           
  1244                           ; 1 bytes @ 0x22
  1245  0042                     	ds	7
  1246  0049                     _fround$1145:
  1247                           
  1248                           ; 4 bytes @ 0x29
  1249  0049                     	ds	3
  1250  004C                     _scale$1146:
  1251                           
  1252                           ; 4 bytes @ 0x2C
  1253  004C                     	ds	1
  1254  004D                     _fround$1144:
  1255                           
  1256                           ; 4 bytes @ 0x2D
  1257  004D                     	ds	3
  1258  0050                     scale@scl:
  1259                           
  1260                           ; 1 bytes @ 0x30
  1261  0050                     	ds	1
  1262  0051                     ?___fltol:
  1263  0051                     fround@prec:	
  1264                           ; 4 bytes @ 0x31
  1265                           
  1266  0051                     ___fltol@f1:	
  1267                           ; 1 bytes @ 0x31
  1268                           
  1269                           
  1270                           ; 4 bytes @ 0x31
  1271  0051                     	ds	1
  1272  0052                     ?___fladd:
  1273  0052                     ___fladd@b:	
  1274                           ; 4 bytes @ 0x32
  1275                           
  1276                           
  1277                           ; 4 bytes @ 0x32
  1278  0052                     	ds	3
  1279  0055                     ??___fltol:
  1280                           
  1281                           ; 1 bytes @ 0x35
  1282  0055                     	ds	1
  1283  0056                     ___fladd@a:
  1284                           
  1285                           ; 4 bytes @ 0x36
  1286  0056                     	ds	4
  1287  005A                     ??___fladd:
  1288  005A                     ___fltol@sign1:	
  1289                           ; 1 bytes @ 0x3A
  1290                           
  1291                           
  1292                           ; 1 bytes @ 0x3A
  1293  005A                     	ds	1
  1294  005B                     ___fltol@exp1:
  1295                           
  1296                           ; 1 bytes @ 0x3B
  1297  005B                     	ds	7
  1298  0062                     ___fladd@signs:
  1299                           
  1300                           ; 1 bytes @ 0x42
  1301  0062                     	ds	1
  1302  0063                     ___fladd@aexp:
  1303                           
  1304                           ; 1 bytes @ 0x43
  1305  0063                     	ds	1
  1306  0064                     ___fladd@bexp:
  1307                           
  1308                           ; 1 bytes @ 0x44
  1309  0064                     	ds	1
  1310  0065                     ___fladd@grs:
  1311                           
  1312                           ; 1 bytes @ 0x45
  1313  0065                     	ds	1
  1314  0066                     ?___flsub:
  1315  0066                     ___flsub@a:	
  1316                           ; 4 bytes @ 0x46
  1317                           
  1318                           
  1319                           ; 4 bytes @ 0x46
  1320  0066                     	ds	4
  1321  006A                     ___flsub@b:
  1322                           
  1323                           ; 4 bytes @ 0x4A
  1324  006A                     	ds	4
  1325                           
  1326                           	psect	maintext
  1327  00E2                     __pmaintext:	
  1328 ;;
  1329 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1330 ;;
  1331 ;; *************** function _main *****************
  1332 ;; Defined at:
  1333 ;;		line 62 in file "lab2_main.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : B00/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1347 ;;      Params:         0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0
  1349 ;;      Temps:          0       0       4       0       0
  1350 ;;      Totals:         0       0       4       0       0
  1351 ;;Total ram usage:        4 bytes
  1352 ;; Hardware stack levels required when called:    4
  1353 ;; This function calls:
  1354 ;;		___flmul
  1355 ;;		___xxtofl
  1356 ;;		_clear_LCD
  1357 ;;		_configADC
  1358 ;;		_configLCD
  1359 ;;		_cursor
  1360 ;;		_setup
  1361 ;;		_sprintf
  1362 ;;		_write_string
  1363 ;; This function is called by:
  1364 ;;		Startup code after reset
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _main
  1370  00E2                     _main:
  1371  00E2                     l3700:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1374                           
  1375                           
  1376                           ;lab2_main.c: 63:     setup();
  1377  00E2  160A  158A  21B2  120A  118A  	fcall	_setup
  1378  00E7                     l3702:
  1379                           
  1380                           ;lab2_main.c: 67:     configLCD();
  1381  00E7  160A  158A  2496  120A  118A  	fcall	_configLCD
  1382  00EC                     l3704:
  1383                           
  1384                           ;lab2_main.c: 68:     clear_LCD();
  1385  00EC  160A  158A  2193  120A  118A  	fcall	_clear_LCD
  1386  00F1                     l3706:
  1387                           
  1388                           ;lab2_main.c: 70:         clear_LCD();
  1389  00F1  160A  158A  2193  120A  118A  	fcall	_clear_LCD
  1390  00F6                     l3708:
  1391                           
  1392                           ;lab2_main.c: 71:         cursor(1,1);
  1393  00F6  01F4               	clrf	cursor@b
  1394  00F7  0AF4               	incf	cursor@b,f
  1395  00F8  3001               	movlw	1
  1396  00F9  160A  158A  2207  120A  118A  	fcall	_cursor
  1397  00FE                     l3710:
  1398                           
  1399                           ;lab2_main.c: 72:         write_string("S1   S2   S3");
  1400  00FE  30A2               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1401  00FF  00F3               	movwf	write_string@a
  1402  0100  3080               	movlw	128
  1403  0101  00F4               	movwf	write_string@a+1
  1404  0102  160A  158A  2313  120A  118A  	fcall	_write_string
  1405  0107                     l3712:
  1406                           
  1407                           ;lab2_main.c: 74:         ADC0 = configADC(0);
  1408  0107  3000               	movlw	0
  1409  0108  120A  118A  2007  120A  118A  	fcall	_configADC
  1410  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1411  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1412  010F  00CB               	movwf	??_main^(0+128)
  1413  0110  084B               	movf	??_main^(0+128),w
  1414  0111  00D9               	movwf	_ADC0^(0+128)
  1415  0112                     l3714:
  1416                           
  1417                           ;lab2_main.c: 75:         ADC1 = configADC(1);
  1418  0112  3001               	movlw	1
  1419  0113  120A  118A  2007  120A  118A  	fcall	_configADC
  1420  0118  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0119  1303               	bcf	3,6	;RP1=0, select bank1
  1422  011A  00CB               	movwf	??_main^(0+128)
  1423  011B  084B               	movf	??_main^(0+128),w
  1424  011C  00D8               	movwf	_ADC1^(0+128)
  1425  011D                     l3716:
  1426                           
  1427                           ;lab2_main.c: 80:         V1 = ADC0*0.0196;
  1428  011D  303C               	movlw	60
  1429  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1430  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1431  0120  00A7               	movwf	___flmul@b+3
  1432  0121  30A0               	movlw	160
  1433  0122  00A6               	movwf	___flmul@b+2
  1434  0123  3090               	movlw	144
  1435  0124  00A5               	movwf	___flmul@b+1
  1436  0125  302E               	movlw	46
  1437  0126  00A4               	movwf	___flmul@b
  1438  0127  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0128  1303               	bcf	3,6	;RP1=0, select bank1
  1440  0129  0859               	movf	_ADC0^(0+128),w
  1441  012A  00CB               	movwf	??_main^(0+128)
  1442  012B  01CC               	clrf	(??_main^(0+128)+1)
  1443  012C  01CD               	clrf	(??_main^(0+128)+2)
  1444  012D  01CE               	clrf	(??_main^(0+128)+3)
  1445  012E  084E               	movf	(??_main+3)^(0+128),w
  1446  012F  00F3               	movwf	___xxtofl@val+3
  1447  0130  084D               	movf	(??_main+2)^(0+128),w
  1448  0131  00F2               	movwf	___xxtofl@val+2
  1449  0132  084C               	movf	(??_main+1)^(0+128),w
  1450  0133  00F1               	movwf	___xxtofl@val+1
  1451  0134  084B               	movf	??_main^(0+128),w
  1452  0135  00F0               	movwf	___xxtofl@val
  1453  0136  3001               	movlw	1
  1454  0137  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  1455  013C  0873               	movf	?___xxtofl+3,w
  1456  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1457  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1458  013F  00AB               	movwf	___flmul@a+3
  1459  0140  0872               	movf	?___xxtofl+2,w
  1460  0141  00AA               	movwf	___flmul@a+2
  1461  0142  0871               	movf	?___xxtofl+1,w
  1462  0143  00A9               	movwf	___flmul@a+1
  1463  0144  0870               	movf	?___xxtofl,w
  1464  0145  00A8               	movwf	___flmul@a
  1465  0146  120A  158A  249F  120A  118A  	fcall	___flmul
  1466  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1467  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1468  014D  0827               	movf	?___flmul+3,w
  1469  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1470  014F  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0150  00D6               	movwf	(_V1+3)^(0+128)
  1472  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0153  0826               	movf	?___flmul+2,w
  1475  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1476  0155  1303               	bcf	3,6	;RP1=0, select bank1
  1477  0156  00D5               	movwf	(_V1+2)^(0+128)
  1478  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0159  0825               	movf	?___flmul+1,w
  1481  015A  1683               	bsf	3,5	;RP0=1, select bank1
  1482  015B  1303               	bcf	3,6	;RP1=0, select bank1
  1483  015C  00D4               	movwf	(_V1+1)^(0+128)
  1484  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1485  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1486  015F  0824               	movf	?___flmul,w
  1487  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1488  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1489  0162  00D3               	movwf	_V1^(0+128)
  1490  0163                     l3718:
  1491                           
  1492                           ;lab2_main.c: 81:         V2 = ADC1*0.0196;
  1493  0163  303C               	movlw	60
  1494  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0166  00A7               	movwf	___flmul@b+3
  1497  0167  30A0               	movlw	160
  1498  0168  00A6               	movwf	___flmul@b+2
  1499  0169  3090               	movlw	144
  1500  016A  00A5               	movwf	___flmul@b+1
  1501  016B  302E               	movlw	46
  1502  016C  00A4               	movwf	___flmul@b
  1503  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1504  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1505  016F  0858               	movf	_ADC1^(0+128),w
  1506  0170  00CB               	movwf	??_main^(0+128)
  1507  0171  01CC               	clrf	(??_main^(0+128)+1)
  1508  0172  01CD               	clrf	(??_main^(0+128)+2)
  1509  0173  01CE               	clrf	(??_main^(0+128)+3)
  1510  0174  084E               	movf	(??_main+3)^(0+128),w
  1511  0175  00F3               	movwf	___xxtofl@val+3
  1512  0176  084D               	movf	(??_main+2)^(0+128),w
  1513  0177  00F2               	movwf	___xxtofl@val+2
  1514  0178  084C               	movf	(??_main+1)^(0+128),w
  1515  0179  00F1               	movwf	___xxtofl@val+1
  1516  017A  084B               	movf	??_main^(0+128),w
  1517  017B  00F0               	movwf	___xxtofl@val
  1518  017C  3001               	movlw	1
  1519  017D  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  1520  0182  0873               	movf	?___xxtofl+3,w
  1521  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0185  00AB               	movwf	___flmul@a+3
  1524  0186  0872               	movf	?___xxtofl+2,w
  1525  0187  00AA               	movwf	___flmul@a+2
  1526  0188  0871               	movf	?___xxtofl+1,w
  1527  0189  00A9               	movwf	___flmul@a+1
  1528  018A  0870               	movf	?___xxtofl,w
  1529  018B  00A8               	movwf	___flmul@a
  1530  018C  120A  158A  249F  120A  118A  	fcall	___flmul
  1531  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0193  0827               	movf	?___flmul+3,w
  1534  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1535  0195  1303               	bcf	3,6	;RP1=0, select bank1
  1536  0196  00D2               	movwf	(_V2+3)^(0+128)
  1537  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0199  0826               	movf	?___flmul+2,w
  1540  019A  1683               	bsf	3,5	;RP0=1, select bank1
  1541  019B  1303               	bcf	3,6	;RP1=0, select bank1
  1542  019C  00D1               	movwf	(_V2+2)^(0+128)
  1543  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1544  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1545  019F  0825               	movf	?___flmul+1,w
  1546  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  1547  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  1548  01A2  00D0               	movwf	(_V2+1)^(0+128)
  1549  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1550  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1551  01A5  0824               	movf	?___flmul,w
  1552  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1553  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1554  01A8  00CF               	movwf	_V2^(0+128)
  1555  01A9                     l3720:
  1556                           
  1557                           ;lab2_main.c: 83:         sprintf(BUFFER, "%2.1f  %2.1f  %d" , V1,V2, contador);
  1558  01A9  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1559  01AA  00CB               	movwf	??_main^(0+128)
  1560  01AB  084B               	movf	??_main^(0+128),w
  1561  01AC  00A0               	movwf	sprintf@f^(0+128)
  1562  01AD  0856               	movf	(_V1+3)^(0+128),w
  1563  01AE  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1564  01AF  0855               	movf	(_V1+2)^(0+128),w
  1565  01B0  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1566  01B1  0854               	movf	(_V1+1)^(0+128),w
  1567  01B2  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1568  01B3  0853               	movf	_V1^(0+128),w
  1569  01B4  00A1               	movwf	(?_sprintf^(0+128)+1)
  1570  01B5  0852               	movf	(_V2+3)^(0+128),w
  1571  01B6  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1572  01B7  0851               	movf	(_V2+2)^(0+128),w
  1573  01B8  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1574  01B9  0850               	movf	(_V2+1)^(0+128),w
  1575  01BA  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1576  01BB  084F               	movf	_V2^(0+128),w
  1577  01BC  00A5               	movwf	(?_sprintf^(0+128)+5)
  1578  01BD  3000               	movlw	0
  1579  01BE  00A9               	movwf	(?_sprintf^(0+128)+9)
  1580  01BF  00AA               	movwf	((?_sprintf+1)^(0+128)+9)
  1581  01C0  30DA               	movlw	(low (_BUFFER| 0))& (0+255)
  1582  01C1  160A  118A  253E  120A  118A  	fcall	_sprintf
  1583  01C6                     l3722:
  1584                           
  1585                           ;lab2_main.c: 86:         cursor(2,1);
  1586  01C6  01F4               	clrf	cursor@b
  1587  01C7  0AF4               	incf	cursor@b,f
  1588  01C8  3002               	movlw	2
  1589  01C9  160A  158A  2207  120A  118A  	fcall	_cursor
  1590  01CE                     l3724:
  1591                           
  1592                           ;lab2_main.c: 87:         write_string(BUFFER);
  1593  01CE  30DA               	movlw	(low (_BUFFER| 0))& (0+255)
  1594  01CF  00F3               	movwf	write_string@a
  1595  01D0  3000               	movlw	0
  1596  01D1  00F4               	movwf	write_string@a+1
  1597  01D2  160A  158A  2313  120A  118A  	fcall	_write_string
  1598  01D7                     l3726:
  1599                           
  1600                           ;lab2_main.c: 102:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1601  01D7  3003               	movlw	3
  1602  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1603  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1604  01DA  00CD               	movwf	(??_main^(0+128)+2)
  1605  01DB  308A               	movlw	138
  1606  01DC  00CC               	movwf	(??_main^(0+128)+1)
  1607  01DD  3055               	movlw	85
  1608  01DE  00CB               	movwf	??_main^(0+128)
  1609  01DF                     u5847:
  1610  01DF  0BCB               	decfsz	??_main^(0+128),f
  1611  01E0  29DF               	goto	u5847
  1612  01E1  0BCC               	decfsz	(??_main^(0+128)+1),f
  1613  01E2  29DF               	goto	u5847
  1614  01E3  0BCD               	decfsz	(??_main^(0+128)+2),f
  1615  01E4  29DF               	goto	u5847
  1616  01E5  28F1               	goto	l3706
  1617  01E6  120A  118A  2800   	ljmp	start
  1618  01E9                     __end_of_main:
  1619                           
  1620                           	psect	text1
  1621  1B13                     __ptext1:	
  1622 ;; *************** function _write_string *****************
  1623 ;; Defined at:
  1624 ;;		line 99 in file "LCD.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  a               2    3[COMMON] PTR unsigned char 
  1627 ;;		 -> BUFFER(20), STR_1(13), 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  i               2    8[COMMON] int 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         2       0       0       0       0
  1640 ;;      Locals:         2       0       0       0       0
  1641 ;;      Temps:          3       0       0       0       0
  1642 ;;      Totals:         7       0       0       0       0
  1643 ;;Total ram usage:        7 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    2
  1646 ;; This function calls:
  1647 ;;		_write_char
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _write_string
  1655  1B13                     _write_string:
  1656  1B13                     l3338:	
  1657                           ;incstack = 0
  1658                           ; Regs used in _write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1659                           
  1660                           
  1661                           ;LCD.c: 100:     int i;;LCD.c: 101:  for(i=0;a[i]!='\0';i++)
  1662  1B13  01F8               	clrf	write_string@i
  1663  1B14  01F9               	clrf	write_string@i+1
  1664  1B15  2B38               	goto	l3344
  1665  1B16                     l3340:
  1666                           
  1667                           ;LCD.c: 102:  write_char(a[i]);
  1668  1B16  0878               	movf	write_string@i,w
  1669  1B17  0773               	addwf	write_string@a,w
  1670  1B18  00F6               	movwf	??_write_string+1
  1671  1B19  0874               	movf	write_string@a+1,w
  1672  1B1A  00F5               	movwf	??_write_string
  1673  1B1B  1803               	skipnc
  1674  1B1C  0AF5               	incf	??_write_string,f
  1675  1B1D  1FF8               	btfss	write_string@i,7
  1676  1B1E  2B20               	goto	u5270
  1677  1B1F  03F5               	decf	??_write_string,f
  1678  1B20                     u5270:
  1679  1B20  0875               	movf	??_write_string,w
  1680  1B21  00F7               	movwf	??_write_string+2
  1681  1B22  0877               	movf	??_write_string+2,w
  1682  1B23  1283               	bcf	3,5	;RP0=0, select bank0
  1683  1B24  1303               	bcf	3,6	;RP1=0, select bank0
  1684  1B25  00FF               	movwf	btemp+1
  1685  1B26  0876               	movf	??_write_string+1,w
  1686  1B27  0084               	movwf	4
  1687  1B28  120A  158A  2000  160A  158A  	fcall	stringtab
  1688  1B2D  160A  158A  21CB  160A  158A  	fcall	_write_char
  1689  1B32                     l3342:
  1690  1B32  3001               	movlw	1
  1691  1B33  07F8               	addwf	write_string@i,f
  1692  1B34  1803               	skipnc
  1693  1B35  0AF9               	incf	write_string@i+1,f
  1694  1B36  3000               	movlw	0
  1695  1B37  07F9               	addwf	write_string@i+1,f
  1696  1B38                     l3344:
  1697  1B38  0878               	movf	write_string@i,w
  1698  1B39  0773               	addwf	write_string@a,w
  1699  1B3A  00F6               	movwf	??_write_string+1
  1700  1B3B  0874               	movf	write_string@a+1,w
  1701  1B3C  00F5               	movwf	??_write_string
  1702  1B3D  1803               	skipnc
  1703  1B3E  0AF5               	incf	??_write_string,f
  1704  1B3F  1FF8               	btfss	write_string@i,7
  1705  1B40  2B42               	goto	u5280
  1706  1B41  03F5               	decf	??_write_string,f
  1707  1B42                     u5280:
  1708  1B42  0875               	movf	??_write_string,w
  1709  1B43  00F7               	movwf	??_write_string+2
  1710  1B44  0877               	movf	??_write_string+2,w
  1711  1B45  1283               	bcf	3,5	;RP0=0, select bank0
  1712  1B46  1303               	bcf	3,6	;RP1=0, select bank0
  1713  1B47  00FF               	movwf	btemp+1
  1714  1B48  0876               	movf	??_write_string+1,w
  1715  1B49  0084               	movwf	4
  1716  1B4A  120A  158A  2000  160A  158A  	fcall	stringtab
  1717  1B4F  3A00               	xorlw	0
  1718  1B50  1D03               	skipz
  1719  1B51  2B53               	goto	u5291
  1720  1B52  2B54               	goto	u5290
  1721  1B53                     u5291:
  1722  1B53  2B16               	goto	l3340
  1723  1B54                     u5290:
  1724  1B54                     l167:
  1725  1B54  0008               	return
  1726  1B55                     __end_of_write_string:
  1727                           
  1728                           	psect	text2
  1729  19CB                     __ptext2:	
  1730 ;; *************** function _write_char *****************
  1731 ;; Defined at:
  1732 ;;		line 89 in file "LCD.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  a               1    wreg     unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  a               1    2[COMMON] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         1       0       0       0       0
  1748 ;;      Temps:          1       0       0       0       0
  1749 ;;      Totals:         2       0       0       0       0
  1750 ;;Total ram usage:        2 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    1
  1753 ;; This function calls:
  1754 ;;		_pin
  1755 ;; This function is called by:
  1756 ;;		_write_string
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _write_char
  1762  19CB                     _write_char:
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  1766                           ;write_char@a stored from wreg
  1767  19CB  00F2               	movwf	write_char@a
  1768  19CC                     l2914:
  1769                           
  1770                           ;LCD.c: 90:     RE0 = 1;
  1771  19CC  1283               	bcf	3,5	;RP0=0, select bank0
  1772  19CD  1303               	bcf	3,6	;RP1=0, select bank0
  1773  19CE  1409               	bsf	9,0	;volatile
  1774  19CF                     l2916:
  1775                           
  1776                           ;LCD.c: 91:     pin(a);
  1777  19CF  0872               	movf	write_char@a,w
  1778  19D0  160A  158A  22D5  160A  158A  	fcall	_pin
  1779  19D5                     l2918:
  1780                           
  1781                           ;LCD.c: 92:     RE1 = 1;
  1782  19D5  1283               	bcf	3,5	;RP0=0, select bank0
  1783  19D6  1303               	bcf	3,6	;RP1=0, select bank0
  1784  19D7  1489               	bsf	9,1	;volatile
  1785  19D8                     l2920:
  1786                           
  1787                           ;LCD.c: 93:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1788  19D8  29D9               	nop2	;2 cycle nop
  1789  19D9  29DA               	nop2	;2 cycle nop
  1790  19DA  0000               	nop
  1791  19DB                     l2922:
  1792                           
  1793                           ;LCD.c: 94:     RE1 = 0;
  1794  19DB  1283               	bcf	3,5	;RP0=0, select bank0
  1795  19DC  1303               	bcf	3,6	;RP1=0, select bank0
  1796  19DD  1089               	bcf	9,1	;volatile
  1797  19DE                     l2924:
  1798                           
  1799                           ;LCD.c: 95:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1800  19DE  29DF               	nop2	;2 cycle nop
  1801  19DF  29E0               	nop2	;2 cycle nop
  1802  19E0  0000               	nop
  1803  19E1                     l2926:
  1804                           
  1805                           ;LCD.c: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1806  19E1  3010               	movlw	16
  1807  19E2  00F1               	movwf	??_write_char
  1808  19E3                     u5857:
  1809  19E3  0BF1               	decfsz	??_write_char,f
  1810  19E4  29E3               	goto	u5857
  1811  19E5  0000               	nop
  1812  19E6                     l161:
  1813  19E6  0008               	return
  1814  19E7                     __end_of_write_char:
  1815                           
  1816                           	psect	text3
  1817  153E                     __ptext3:	
  1818 ;; *************** function _sprintf *****************
  1819 ;; Defined at:
  1820 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  sp              1    wreg     PTR unsigned char 
  1823 ;;		 -> BUFFER(20), 
  1824 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1825 ;;		 -> STR_2(17), 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  sp              1   39[BANK1 ] PTR unsigned char 
  1828 ;;		 -> BUFFER(20), 
  1829 ;;  fval            4   35[BANK1 ] PTR unsigned char 
  1830 ;;  val             4   29[BANK1 ] unsigned long 
  1831 ;;  tmpval          4   25[BANK1 ] struct .
  1832 ;;  prec            2   40[BANK1 ] int 
  1833 ;;  eexp            2   33[BANK1 ] int 
  1834 ;;  width           2   23[BANK1 ] int 
  1835 ;;  flag            2   21[BANK1 ] unsigned short 
  1836 ;;  cp              2    0        PTR const unsigned char 
  1837 ;;  len             2    0        unsigned int 
  1838 ;;  c               1   42[BANK1 ] unsigned char 
  1839 ;;  ap              1   20[BANK1 ] PTR void [1]
  1840 ;;		 -> ?_sprintf(2), 
  1841 ;;  d               1    0        unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  2    0[BANK1 ] int 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0      11       0       0
  1852 ;;      Locals:         0       0      27       0       0
  1853 ;;      Temps:          0       0       5       0       0
  1854 ;;      Totals:         0       0      43       0       0
  1855 ;;Total ram usage:       43 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    3
  1858 ;; This function calls:
  1859 ;;		___awdiv
  1860 ;;		___fladd
  1861 ;;		___fleq
  1862 ;;		___flge
  1863 ;;		___flmul
  1864 ;;		___flneg
  1865 ;;		___flsub
  1866 ;;		___fltol
  1867 ;;		___lldiv
  1868 ;;		___llmod
  1869 ;;		___wmul
  1870 ;;		___xxtofl
  1871 ;;		__div_to_l_
  1872 ;;		__tdiv_to_l_
  1873 ;;		_fround
  1874 ;;		_isdigit
  1875 ;;		_scale
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _sprintf
  1883  153E                     _sprintf:
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1887                           ;sprintf@sp stored from wreg
  1888  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1889  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1890  1540  00C7               	movwf	sprintf@sp^(0+128)
  1891  1541                     l3406:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1894  1541  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1895  1542  00AB               	movwf	??_sprintf^(0+128)
  1896  1543  082B               	movf	??_sprintf^(0+128),w
  1897  1544  00B4               	movwf	sprintf@ap^(0+128)
  1898  1545                     L1:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1901  1545  120A  118A  2FD6   	goto	l3688
  1902  1548                     l3408:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1905  1548  3025               	movlw	37
  1906  1549  064A               	xorwf	sprintf@c^(0+128),w
  1907  154A  1903               	btfsc	3,2
  1908  154B  2D4D               	goto	u5311
  1909  154C  2D4E               	goto	u5310
  1910  154D                     u5311:
  1911  154D  2D5A               	goto	l3414
  1912  154E                     u5310:
  1913  154E                     l3410:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1916  154E  084A               	movf	sprintf@c^(0+128),w
  1917  154F  00AB               	movwf	??_sprintf^(0+128)
  1918  1550  0847               	movf	sprintf@sp^(0+128),w
  1919  1551  0084               	movwf	4
  1920  1552  082B               	movf	??_sprintf^(0+128),w
  1921  1553  1383               	bcf	3,7	;select IRP bank0
  1922  1554  0080               	movwf	0
  1923  1555                     l3412:
  1924  1555  3001               	movlw	1
  1925  1556  00AB               	movwf	??_sprintf^(0+128)
  1926  1557  082B               	movf	??_sprintf^(0+128),w
  1927  1558  07C7               	addwf	sprintf@sp^(0+128),f
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1930  1559  2D45               	goto	L1
  1931  155A                     l3414:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1934  155A  01B7               	clrf	sprintf@width^(0+128)
  1935  155B  01B8               	clrf	(sprintf@width+1)^(0+128)
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1938  155C  01B5               	clrf	sprintf@flag^(0+128)
  1939  155D  01B6               	clrf	(sprintf@flag+1)^(0+128)
  1940  155E                     l3416:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1943  155E  0820               	movf	sprintf@f^(0+128),w
  1944  155F  0084               	movwf	4
  1945  1560  120A  158A  200A  160A  118A  	fcall	stringdir
  1946  1565  160A  158A  21A0  160A  118A  	fcall	_isdigit
  1947  156A  1C03               	btfss	3,0
  1948  156B  2D6D               	goto	u5321
  1949  156C  2D6E               	goto	u5320
  1950  156D                     u5321:
  1951  156D  2DAE               	goto	l3428
  1952  156E                     u5320:
  1953  156E                     l3418:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1956  156E  1683               	bsf	3,5	;RP0=1, select bank1
  1957  156F  1303               	bcf	3,6	;RP1=0, select bank1
  1958  1570  01B7               	clrf	sprintf@width^(0+128)
  1959  1571  01B8               	clrf	(sprintf@width+1)^(0+128)
  1960  1572                     l3420:
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1963  1572  300A               	movlw	10
  1964  1573  00F0               	movwf	___wmul@multiplier
  1965  1574  3000               	movlw	0
  1966  1575  00F1               	movwf	___wmul@multiplier+1
  1967  1576  1683               	bsf	3,5	;RP0=1, select bank1
  1968  1577  1303               	bcf	3,6	;RP1=0, select bank1
  1969  1578  0838               	movf	(sprintf@width+1)^(0+128),w
  1970  1579  00F3               	movwf	___wmul@multiplicand+1
  1971  157A  0837               	movf	sprintf@width^(0+128),w
  1972  157B  00F2               	movwf	___wmul@multiplicand
  1973  157C  160A  158A  224F  160A  118A  	fcall	___wmul
  1974  1581  0871               	movf	?___wmul+1,w
  1975  1582  1683               	bsf	3,5	;RP0=1, select bank1
  1976  1583  1303               	bcf	3,6	;RP1=0, select bank1
  1977  1584  00B8               	movwf	(sprintf@width+1)^(0+128)
  1978  1585  0870               	movf	?___wmul,w
  1979  1586  00B7               	movwf	sprintf@width^(0+128)
  1980  1587                     l3422:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1983  1587  0820               	movf	sprintf@f^(0+128),w
  1984  1588  0084               	movwf	4
  1985  1589  120A  158A  200A  160A  118A  	fcall	stringdir
  1986  158E  3ED0               	addlw	208
  1987  158F  00AB               	movwf	??_sprintf^(0+128)
  1988  1590  30FF               	movlw	255
  1989  1591  1803               	skipnc
  1990  1592  3000               	movlw	0
  1991  1593  00AC               	movwf	(??_sprintf^(0+128)+1)
  1992  1594  082B               	movf	??_sprintf^(0+128),w
  1993  1595  07B7               	addwf	sprintf@width^(0+128),f
  1994  1596  1803               	skipnc
  1995  1597  0AB8               	incf	(sprintf@width+1)^(0+128),f
  1996  1598  082C               	movf	(??_sprintf+1)^(0+128),w
  1997  1599  07B8               	addwf	(sprintf@width+1)^(0+128),f
  1998  159A                     l3424:
  1999  159A  3001               	movlw	1
  2000  159B  00AB               	movwf	??_sprintf^(0+128)
  2001  159C  082B               	movf	??_sprintf^(0+128),w
  2002  159D  07A0               	addwf	sprintf@f^(0+128),f
  2003  159E                     l3426:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2006  159E  0820               	movf	sprintf@f^(0+128),w
  2007  159F  0084               	movwf	4
  2008  15A0  120A  158A  200A  160A  118A  	fcall	stringdir
  2009  15A5  160A  158A  21A0  160A  118A  	fcall	_isdigit
  2010  15AA  1803               	btfsc	3,0
  2011  15AB  2DAD               	goto	u5331
  2012  15AC  2DAE               	goto	u5330
  2013  15AD                     u5331:
  2014  15AD  2D72               	goto	l3420
  2015  15AE                     u5330:
  2016  15AE                     l3428:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2019  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2020  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2021  15B0  0820               	movf	sprintf@f^(0+128),w
  2022  15B1  0084               	movwf	4
  2023  15B2  120A  158A  200A  160A  118A  	fcall	stringdir
  2024  15B7  3A2E               	xorlw	46
  2025  15B8  1D03               	skipz
  2026  15B9  2DBB               	goto	u5341
  2027  15BA  2DBC               	goto	u5340
  2028  15BB                     u5341:
  2029  15BB  2E01               	goto	l3444
  2030  15BC                     u5340:
  2031  15BC                     l3430:
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2034  15BC  1736               	bsf	(sprintf@flag^(0+128)+1),6
  2035  15BD                     l3432:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2038  15BD  3001               	movlw	1
  2039  15BE  00AB               	movwf	??_sprintf^(0+128)
  2040  15BF  082B               	movf	??_sprintf^(0+128),w
  2041  15C0  07A0               	addwf	sprintf@f^(0+128),f
  2042  15C1                     l3434:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2045  15C1  01C8               	clrf	sprintf@prec^(0+128)
  2046  15C2  01C9               	clrf	(sprintf@prec+1)^(0+128)
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2049  15C3  2DF0               	goto	l3442
  2050  15C4                     l3436:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2053  15C4  300A               	movlw	10
  2054  15C5  00F0               	movwf	___wmul@multiplier
  2055  15C6  3000               	movlw	0
  2056  15C7  00F1               	movwf	___wmul@multiplier+1
  2057  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  2058  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  2059  15CA  0849               	movf	(sprintf@prec+1)^(0+128),w
  2060  15CB  00F3               	movwf	___wmul@multiplicand+1
  2061  15CC  0848               	movf	sprintf@prec^(0+128),w
  2062  15CD  00F2               	movwf	___wmul@multiplicand
  2063  15CE  160A  158A  224F  160A  118A  	fcall	___wmul
  2064  15D3  0871               	movf	?___wmul+1,w
  2065  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  2066  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  2067  15D6  00C9               	movwf	(sprintf@prec+1)^(0+128)
  2068  15D7  0870               	movf	?___wmul,w
  2069  15D8  00C8               	movwf	sprintf@prec^(0+128)
  2070  15D9                     l3438:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2073  15D9  0820               	movf	sprintf@f^(0+128),w
  2074  15DA  0084               	movwf	4
  2075  15DB  120A  158A  200A  160A  118A  	fcall	stringdir
  2076  15E0  3ED0               	addlw	208
  2077  15E1  00AB               	movwf	??_sprintf^(0+128)
  2078  15E2  30FF               	movlw	255
  2079  15E3  1803               	skipnc
  2080  15E4  3000               	movlw	0
  2081  15E5  00AC               	movwf	(??_sprintf^(0+128)+1)
  2082  15E6  082B               	movf	??_sprintf^(0+128),w
  2083  15E7  07C8               	addwf	sprintf@prec^(0+128),f
  2084  15E8  1803               	skipnc
  2085  15E9  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  2086  15EA  082C               	movf	(??_sprintf+1)^(0+128),w
  2087  15EB  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  2088  15EC                     l3440:
  2089  15EC  3001               	movlw	1
  2090  15ED  00AB               	movwf	??_sprintf^(0+128)
  2091  15EE  082B               	movf	??_sprintf^(0+128),w
  2092  15EF  07A0               	addwf	sprintf@f^(0+128),f
  2093  15F0                     l3442:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2096  15F0  0820               	movf	sprintf@f^(0+128),w
  2097  15F1  0084               	movwf	4
  2098  15F2  120A  158A  200A  160A  118A  	fcall	stringdir
  2099  15F7  160A  158A  21A0  160A  118A  	fcall	_isdigit
  2100  15FC  1803               	btfsc	3,0
  2101  15FD  2DFF               	goto	u5351
  2102  15FE  2E00               	goto	u5350
  2103  15FF                     u5351:
  2104  15FF  2DC4               	goto	l3436
  2105  1600                     u5350:
  2106  1600  2E07               	goto	l3450
  2107  1601                     l3444:
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2110  1601  01C8               	clrf	sprintf@prec^(0+128)
  2111  1602  01C9               	clrf	(sprintf@prec+1)^(0+128)
  2112  1603                     l3446:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2115  1603  1636               	bsf	(sprintf@flag^(0+128)+1),4
  2116  1604  2E07               	goto	l3450
  2117  1605                     l339:	
  2118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2119                           
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2122  1605  1536               	bsf	(sprintf@flag^(0+128)+1),2
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2125  1606  2E29               	goto	l3452
  2126  1607                     l3450:
  2127  1607  3001               	movlw	1
  2128  1608  1683               	bsf	3,5	;RP0=1, select bank1
  2129  1609  1303               	bcf	3,6	;RP1=0, select bank1
  2130  160A  07A0               	addwf	sprintf@f^(0+128),f
  2131  160B  30FF               	movlw	-1
  2132  160C  0720               	addwf	sprintf@f^(0+128),w
  2133  160D  0084               	movwf	4
  2134  160E  120A  158A  200A  160A  118A  	fcall	stringdir
  2135  1613  00CA               	movwf	sprintf@c^(0+128)
  2136  1614  00AB               	movwf	??_sprintf^(0+128)
  2137  1615  01AC               	clrf	(??_sprintf^(0+128)+1)
  2138                           
  2139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2140                           ; Switch size 1, requested type "simple"
  2141                           ; Number of cases is 1, Range of values is 0 to 0
  2142                           ; switch strategies available:
  2143                           ; Name         Instructions Cycles
  2144                           ; simple_byte            4     3 (average)
  2145                           ; direct_byte           11     8 (fixed)
  2146                           ; jumptable            260     6 (fixed)
  2147                           ;	Chosen strategy is simple_byte
  2148  1616  082C               	movf	(??_sprintf+1)^(0+128),w
  2149  1617  3A00               	xorlw	0	; case 0
  2150  1618  1903               	skipnz
  2151  1619  2E1B               	goto	l3788
  2152  161A  2D45               	goto	L1
  2153  161B                     l3788:
  2154                           
  2155                           ; Switch size 1, requested type "simple"
  2156                           ; Number of cases is 4, Range of values is 0 to 105
  2157                           ; switch strategies available:
  2158                           ; Name         Instructions Cycles
  2159                           ; simple_byte           13     7 (average)
  2160                           ; jumptable            260     6 (fixed)
  2161                           ;	Chosen strategy is simple_byte
  2162  161B  082B               	movf	??_sprintf^(0+128),w
  2163  161C  3A00               	xorlw	0	; case 0
  2164  161D  1903               	skipnz
  2165  161E  2FFD               	goto	L3
  2166  161F  3A64               	xorlw	100	; case 100
  2167  1620  1903               	skipnz
  2168  1621  2E29               	goto	l3452
  2169  1622  3A02               	xorlw	2	; case 102
  2170  1623  1903               	skipnz
  2171  1624  2E05               	goto	l339
  2172  1625  3A0F               	xorlw	15	; case 105
  2173  1626  1903               	skipnz
  2174  1627  2E29               	goto	l3452
  2175  1628  2D45               	goto	L1
  2176  1629                     l3452:
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2179  1629  3000               	movlw	0
  2180  162A  0535               	andwf	sprintf@flag^(0+128),w
  2181  162B  00AB               	movwf	??_sprintf^(0+128)
  2182  162C  3007               	movlw	7
  2183  162D  0536               	andwf	(sprintf@flag+1)^(0+128),w
  2184  162E  00AC               	movwf	(??_sprintf+1)^(0+128)
  2185  162F  082B               	movf	??_sprintf^(0+128),w
  2186  1630  042C               	iorwf	(??_sprintf^(0+128)+1),w
  2187  1631  1903               	btfsc	3,2
  2188  1632  2E34               	goto	u5361
  2189  1633  2E37               	goto	u5360
  2190  1634                     u5361:
  2191  1634  120A  118A  2E39   	goto	l3610
  2192  1637                     u5360:
  2193  1637                     l3454:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2196  1637  1E36               	btfss	(sprintf@flag+1)^(0+128),4
  2197  1638  2E3A               	goto	u5371
  2198  1639  2E3B               	goto	u5370
  2199  163A                     u5371:
  2200  163A  2E3F               	goto	l3458
  2201  163B                     u5370:
  2202  163B                     l3456:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2205  163B  3006               	movlw	6
  2206  163C  00C8               	movwf	sprintf@prec^(0+128)
  2207  163D  3000               	movlw	0
  2208  163E  00C9               	movwf	(sprintf@prec^(0+128)+1)
  2209  163F                     l3458:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2212  163F  0834               	movf	sprintf@ap^(0+128),w
  2213  1640  0084               	movwf	4
  2214  1641  1383               	bcf	3,7	;select IRP bank0
  2215  1642  0800               	movf	0,w
  2216  1643  00C3               	movwf	sprintf@fval^(0+128)
  2217  1644  0A84               	incf	4,f
  2218  1645  0800               	movf	0,w
  2219  1646  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2220  1647  0A84               	incf	4,f
  2221  1648  0800               	movf	0,w
  2222  1649  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2223  164A  0A84               	incf	4,f
  2224  164B  0800               	movf	0,w
  2225  164C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2226  164D                     l3460:
  2227  164D  3004               	movlw	4
  2228  164E  00AB               	movwf	??_sprintf^(0+128)
  2229  164F  082B               	movf	??_sprintf^(0+128),w
  2230  1650  07B4               	addwf	sprintf@ap^(0+128),f
  2231  1651                     l3462:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2234  1651  0846               	movf	(sprintf@fval+3)^(0+128),w
  2235  1652  00F3               	movwf	___flge@ff1+3
  2236  1653  0845               	movf	(sprintf@fval+2)^(0+128),w
  2237  1654  00F2               	movwf	___flge@ff1+2
  2238  1655  0844               	movf	(sprintf@fval+1)^(0+128),w
  2239  1656  00F1               	movwf	___flge@ff1+1
  2240  1657  0843               	movf	sprintf@fval^(0+128),w
  2241  1658  00F0               	movwf	___flge@ff1
  2242  1659  3000               	movlw	0
  2243  165A  00F7               	movwf	___flge@ff2+3
  2244  165B  3000               	movlw	0
  2245  165C  00F6               	movwf	___flge@ff2+2
  2246  165D  3000               	movlw	0
  2247  165E  00F5               	movwf	___flge@ff2+1
  2248  165F  3000               	movlw	0
  2249  1660  00F4               	movwf	___flge@ff2
  2250  1661  160A  118A  2009  160A  118A  	fcall	___flge
  2251  1666  1803               	btfsc	3,0
  2252  1667  2E69               	goto	u5381
  2253  1668  2E6A               	goto	u5380
  2254  1669                     u5381:
  2255  1669  2E87               	goto	l3468
  2256  166A                     u5380:
  2257  166A                     l3464:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2260  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2261  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2262  166C  0846               	movf	(sprintf@fval+3)^(0+128),w
  2263  166D  00F3               	movwf	___flneg@f1+3
  2264  166E  0845               	movf	(sprintf@fval+2)^(0+128),w
  2265  166F  00F2               	movwf	___flneg@f1+2
  2266  1670  0844               	movf	(sprintf@fval+1)^(0+128),w
  2267  1671  00F1               	movwf	___flneg@f1+1
  2268  1672  0843               	movf	sprintf@fval^(0+128),w
  2269  1673  00F0               	movwf	___flneg@f1
  2270  1674  160A  158A  2188  160A  118A  	fcall	___flneg
  2271  1679  0873               	movf	?___flneg+3,w
  2272  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2273  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2274  167C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2275  167D  0872               	movf	?___flneg+2,w
  2276  167E  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2277  167F  0871               	movf	?___flneg+1,w
  2278  1680  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2279  1681  0870               	movf	?___flneg,w
  2280  1682  00C3               	movwf	sprintf@fval^(0+128)
  2281  1683                     l3466:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2284  1683  3003               	movlw	3
  2285  1684  04B5               	iorwf	sprintf@flag^(0+128),f
  2286  1685  3000               	movlw	0
  2287  1686  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  2288  1687                     l3468:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2291  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2292  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2293  1689  01C1               	clrf	sprintf@eexp^(0+128)
  2294  168A  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  2295  168B                     l3470:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2298  168B  0846               	movf	(sprintf@fval+3)^(0+128),w
  2299  168C  00F3               	movwf	___fleq@ff1+3
  2300  168D  0845               	movf	(sprintf@fval+2)^(0+128),w
  2301  168E  00F2               	movwf	___fleq@ff1+2
  2302  168F  0844               	movf	(sprintf@fval+1)^(0+128),w
  2303  1690  00F1               	movwf	___fleq@ff1+1
  2304  1691  0843               	movf	sprintf@fval^(0+128),w
  2305  1692  00F0               	movwf	___fleq@ff1
  2306  1693  3000               	movlw	0
  2307  1694  00F7               	movwf	___fleq@ff2+3
  2308  1695  3000               	movlw	0
  2309  1696  00F6               	movwf	___fleq@ff2+2
  2310  1697  3000               	movlw	0
  2311  1698  00F5               	movwf	___fleq@ff2+1
  2312  1699  3000               	movlw	0
  2313  169A  00F4               	movwf	___fleq@ff2
  2314  169B  160A  158A  2399  160A  118A  	fcall	___fleq
  2315  16A0  1803               	btfsc	3,0
  2316  16A1  2EA3               	goto	u5391
  2317  16A2  2EA4               	goto	u5390
  2318  16A3                     u5391:
  2319  16A3  2F94               	goto	l3496
  2320  16A4                     u5390:
  2321  16A4                     l3472:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2324  16A4  1003               	clrc
  2325  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2326  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2327  16A7  0D45               	rlf	(sprintf@fval+2)^(0+128),w
  2328  16A8  0D46               	rlf	(sprintf@fval+3)^(0+128),w
  2329  16A9  3E82               	addlw	130
  2330  16AA  00C1               	movwf	sprintf@eexp^(0+128)
  2331  16AB  30FF               	movlw	255
  2332  16AC  1803               	skipnc
  2333  16AD  3000               	movlw	0
  2334  16AE  00C2               	movwf	(sprintf@eexp^(0+128)+1)
  2335  16AF                     l3474:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2338  16AF  30FF               	movlw	255
  2339  16B0  07C1               	addwf	sprintf@eexp^(0+128),f
  2340  16B1  1803               	skipnc
  2341  16B2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2342  16B3  30FF               	movlw	255
  2343  16B4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2344  16B5                     l3476:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2347  16B5  3003               	movlw	3
  2348  16B6  00F0               	movwf	___wmul@multiplier
  2349  16B7  3000               	movlw	0
  2350  16B8  00F1               	movwf	___wmul@multiplier+1
  2351  16B9  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2352  16BA  00F3               	movwf	___wmul@multiplicand+1
  2353  16BB  0841               	movf	sprintf@eexp^(0+128),w
  2354  16BC  00F2               	movwf	___wmul@multiplicand
  2355  16BD  160A  158A  224F  160A  118A  	fcall	___wmul
  2356  16C2  0871               	movf	?___wmul+1,w
  2357  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2358  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2359  16C5  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2360  16C6  0870               	movf	?___wmul,w
  2361  16C7  00C1               	movwf	sprintf@eexp^(0+128)
  2362  16C8                     l3478:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2365  16C8  300A               	movlw	10
  2366  16C9  00F7               	movwf	___awdiv@divisor
  2367  16CA  3000               	movlw	0
  2368  16CB  00F8               	movwf	___awdiv@divisor+1
  2369  16CC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2370  16CD  00FA               	movwf	___awdiv@dividend+1
  2371  16CE  0841               	movf	sprintf@eexp^(0+128),w
  2372  16CF  00F9               	movwf	___awdiv@dividend
  2373  16D0  160A  158A  2562  160A  118A  	fcall	___awdiv
  2374  16D5  0878               	movf	?___awdiv+1,w
  2375  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2376  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2377  16D8  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2378  16D9  0877               	movf	?___awdiv,w
  2379  16DA  00C1               	movwf	sprintf@eexp^(0+128)
  2380  16DB                     l3480:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2383  16DB  1FC2               	btfss	(sprintf@eexp+1)^(0+128),7
  2384  16DC  2EDE               	goto	u5401
  2385  16DD  2EDF               	goto	u5400
  2386  16DE                     u5401:
  2387  16DE  2EE5               	goto	l3484
  2388  16DF                     u5400:
  2389  16DF                     l3482:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2392  16DF  30FF               	movlw	255
  2393  16E0  07C1               	addwf	sprintf@eexp^(0+128),f
  2394  16E1  1803               	skipnc
  2395  16E2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2396  16E3  30FF               	movlw	255
  2397  16E4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2398  16E5                     l3484:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2401  16E5  0341               	decf	sprintf@eexp^(0+128),w
  2402  16E6  3AFF               	xorlw	255
  2403  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2404  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2405  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2406  16EE  0841               	movf	?_scale+3,w
  2407  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2408  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2409  16F1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2410  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2411  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2412  16F4  0840               	movf	?_scale+2,w
  2413  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2414  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2415  16F7  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2416  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2417  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2418  16FA  083F               	movf	?_scale+1,w
  2419  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2420  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2421  16FD  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2422  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2423  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2424  1700  083E               	movf	?_scale,w
  2425  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2426  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2427  1703  00B9               	movwf	sprintf@tmpval^(0+128)
  2428  1704                     l3486:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2431  1704  0846               	movf	(sprintf@fval+3)^(0+128),w
  2432  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2433  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2434  1707  00A7               	movwf	___flmul@b+3
  2435  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2436  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2437  170A  0845               	movf	(sprintf@fval+2)^(0+128),w
  2438  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2439  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2440  170D  00A6               	movwf	___flmul@b+2
  2441  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2442  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2443  1710  0844               	movf	(sprintf@fval+1)^(0+128),w
  2444  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2445  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2446  1713  00A5               	movwf	___flmul@b+1
  2447  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2448  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2449  1716  0843               	movf	sprintf@fval^(0+128),w
  2450  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2451  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2452  1719  00A4               	movwf	___flmul@b
  2453  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2454  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2455  171C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2456  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2457  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2458  171F  00AB               	movwf	___flmul@a+3
  2459  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2460  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2461  1722  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2462  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2463  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2464  1725  00AA               	movwf	___flmul@a+2
  2465  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2466  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2467  1728  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2468  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2469  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2470  172B  00A9               	movwf	___flmul@a+1
  2471  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2472  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2473  172E  0839               	movf	sprintf@tmpval^(0+128),w
  2474  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2475  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2476  1731  00A8               	movwf	___flmul@a
  2477  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2478  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2479  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2480  1739  0827               	movf	?___flmul+3,w
  2481  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2482  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2483  173C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2484  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2485  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2486  173F  0826               	movf	?___flmul+2,w
  2487  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2488  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2489  1742  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2490  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2491  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2492  1745  0825               	movf	?___flmul+1,w
  2493  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2494  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2495  1748  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2496  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2497  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2498  174B  0824               	movf	?___flmul,w
  2499  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2500  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2501  174E  00B9               	movwf	sprintf@tmpval^(0+128)
  2502  174F                     l3488:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2505  174F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2506  1750  00F3               	movwf	___flge@ff1+3
  2507  1751  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2508  1752  00F2               	movwf	___flge@ff1+2
  2509  1753  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2510  1754  00F1               	movwf	___flge@ff1+1
  2511  1755  0839               	movf	sprintf@tmpval^(0+128),w
  2512  1756  00F0               	movwf	___flge@ff1
  2513  1757  303F               	movlw	63
  2514  1758  00F7               	movwf	___flge@ff2+3
  2515  1759  3080               	movlw	128
  2516  175A  00F6               	movwf	___flge@ff2+2
  2517  175B  3000               	movlw	0
  2518  175C  00F5               	movwf	___flge@ff2+1
  2519  175D  3000               	movlw	0
  2520  175E  00F4               	movwf	___flge@ff2
  2521  175F  160A  118A  2009  160A  118A  	fcall	___flge
  2522  1764  1803               	btfsc	3,0
  2523  1765  2F67               	goto	u5411
  2524  1766  2F68               	goto	u5410
  2525  1767                     u5411:
  2526  1767  2F71               	goto	l3492
  2527  1768                     u5410:
  2528  1768                     l3490:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2531  1768  30FF               	movlw	255
  2532  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2533  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2534  176B  07C1               	addwf	sprintf@eexp^(0+128),f
  2535  176C  1803               	skipnc
  2536  176D  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2537  176E  30FF               	movlw	255
  2538  176F  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2539  1770  2F94               	goto	l3496
  2540  1771                     l3492:
  2541  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2542  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2543  1773  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2544  1774  00F3               	movwf	___flge@ff1+3
  2545  1775  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2546  1776  00F2               	movwf	___flge@ff1+2
  2547  1777  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2548  1778  00F1               	movwf	___flge@ff1+1
  2549  1779  0839               	movf	sprintf@tmpval^(0+128),w
  2550  177A  00F0               	movwf	___flge@ff1
  2551  177B  3041               	movlw	65
  2552  177C  00F7               	movwf	___flge@ff2+3
  2553  177D  3020               	movlw	32
  2554  177E  00F6               	movwf	___flge@ff2+2
  2555  177F  3000               	movlw	0
  2556  1780  00F5               	movwf	___flge@ff2+1
  2557  1781  3000               	movlw	0
  2558  1782  00F4               	movwf	___flge@ff2
  2559  1783  160A  118A  2009  160A  118A  	fcall	___flge
  2560  1788  1C03               	btfss	3,0
  2561  1789  2F8B               	goto	u5421
  2562  178A  2F8C               	goto	u5420
  2563  178B                     u5421:
  2564  178B  2F94               	goto	l3496
  2565  178C                     u5420:
  2566  178C                     l3494:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2569  178C  3001               	movlw	1
  2570  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2571  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2572  178F  07C1               	addwf	sprintf@eexp^(0+128),f
  2573  1790  1803               	skipnc
  2574  1791  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2575  1792  3000               	movlw	0
  2576  1793  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2577  1794                     l3496:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2580  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2581  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2582  1796  0849               	movf	(sprintf@prec+1)^(0+128),w
  2583  1797  3A80               	xorlw	128
  2584  1798  00FF               	movwf	btemp+1
  2585  1799  3080               	movlw	128
  2586  179A  027F               	subwf	btemp+1,w
  2587  179B  1D03               	skipz
  2588  179C  2F9F               	goto	u5435
  2589  179D  300D               	movlw	13
  2590  179E  0248               	subwf	sprintf@prec^(0+128),w
  2591  179F                     u5435:
  2592  179F  1803               	skipnc
  2593  17A0  2FA2               	goto	u5431
  2594  17A1  2FA3               	goto	u5430
  2595  17A2                     u5431:
  2596  17A2  2FEA               	goto	l3500
  2597  17A3                     u5430:
  2598  17A3                     l3498:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2601  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2602  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2603  17A5  0848               	movf	sprintf@prec^(0+128),w
  2604  17A6  160A  118A  20AB  160A  118A  	fcall	_fround
  2605  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2606  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2607  17AD  0841               	movf	?_fround+3,w
  2608  17AE  00D5               	movwf	___fladd@b+3
  2609  17AF  0840               	movf	?_fround+2,w
  2610  17B0  00D4               	movwf	___fladd@b+2
  2611  17B1  083F               	movf	?_fround+1,w
  2612  17B2  00D3               	movwf	___fladd@b+1
  2613  17B3  083E               	movf	?_fround,w
  2614  17B4  00D2               	movwf	___fladd@b
  2615  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2616  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2617  17B7  0846               	movf	(sprintf@fval+3)^(0+128),w
  2618  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2619  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2620  17BA  00D9               	movwf	___fladd@a+3
  2621  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2622  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2623  17BD  0845               	movf	(sprintf@fval+2)^(0+128),w
  2624  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2625  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2626  17C0  00D8               	movwf	___fladd@a+2
  2627  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2628  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2629  17C3  0844               	movf	(sprintf@fval+1)^(0+128),w
  2630  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2631  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2632  17C6  00D7               	movwf	___fladd@a+1
  2633  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2634  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2635  17C9  0843               	movf	sprintf@fval^(0+128),w
  2636  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2637  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2638  17CC  00D6               	movwf	___fladd@a
  2639  17CD  160A  118A  22B6  160A  118A  	fcall	___fladd
  2640  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2641  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2642  17D4  0855               	movf	?___fladd+3,w
  2643  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2644  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2645  17D7  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2646  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2647  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2648  17DA  0854               	movf	?___fladd+2,w
  2649  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2650  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2651  17DD  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2652  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2653  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2654  17E0  0853               	movf	?___fladd+1,w
  2655  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2656  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2657  17E3  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2658  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2659  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2660  17E6  0852               	movf	?___fladd,w
  2661  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2662  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2663  17E9  00C3               	movwf	sprintf@fval^(0+128)
  2664  17EA                     l3500:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2667  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2668  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2669  17EC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2670  17ED  3A80               	xorlw	128
  2671  17EE  00FF               	movwf	btemp+1
  2672  17EF  3080               	movlw	128
  2673  17F0  027F               	subwf	btemp+1,w
  2674  17F1  1D03               	skipz
  2675  17F2  2FF5               	goto	u5445
  2676  17F3  300A               	movlw	10
  2677  17F4  0241               	subwf	sprintf@eexp^(0+128),w
  2678  17F5                     u5445:
  2679  17F5  1803               	skipnc
  2680  17F6  2FFA               	goto	u5441
  2681  17F7  120A  118A  29E9   	goto	u5440
  2682  17FA                     u5441:
  2683  17FA  120A  118A  2A3A   	goto	l3508
  2684  17FD                     L3:
  2685  17FD                     L2:
  2686  17FD  120A  118A  2FEA   	ljmp	l3690
  2687                           
  2688                           	psect	text4
  2689  0940                     __ptext4:	
  2690 ;; *************** function _scale *****************
  2691 ;; Defined at:
  2692 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  scl             1    wreg     char 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  scl             1   48[BANK0 ] char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  4   30[BANK0 ] char 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2706 ;;      Params:         0       4       0       0       0
  2707 ;;      Locals:         0       5       0       0       0
  2708 ;;      Temps:          0      10       0       0       0
  2709 ;;      Totals:         0      19       0       0       0
  2710 ;;Total ram usage:       19 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    2
  2713 ;; This function calls:
  2714 ;;		___awdiv
  2715 ;;		___awmod
  2716 ;;		___flmul
  2717 ;; This function is called by:
  2718 ;;		_sprintf
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _scale
  2724  0940                     _scale:
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2728                           ;scale@scl stored from wreg
  2729  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0942  00D0               	movwf	scale@scl
  2732  0943                     l2946:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2735  0943  1FD0               	btfss	scale@scl,7
  2736  0944  2946               	goto	u4281
  2737  0945  2947               	goto	u4280
  2738  0946                     u4281:
  2739  0946  2AF4               	goto	l2968
  2740  0947                     u4280:
  2741  0947                     l2948:
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2744  0947  09D0               	comf	scale@scl,f
  2745  0948  0AD0               	incf	scale@scl,f
  2746  0949                     l2950:
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2749  0949  0850               	movf	scale@scl,w
  2750  094A  3A80               	xorlw	128
  2751  094B  3E12               	addlw	-238
  2752  094C  1C03               	skipc
  2753  094D  294F               	goto	u4291
  2754  094E  2950               	goto	u4290
  2755  094F                     u4291:
  2756  094F  2A38               	goto	l2958
  2757  0950                     u4290:
  2758  0950                     l2952:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2761  0950  300A               	movlw	10
  2762  0951  00F7               	movwf	___awdiv@divisor
  2763  0952  3000               	movlw	0
  2764  0953  00F8               	movwf	___awdiv@divisor+1
  2765  0954  0850               	movf	scale@scl,w
  2766  0955  00F2               	movwf	___awmod@dividend
  2767  0956  01F3               	clrf	___awmod@dividend+1
  2768  0957  1BF2               	btfsc	___awmod@dividend,7
  2769  0958  03F3               	decf	___awmod@dividend+1,f
  2770  0959  3064               	movlw	100
  2771  095A  00F0               	movwf	___awmod@divisor
  2772  095B  3000               	movlw	0
  2773  095C  00F1               	movwf	___awmod@divisor+1
  2774  095D  160A  158A  243D  120A  158A  	fcall	___awmod
  2775  0962  0871               	movf	?___awmod+1,w
  2776  0963  00FA               	movwf	___awdiv@dividend+1
  2777  0964  0870               	movf	?___awmod,w
  2778  0965  00F9               	movwf	___awdiv@dividend
  2779  0966  160A  158A  2562  120A  158A  	fcall	___awdiv
  2780  096B  0877               	movf	?___awdiv,w
  2781  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2782  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2783  096E  00C2               	movwf	??_scale
  2784  096F  3001               	movlw	1
  2785  0970                     u4305:
  2786  0970  1003               	clrc
  2787  0971  0DC2               	rlf	??_scale,f
  2788  0972  3EFF               	addlw	-1
  2789  0973  1D03               	skipz
  2790  0974  2970               	goto	u4305
  2791  0975  1003               	clrc
  2792  0976  0D42               	rlf	??_scale,w
  2793  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2794  0978  0084               	movwf	4
  2795  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  2796  097E  00C3               	movwf	??_scale+1
  2797  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  2798  0984  00C4               	movwf	??_scale+2
  2799  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  2800  098A  00C5               	movwf	??_scale+3
  2801  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  2802  0990  00C6               	movwf	??_scale+4
  2803  0991  0846               	movf	??_scale+4,w
  2804  0992  00A7               	movwf	___flmul@b+3
  2805  0993  0845               	movf	??_scale+3,w
  2806  0994  00A6               	movwf	___flmul@b+2
  2807  0995  0844               	movf	??_scale+2,w
  2808  0996  00A5               	movwf	___flmul@b+1
  2809  0997  0843               	movf	??_scale+1,w
  2810  0998  00A4               	movwf	___flmul@b
  2811  0999  3064               	movlw	100
  2812  099A  00F7               	movwf	___awdiv@divisor
  2813  099B  3000               	movlw	0
  2814  099C  00F8               	movwf	___awdiv@divisor+1
  2815  099D  0850               	movf	scale@scl,w
  2816  099E  00F9               	movwf	___awdiv@dividend
  2817  099F  01FA               	clrf	___awdiv@dividend+1
  2818  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2819  09A1  03FA               	decf	___awdiv@dividend+1,f
  2820  09A2  160A  158A  2562  120A  158A  	fcall	___awdiv
  2821  09A7  0877               	movf	?___awdiv,w
  2822  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2823  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2824  09AA  00C7               	movwf	??_scale+5
  2825  09AB  3001               	movlw	1
  2826  09AC                     u4315:
  2827  09AC  1003               	clrc
  2828  09AD  0DC7               	rlf	??_scale+5,f
  2829  09AE  3EFF               	addlw	-1
  2830  09AF  1D03               	skipz
  2831  09B0  29AC               	goto	u4315
  2832  09B1  1003               	clrc
  2833  09B2  0D47               	rlf	??_scale+5,w
  2834  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2835  09B4  0084               	movwf	4
  2836  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  2837  09BA  00C8               	movwf	??_scale+6
  2838  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  2839  09C0  00C9               	movwf	??_scale+7
  2840  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  2841  09C6  00CA               	movwf	??_scale+8
  2842  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  2843  09CC  00CB               	movwf	??_scale+9
  2844  09CD  084B               	movf	??_scale+9,w
  2845  09CE  00AB               	movwf	___flmul@a+3
  2846  09CF  084A               	movf	??_scale+8,w
  2847  09D0  00AA               	movwf	___flmul@a+2
  2848  09D1  0849               	movf	??_scale+7,w
  2849  09D2  00A9               	movwf	___flmul@a+1
  2850  09D3  0848               	movf	??_scale+6,w
  2851  09D4  00A8               	movwf	___flmul@a
  2852  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2853  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2854  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2855  09DC  0827               	movf	?___flmul+3,w
  2856  09DD  00CF               	movwf	_scale$1146+3
  2857  09DE  0826               	movf	?___flmul+2,w
  2858  09DF  00CE               	movwf	_scale$1146+2
  2859  09E0  0825               	movf	?___flmul+1,w
  2860  09E1  00CD               	movwf	_scale$1146+1
  2861  09E2  0824               	movf	?___flmul,w
  2862  09E3  00CC               	movwf	_scale$1146
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2865  09E4  300A               	movlw	10
  2866  09E5  00F0               	movwf	___awmod@divisor
  2867  09E6  3000               	movlw	0
  2868  09E7  00F1               	movwf	___awmod@divisor+1
  2869  09E8  0850               	movf	scale@scl,w
  2870  09E9  00F2               	movwf	___awmod@dividend
  2871  09EA  01F3               	clrf	___awmod@dividend+1
  2872  09EB  1BF2               	btfsc	___awmod@dividend,7
  2873  09EC  03F3               	decf	___awmod@dividend+1,f
  2874  09ED  160A  158A  243D  120A  158A  	fcall	___awmod
  2875  09F2  0870               	movf	?___awmod,w
  2876  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2877  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2878  09F5  00C2               	movwf	??_scale
  2879  09F6  3001               	movlw	1
  2880  09F7                     u4325:
  2881  09F7  1003               	clrc
  2882  09F8  0DC2               	rlf	??_scale,f
  2883  09F9  3EFF               	addlw	-1
  2884  09FA  1D03               	skipz
  2885  09FB  29F7               	goto	u4325
  2886  09FC  1003               	clrc
  2887  09FD  0D42               	rlf	??_scale,w
  2888  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2889  09FF  0084               	movwf	4
  2890  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  2891  0A05  00C3               	movwf	??_scale+1
  2892  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  2893  0A0B  00C4               	movwf	??_scale+2
  2894  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  2895  0A11  00C5               	movwf	??_scale+3
  2896  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  2897  0A17  00C6               	movwf	??_scale+4
  2898  0A18  0846               	movf	??_scale+4,w
  2899  0A19  00A7               	movwf	___flmul@b+3
  2900  0A1A  0845               	movf	??_scale+3,w
  2901  0A1B  00A6               	movwf	___flmul@b+2
  2902  0A1C  0844               	movf	??_scale+2,w
  2903  0A1D  00A5               	movwf	___flmul@b+1
  2904  0A1E  0843               	movf	??_scale+1,w
  2905  0A1F  00A4               	movwf	___flmul@b
  2906  0A20  084F               	movf	_scale$1146+3,w
  2907  0A21  00AB               	movwf	___flmul@a+3
  2908  0A22  084E               	movf	_scale$1146+2,w
  2909  0A23  00AA               	movwf	___flmul@a+2
  2910  0A24  084D               	movf	_scale$1146+1,w
  2911  0A25  00A9               	movwf	___flmul@a+1
  2912  0A26  084C               	movf	_scale$1146,w
  2913  0A27  00A8               	movwf	___flmul@a
  2914  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  2915  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0A2F  0827               	movf	?___flmul+3,w
  2918  0A30  00C1               	movwf	?_scale+3
  2919  0A31  0826               	movf	?___flmul+2,w
  2920  0A32  00C0               	movwf	?_scale+2
  2921  0A33  0825               	movf	?___flmul+1,w
  2922  0A34  00BF               	movwf	?_scale+1
  2923  0A35  0824               	movf	?___flmul,w
  2924  0A36  00BE               	movwf	?_scale
  2925  0A37  2C9E               	goto	l317
  2926  0A38                     l2958:
  2927  0A38  0850               	movf	scale@scl,w
  2928  0A39  3A80               	xorlw	128
  2929  0A3A  3E75               	addlw	-139
  2930  0A3B  1C03               	skipc
  2931  0A3C  2A3E               	goto	u4331
  2932  0A3D  2A3F               	goto	u4330
  2933  0A3E                     u4331:
  2934  0A3E  2AC7               	goto	l2964
  2935  0A3F                     u4330:
  2936  0A3F                     l2960:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2939  0A3F  300A               	movlw	10
  2940  0A40  00F0               	movwf	___awmod@divisor
  2941  0A41  3000               	movlw	0
  2942  0A42  00F1               	movwf	___awmod@divisor+1
  2943  0A43  0850               	movf	scale@scl,w
  2944  0A44  00F2               	movwf	___awmod@dividend
  2945  0A45  01F3               	clrf	___awmod@dividend+1
  2946  0A46  1BF2               	btfsc	___awmod@dividend,7
  2947  0A47  03F3               	decf	___awmod@dividend+1,f
  2948  0A48  160A  158A  243D  120A  158A  	fcall	___awmod
  2949  0A4D  0870               	movf	?___awmod,w
  2950  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0A50  00C2               	movwf	??_scale
  2953  0A51  3001               	movlw	1
  2954  0A52                     u4345:
  2955  0A52  1003               	clrc
  2956  0A53  0DC2               	rlf	??_scale,f
  2957  0A54  3EFF               	addlw	-1
  2958  0A55  1D03               	skipz
  2959  0A56  2A52               	goto	u4345
  2960  0A57  1003               	clrc
  2961  0A58  0D42               	rlf	??_scale,w
  2962  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2963  0A5A  0084               	movwf	4
  2964  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  2965  0A60  00C3               	movwf	??_scale+1
  2966  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  2967  0A66  00C4               	movwf	??_scale+2
  2968  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  2969  0A6C  00C5               	movwf	??_scale+3
  2970  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  2971  0A72  00C6               	movwf	??_scale+4
  2972  0A73  0846               	movf	??_scale+4,w
  2973  0A74  00A7               	movwf	___flmul@b+3
  2974  0A75  0845               	movf	??_scale+3,w
  2975  0A76  00A6               	movwf	___flmul@b+2
  2976  0A77  0844               	movf	??_scale+2,w
  2977  0A78  00A5               	movwf	___flmul@b+1
  2978  0A79  0843               	movf	??_scale+1,w
  2979  0A7A  00A4               	movwf	___flmul@b
  2980  0A7B  300A               	movlw	10
  2981  0A7C  00F7               	movwf	___awdiv@divisor
  2982  0A7D  3000               	movlw	0
  2983  0A7E  00F8               	movwf	___awdiv@divisor+1
  2984  0A7F  0850               	movf	scale@scl,w
  2985  0A80  00F9               	movwf	___awdiv@dividend
  2986  0A81  01FA               	clrf	___awdiv@dividend+1
  2987  0A82  1BF9               	btfsc	___awdiv@dividend,7
  2988  0A83  03FA               	decf	___awdiv@dividend+1,f
  2989  0A84  160A  158A  2562  120A  158A  	fcall	___awdiv
  2990  0A89  0877               	movf	?___awdiv,w
  2991  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0A8C  00C7               	movwf	??_scale+5
  2994  0A8D  3001               	movlw	1
  2995  0A8E                     u4355:
  2996  0A8E  1003               	clrc
  2997  0A8F  0DC7               	rlf	??_scale+5,f
  2998  0A90  3EFF               	addlw	-1
  2999  0A91  1D03               	skipz
  3000  0A92  2A8E               	goto	u4355
  3001  0A93  1003               	clrc
  3002  0A94  0D47               	rlf	??_scale+5,w
  3003  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3004  0A96  0084               	movwf	4
  3005  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  3006  0A9C  00C8               	movwf	??_scale+6
  3007  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  3008  0AA2  00C9               	movwf	??_scale+7
  3009  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3010  0AA8  00CA               	movwf	??_scale+8
  3011  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3012  0AAE  00CB               	movwf	??_scale+9
  3013  0AAF  084B               	movf	??_scale+9,w
  3014  0AB0  00AB               	movwf	___flmul@a+3
  3015  0AB1  084A               	movf	??_scale+8,w
  3016  0AB2  00AA               	movwf	___flmul@a+2
  3017  0AB3  0849               	movf	??_scale+7,w
  3018  0AB4  00A9               	movwf	___flmul@a+1
  3019  0AB5  0848               	movf	??_scale+6,w
  3020  0AB6  00A8               	movwf	___flmul@a
  3021  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3022  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0ABE  0827               	movf	?___flmul+3,w
  3025  0ABF  00C1               	movwf	?_scale+3
  3026  0AC0  0826               	movf	?___flmul+2,w
  3027  0AC1  00C0               	movwf	?_scale+2
  3028  0AC2  0825               	movf	?___flmul+1,w
  3029  0AC3  00BF               	movwf	?_scale+1
  3030  0AC4  0824               	movf	?___flmul,w
  3031  0AC5  00BE               	movwf	?_scale
  3032  0AC6  2C9E               	goto	l317
  3033  0AC7                     l2964:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3036  0AC7  0850               	movf	scale@scl,w
  3037  0AC8  00C2               	movwf	??_scale
  3038  0AC9  3001               	movlw	1
  3039  0ACA                     u4365:
  3040  0ACA  1003               	clrc
  3041  0ACB  0DC2               	rlf	??_scale,f
  3042  0ACC  3EFF               	addlw	-1
  3043  0ACD  1D03               	skipz
  3044  0ACE  2ACA               	goto	u4365
  3045  0ACF  1003               	clrc
  3046  0AD0  0D42               	rlf	??_scale,w
  3047  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3048  0AD2  0084               	movwf	4
  3049  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  3050  0AD8  00C3               	movwf	??_scale+1
  3051  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  3052  0ADE  00C4               	movwf	??_scale+2
  3053  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  3054  0AE4  00C5               	movwf	??_scale+3
  3055  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3056  0AEA  00C6               	movwf	??_scale+4
  3057  0AEB  0846               	movf	??_scale+4,w
  3058  0AEC  00C1               	movwf	?_scale+3
  3059  0AED  0845               	movf	??_scale+3,w
  3060  0AEE  00C0               	movwf	?_scale+2
  3061  0AEF  0844               	movf	??_scale+2,w
  3062  0AF0  00BF               	movwf	?_scale+1
  3063  0AF1  0843               	movf	??_scale+1,w
  3064  0AF2  00BE               	movwf	?_scale
  3065  0AF3  2C9E               	goto	l317
  3066  0AF4                     l2968:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3069  0AF4  0850               	movf	scale@scl,w
  3070  0AF5  3A80               	xorlw	128
  3071  0AF6  3E12               	addlw	-238
  3072  0AF7  1C03               	skipc
  3073  0AF8  2AFA               	goto	u4371
  3074  0AF9  2AFB               	goto	u4370
  3075  0AFA                     u4371:
  3076  0AFA  2BE3               	goto	l2976
  3077  0AFB                     u4370:
  3078  0AFB                     l2970:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3081  0AFB  300A               	movlw	10
  3082  0AFC  00F7               	movwf	___awdiv@divisor
  3083  0AFD  3000               	movlw	0
  3084  0AFE  00F8               	movwf	___awdiv@divisor+1
  3085  0AFF  0850               	movf	scale@scl,w
  3086  0B00  00F2               	movwf	___awmod@dividend
  3087  0B01  01F3               	clrf	___awmod@dividend+1
  3088  0B02  1BF2               	btfsc	___awmod@dividend,7
  3089  0B03  03F3               	decf	___awmod@dividend+1,f
  3090  0B04  3064               	movlw	100
  3091  0B05  00F0               	movwf	___awmod@divisor
  3092  0B06  3000               	movlw	0
  3093  0B07  00F1               	movwf	___awmod@divisor+1
  3094  0B08  160A  158A  243D  120A  158A  	fcall	___awmod
  3095  0B0D  0871               	movf	?___awmod+1,w
  3096  0B0E  00FA               	movwf	___awdiv@dividend+1
  3097  0B0F  0870               	movf	?___awmod,w
  3098  0B10  00F9               	movwf	___awdiv@dividend
  3099  0B11  160A  158A  2562  120A  158A  	fcall	___awdiv
  3100  0B16  0877               	movf	?___awdiv,w
  3101  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0B19  00C2               	movwf	??_scale
  3104  0B1A  3001               	movlw	1
  3105  0B1B                     u4385:
  3106  0B1B  1003               	clrc
  3107  0B1C  0DC2               	rlf	??_scale,f
  3108  0B1D  3EFF               	addlw	-1
  3109  0B1E  1D03               	skipz
  3110  0B1F  2B1B               	goto	u4385
  3111  0B20  1003               	clrc
  3112  0B21  0D42               	rlf	??_scale,w
  3113  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3114  0B23  0084               	movwf	4
  3115  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  3116  0B29  00C3               	movwf	??_scale+1
  3117  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  3118  0B2F  00C4               	movwf	??_scale+2
  3119  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  3120  0B35  00C5               	movwf	??_scale+3
  3121  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  3122  0B3B  00C6               	movwf	??_scale+4
  3123  0B3C  0846               	movf	??_scale+4,w
  3124  0B3D  00A7               	movwf	___flmul@b+3
  3125  0B3E  0845               	movf	??_scale+3,w
  3126  0B3F  00A6               	movwf	___flmul@b+2
  3127  0B40  0844               	movf	??_scale+2,w
  3128  0B41  00A5               	movwf	___flmul@b+1
  3129  0B42  0843               	movf	??_scale+1,w
  3130  0B43  00A4               	movwf	___flmul@b
  3131  0B44  3064               	movlw	100
  3132  0B45  00F7               	movwf	___awdiv@divisor
  3133  0B46  3000               	movlw	0
  3134  0B47  00F8               	movwf	___awdiv@divisor+1
  3135  0B48  0850               	movf	scale@scl,w
  3136  0B49  00F9               	movwf	___awdiv@dividend
  3137  0B4A  01FA               	clrf	___awdiv@dividend+1
  3138  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3139  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3140  0B4D  160A  158A  2562  120A  158A  	fcall	___awdiv
  3141  0B52  0877               	movf	?___awdiv,w
  3142  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0B55  00C7               	movwf	??_scale+5
  3145  0B56  3001               	movlw	1
  3146  0B57                     u4395:
  3147  0B57  1003               	clrc
  3148  0B58  0DC7               	rlf	??_scale+5,f
  3149  0B59  3EFF               	addlw	-1
  3150  0B5A  1D03               	skipz
  3151  0B5B  2B57               	goto	u4395
  3152  0B5C  1003               	clrc
  3153  0B5D  0D47               	rlf	??_scale+5,w
  3154  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3155  0B5F  0084               	movwf	4
  3156  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  3157  0B65  00C8               	movwf	??_scale+6
  3158  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  3159  0B6B  00C9               	movwf	??_scale+7
  3160  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  3161  0B71  00CA               	movwf	??_scale+8
  3162  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  3163  0B77  00CB               	movwf	??_scale+9
  3164  0B78  084B               	movf	??_scale+9,w
  3165  0B79  00AB               	movwf	___flmul@a+3
  3166  0B7A  084A               	movf	??_scale+8,w
  3167  0B7B  00AA               	movwf	___flmul@a+2
  3168  0B7C  0849               	movf	??_scale+7,w
  3169  0B7D  00A9               	movwf	___flmul@a+1
  3170  0B7E  0848               	movf	??_scale+6,w
  3171  0B7F  00A8               	movwf	___flmul@a
  3172  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3173  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0B87  0827               	movf	?___flmul+3,w
  3176  0B88  00CF               	movwf	_scale$1146+3
  3177  0B89  0826               	movf	?___flmul+2,w
  3178  0B8A  00CE               	movwf	_scale$1146+2
  3179  0B8B  0825               	movf	?___flmul+1,w
  3180  0B8C  00CD               	movwf	_scale$1146+1
  3181  0B8D  0824               	movf	?___flmul,w
  3182  0B8E  00CC               	movwf	_scale$1146
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3185  0B8F  300A               	movlw	10
  3186  0B90  00F0               	movwf	___awmod@divisor
  3187  0B91  3000               	movlw	0
  3188  0B92  00F1               	movwf	___awmod@divisor+1
  3189  0B93  0850               	movf	scale@scl,w
  3190  0B94  00F2               	movwf	___awmod@dividend
  3191  0B95  01F3               	clrf	___awmod@dividend+1
  3192  0B96  1BF2               	btfsc	___awmod@dividend,7
  3193  0B97  03F3               	decf	___awmod@dividend+1,f
  3194  0B98  160A  158A  243D  120A  158A  	fcall	___awmod
  3195  0B9D  0870               	movf	?___awmod,w
  3196  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0BA0  00C2               	movwf	??_scale
  3199  0BA1  3001               	movlw	1
  3200  0BA2                     u4405:
  3201  0BA2  1003               	clrc
  3202  0BA3  0DC2               	rlf	??_scale,f
  3203  0BA4  3EFF               	addlw	-1
  3204  0BA5  1D03               	skipz
  3205  0BA6  2BA2               	goto	u4405
  3206  0BA7  1003               	clrc
  3207  0BA8  0D42               	rlf	??_scale,w
  3208  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3209  0BAA  0084               	movwf	4
  3210  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  3211  0BB0  00C3               	movwf	??_scale+1
  3212  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  3213  0BB6  00C4               	movwf	??_scale+2
  3214  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  3215  0BBC  00C5               	movwf	??_scale+3
  3216  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  3217  0BC2  00C6               	movwf	??_scale+4
  3218  0BC3  0846               	movf	??_scale+4,w
  3219  0BC4  00A7               	movwf	___flmul@b+3
  3220  0BC5  0845               	movf	??_scale+3,w
  3221  0BC6  00A6               	movwf	___flmul@b+2
  3222  0BC7  0844               	movf	??_scale+2,w
  3223  0BC8  00A5               	movwf	___flmul@b+1
  3224  0BC9  0843               	movf	??_scale+1,w
  3225  0BCA  00A4               	movwf	___flmul@b
  3226  0BCB  084F               	movf	_scale$1146+3,w
  3227  0BCC  00AB               	movwf	___flmul@a+3
  3228  0BCD  084E               	movf	_scale$1146+2,w
  3229  0BCE  00AA               	movwf	___flmul@a+2
  3230  0BCF  084D               	movf	_scale$1146+1,w
  3231  0BD0  00A9               	movwf	___flmul@a+1
  3232  0BD1  084C               	movf	_scale$1146,w
  3233  0BD2  00A8               	movwf	___flmul@a
  3234  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3235  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0BDA  0827               	movf	?___flmul+3,w
  3238  0BDB  00C1               	movwf	?_scale+3
  3239  0BDC  0826               	movf	?___flmul+2,w
  3240  0BDD  00C0               	movwf	?_scale+2
  3241  0BDE  0825               	movf	?___flmul+1,w
  3242  0BDF  00BF               	movwf	?_scale+1
  3243  0BE0  0824               	movf	?___flmul,w
  3244  0BE1  00BE               	movwf	?_scale
  3245  0BE2  2C9E               	goto	l317
  3246  0BE3                     l2976:
  3247  0BE3  0850               	movf	scale@scl,w
  3248  0BE4  3A80               	xorlw	128
  3249  0BE5  3E75               	addlw	-139
  3250  0BE6  1C03               	skipc
  3251  0BE7  2BE9               	goto	u4411
  3252  0BE8  2BEA               	goto	u4410
  3253  0BE9                     u4411:
  3254  0BE9  2C72               	goto	l2982
  3255  0BEA                     u4410:
  3256  0BEA                     l2978:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3259  0BEA  300A               	movlw	10
  3260  0BEB  00F0               	movwf	___awmod@divisor
  3261  0BEC  3000               	movlw	0
  3262  0BED  00F1               	movwf	___awmod@divisor+1
  3263  0BEE  0850               	movf	scale@scl,w
  3264  0BEF  00F2               	movwf	___awmod@dividend
  3265  0BF0  01F3               	clrf	___awmod@dividend+1
  3266  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3267  0BF2  03F3               	decf	___awmod@dividend+1,f
  3268  0BF3  160A  158A  243D  120A  158A  	fcall	___awmod
  3269  0BF8  0870               	movf	?___awmod,w
  3270  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0BFB  00C2               	movwf	??_scale
  3273  0BFC  3001               	movlw	1
  3274  0BFD                     u4425:
  3275  0BFD  1003               	clrc
  3276  0BFE  0DC2               	rlf	??_scale,f
  3277  0BFF  3EFF               	addlw	-1
  3278  0C00  1D03               	skipz
  3279  0C01  2BFD               	goto	u4425
  3280  0C02  1003               	clrc
  3281  0C03  0D42               	rlf	??_scale,w
  3282  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3283  0C05  0084               	movwf	4
  3284  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  3285  0C0B  00C3               	movwf	??_scale+1
  3286  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3287  0C11  00C4               	movwf	??_scale+2
  3288  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  3289  0C17  00C5               	movwf	??_scale+3
  3290  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  3291  0C1D  00C6               	movwf	??_scale+4
  3292  0C1E  0846               	movf	??_scale+4,w
  3293  0C1F  00A7               	movwf	___flmul@b+3
  3294  0C20  0845               	movf	??_scale+3,w
  3295  0C21  00A6               	movwf	___flmul@b+2
  3296  0C22  0844               	movf	??_scale+2,w
  3297  0C23  00A5               	movwf	___flmul@b+1
  3298  0C24  0843               	movf	??_scale+1,w
  3299  0C25  00A4               	movwf	___flmul@b
  3300  0C26  300A               	movlw	10
  3301  0C27  00F7               	movwf	___awdiv@divisor
  3302  0C28  3000               	movlw	0
  3303  0C29  00F8               	movwf	___awdiv@divisor+1
  3304  0C2A  0850               	movf	scale@scl,w
  3305  0C2B  00F9               	movwf	___awdiv@dividend
  3306  0C2C  01FA               	clrf	___awdiv@dividend+1
  3307  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3308  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3309  0C2F  160A  158A  2562  120A  158A  	fcall	___awdiv
  3310  0C34  0877               	movf	?___awdiv,w
  3311  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0C37  00C7               	movwf	??_scale+5
  3314  0C38  3001               	movlw	1
  3315  0C39                     u4435:
  3316  0C39  1003               	clrc
  3317  0C3A  0DC7               	rlf	??_scale+5,f
  3318  0C3B  3EFF               	addlw	-1
  3319  0C3C  1D03               	skipz
  3320  0C3D  2C39               	goto	u4435
  3321  0C3E  1003               	clrc
  3322  0C3F  0D47               	rlf	??_scale+5,w
  3323  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3324  0C41  0084               	movwf	4
  3325  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  3326  0C47  00C8               	movwf	??_scale+6
  3327  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  3328  0C4D  00C9               	movwf	??_scale+7
  3329  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  3330  0C53  00CA               	movwf	??_scale+8
  3331  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  3332  0C59  00CB               	movwf	??_scale+9
  3333  0C5A  084B               	movf	??_scale+9,w
  3334  0C5B  00AB               	movwf	___flmul@a+3
  3335  0C5C  084A               	movf	??_scale+8,w
  3336  0C5D  00AA               	movwf	___flmul@a+2
  3337  0C5E  0849               	movf	??_scale+7,w
  3338  0C5F  00A9               	movwf	___flmul@a+1
  3339  0C60  0848               	movf	??_scale+6,w
  3340  0C61  00A8               	movwf	___flmul@a
  3341  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3342  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0C69  0827               	movf	?___flmul+3,w
  3345  0C6A  00C1               	movwf	?_scale+3
  3346  0C6B  0826               	movf	?___flmul+2,w
  3347  0C6C  00C0               	movwf	?_scale+2
  3348  0C6D  0825               	movf	?___flmul+1,w
  3349  0C6E  00BF               	movwf	?_scale+1
  3350  0C6F  0824               	movf	?___flmul,w
  3351  0C70  00BE               	movwf	?_scale
  3352  0C71  2C9E               	goto	l317
  3353  0C72                     l2982:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3356  0C72  0850               	movf	scale@scl,w
  3357  0C73  00C2               	movwf	??_scale
  3358  0C74  3001               	movlw	1
  3359  0C75                     u4445:
  3360  0C75  1003               	clrc
  3361  0C76  0DC2               	rlf	??_scale,f
  3362  0C77  3EFF               	addlw	-1
  3363  0C78  1D03               	skipz
  3364  0C79  2C75               	goto	u4445
  3365  0C7A  1003               	clrc
  3366  0C7B  0D42               	rlf	??_scale,w
  3367  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3368  0C7D  0084               	movwf	4
  3369  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  3370  0C83  00C3               	movwf	??_scale+1
  3371  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  3372  0C89  00C4               	movwf	??_scale+2
  3373  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  3374  0C8F  00C5               	movwf	??_scale+3
  3375  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  3376  0C95  00C6               	movwf	??_scale+4
  3377  0C96  0846               	movf	??_scale+4,w
  3378  0C97  00C1               	movwf	?_scale+3
  3379  0C98  0845               	movf	??_scale+3,w
  3380  0C99  00C0               	movwf	?_scale+2
  3381  0C9A  0844               	movf	??_scale+2,w
  3382  0C9B  00BF               	movwf	?_scale+1
  3383  0C9C  0843               	movf	??_scale+1,w
  3384  0C9D  00BE               	movwf	?_scale
  3385  0C9E                     l317:
  3386  0C9E  0008               	return
  3387  0C9F                     __end_of_scale:
  3388                           
  3389                           	psect	text5
  3390  1C3D                     __ptext5:	
  3391 ;; *************** function ___awmod *****************
  3392 ;; Defined at:
  3393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  divisor         2    0[COMMON] int 
  3396 ;;  dividend        2    2[COMMON] int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  sign            1    6[COMMON] unsigned char 
  3399 ;;  counter         1    5[COMMON] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  2    0[COMMON] int 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         4       0       0       0       0
  3410 ;;      Locals:         2       0       0       0       0
  3411 ;;      Temps:          1       0       0       0       0
  3412 ;;      Totals:         7       0       0       0       0
  3413 ;;Total ram usage:        7 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_scale
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           
  3423                           ;psect for function ___awmod
  3424  1C3D                     ___awmod:
  3425  1C3D                     l2480:	
  3426                           ;incstack = 0
  3427                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3428                           
  3429  1C3D  01F6               	clrf	___awmod@sign
  3430  1C3E                     l2482:
  3431  1C3E  1FF3               	btfss	___awmod@dividend+1,7
  3432  1C3F  2C41               	goto	u3151
  3433  1C40  2C42               	goto	u3150
  3434  1C41                     u3151:
  3435  1C41  2C49               	goto	l2488
  3436  1C42                     u3150:
  3437  1C42                     l2484:
  3438  1C42  09F2               	comf	___awmod@dividend,f
  3439  1C43  09F3               	comf	___awmod@dividend+1,f
  3440  1C44  0AF2               	incf	___awmod@dividend,f
  3441  1C45  1903               	skipnz
  3442  1C46  0AF3               	incf	___awmod@dividend+1,f
  3443  1C47                     l2486:
  3444  1C47  01F6               	clrf	___awmod@sign
  3445  1C48  0AF6               	incf	___awmod@sign,f
  3446  1C49                     l2488:
  3447  1C49  1FF1               	btfss	___awmod@divisor+1,7
  3448  1C4A  2C4C               	goto	u3161
  3449  1C4B  2C4D               	goto	u3160
  3450  1C4C                     u3161:
  3451  1C4C  2C52               	goto	l2492
  3452  1C4D                     u3160:
  3453  1C4D                     l2490:
  3454  1C4D  09F0               	comf	___awmod@divisor,f
  3455  1C4E  09F1               	comf	___awmod@divisor+1,f
  3456  1C4F  0AF0               	incf	___awmod@divisor,f
  3457  1C50  1903               	skipnz
  3458  1C51  0AF1               	incf	___awmod@divisor+1,f
  3459  1C52                     l2492:
  3460  1C52  0870               	movf	___awmod@divisor,w
  3461  1C53  0471               	iorwf	___awmod@divisor+1,w
  3462  1C54  1903               	btfsc	3,2
  3463  1C55  2C57               	goto	u3171
  3464  1C56  2C58               	goto	u3170
  3465  1C57                     u3171:
  3466  1C57  2C87               	goto	l2510
  3467  1C58                     u3170:
  3468  1C58                     l2494:
  3469  1C58  01F5               	clrf	___awmod@counter
  3470  1C59  0AF5               	incf	___awmod@counter,f
  3471  1C5A  2C66               	goto	l2500
  3472  1C5B                     l2496:
  3473  1C5B  3001               	movlw	1
  3474  1C5C                     u3185:
  3475  1C5C  1003               	clrc
  3476  1C5D  0DF0               	rlf	___awmod@divisor,f
  3477  1C5E  0DF1               	rlf	___awmod@divisor+1,f
  3478  1C5F  3EFF               	addlw	-1
  3479  1C60  1D03               	skipz
  3480  1C61  2C5C               	goto	u3185
  3481  1C62                     l2498:
  3482  1C62  3001               	movlw	1
  3483  1C63  00F4               	movwf	??___awmod
  3484  1C64  0874               	movf	??___awmod,w
  3485  1C65  07F5               	addwf	___awmod@counter,f
  3486  1C66                     l2500:
  3487  1C66  1FF1               	btfss	___awmod@divisor+1,7
  3488  1C67  2C69               	goto	u3191
  3489  1C68  2C6A               	goto	u3190
  3490  1C69                     u3191:
  3491  1C69  2C5B               	goto	l2496
  3492  1C6A                     u3190:
  3493  1C6A                     l2502:
  3494  1C6A  0871               	movf	___awmod@divisor+1,w
  3495  1C6B  0273               	subwf	___awmod@dividend+1,w
  3496  1C6C  1D03               	skipz
  3497  1C6D  2C70               	goto	u3205
  3498  1C6E  0870               	movf	___awmod@divisor,w
  3499  1C6F  0272               	subwf	___awmod@dividend,w
  3500  1C70                     u3205:
  3501  1C70  1C03               	skipc
  3502  1C71  2C73               	goto	u3201
  3503  1C72  2C74               	goto	u3200
  3504  1C73                     u3201:
  3505  1C73  2C7A               	goto	l2506
  3506  1C74                     u3200:
  3507  1C74                     l2504:
  3508  1C74  0870               	movf	___awmod@divisor,w
  3509  1C75  02F2               	subwf	___awmod@dividend,f
  3510  1C76  0871               	movf	___awmod@divisor+1,w
  3511  1C77  1C03               	skipc
  3512  1C78  03F3               	decf	___awmod@dividend+1,f
  3513  1C79  02F3               	subwf	___awmod@dividend+1,f
  3514  1C7A                     l2506:
  3515  1C7A  3001               	movlw	1
  3516  1C7B                     u3215:
  3517  1C7B  1003               	clrc
  3518  1C7C  0CF1               	rrf	___awmod@divisor+1,f
  3519  1C7D  0CF0               	rrf	___awmod@divisor,f
  3520  1C7E  3EFF               	addlw	-1
  3521  1C7F  1D03               	skipz
  3522  1C80  2C7B               	goto	u3215
  3523  1C81                     l2508:
  3524  1C81  3001               	movlw	1
  3525  1C82  02F5               	subwf	___awmod@counter,f
  3526  1C83  1D03               	btfss	3,2
  3527  1C84  2C86               	goto	u3221
  3528  1C85  2C87               	goto	u3220
  3529  1C86                     u3221:
  3530  1C86  2C6A               	goto	l2502
  3531  1C87                     u3220:
  3532  1C87                     l2510:
  3533  1C87  0876               	movf	___awmod@sign,w
  3534  1C88  1903               	btfsc	3,2
  3535  1C89  2C8B               	goto	u3231
  3536  1C8A  2C8C               	goto	u3230
  3537  1C8B                     u3231:
  3538  1C8B  2C91               	goto	l2514
  3539  1C8C                     u3230:
  3540  1C8C                     l2512:
  3541  1C8C  09F2               	comf	___awmod@dividend,f
  3542  1C8D  09F3               	comf	___awmod@dividend+1,f
  3543  1C8E  0AF2               	incf	___awmod@dividend,f
  3544  1C8F  1903               	skipnz
  3545  1C90  0AF3               	incf	___awmod@dividend+1,f
  3546  1C91                     l2514:
  3547  1C91  0873               	movf	___awmod@dividend+1,w
  3548  1C92  00F1               	movwf	?___awmod+1
  3549  1C93  0872               	movf	___awmod@dividend,w
  3550  1C94  00F0               	movwf	?___awmod
  3551  1C95                     l579:
  3552  1C95  0008               	return
  3553  1C96                     __end_of___awmod:
  3554                           
  3555                           	psect	text6
  3556  1D62                     __ptext6:	
  3557 ;; *************** function ___awdiv *****************
  3558 ;; Defined at:
  3559 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  divisor         2    7[COMMON] int 
  3562 ;;  dividend        2    9[COMMON] int 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  quotient        2    2[BANK0 ] int 
  3565 ;;  sign            1    1[BANK0 ] unsigned char 
  3566 ;;  counter         1    0[BANK0 ] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  2    7[COMMON] int 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3576 ;;      Params:         4       0       0       0       0
  3577 ;;      Locals:         0       4       0       0       0
  3578 ;;      Temps:          1       0       0       0       0
  3579 ;;      Totals:         5       4       0       0       0
  3580 ;;Total ram usage:        9 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_scale
  3586 ;;		_sprintf
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           
  3591                           ;psect for function ___awdiv
  3592  1D62                     ___awdiv:
  3593  1D62                     l2436:	
  3594                           ;incstack = 0
  3595                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3596                           
  3597  1D62  1283               	bcf	3,5	;RP0=0, select bank0
  3598  1D63  1303               	bcf	3,6	;RP1=0, select bank0
  3599  1D64  01A1               	clrf	___awdiv@sign
  3600  1D65                     l2438:
  3601  1D65  1FF8               	btfss	___awdiv@divisor+1,7
  3602  1D66  2D68               	goto	u3051
  3603  1D67  2D69               	goto	u3050
  3604  1D68                     u3051:
  3605  1D68  2D70               	goto	l2444
  3606  1D69                     u3050:
  3607  1D69                     l2440:
  3608  1D69  09F7               	comf	___awdiv@divisor,f
  3609  1D6A  09F8               	comf	___awdiv@divisor+1,f
  3610  1D6B  0AF7               	incf	___awdiv@divisor,f
  3611  1D6C  1903               	skipnz
  3612  1D6D  0AF8               	incf	___awdiv@divisor+1,f
  3613  1D6E                     l2442:
  3614  1D6E  01A1               	clrf	___awdiv@sign
  3615  1D6F  0AA1               	incf	___awdiv@sign,f
  3616  1D70                     l2444:
  3617  1D70  1FFA               	btfss	___awdiv@dividend+1,7
  3618  1D71  2D73               	goto	u3061
  3619  1D72  2D74               	goto	u3060
  3620  1D73                     u3061:
  3621  1D73  2D7D               	goto	l2450
  3622  1D74                     u3060:
  3623  1D74                     l2446:
  3624  1D74  09F9               	comf	___awdiv@dividend,f
  3625  1D75  09FA               	comf	___awdiv@dividend+1,f
  3626  1D76  0AF9               	incf	___awdiv@dividend,f
  3627  1D77  1903               	skipnz
  3628  1D78  0AFA               	incf	___awdiv@dividend+1,f
  3629  1D79                     l2448:
  3630  1D79  3001               	movlw	1
  3631  1D7A  00FB               	movwf	??___awdiv
  3632  1D7B  087B               	movf	??___awdiv,w
  3633  1D7C  06A1               	xorwf	___awdiv@sign,f
  3634  1D7D                     l2450:
  3635  1D7D  01A2               	clrf	___awdiv@quotient
  3636  1D7E  01A3               	clrf	___awdiv@quotient+1
  3637  1D7F                     l2452:
  3638  1D7F  0877               	movf	___awdiv@divisor,w
  3639  1D80  0478               	iorwf	___awdiv@divisor+1,w
  3640  1D81  1903               	btfsc	3,2
  3641  1D82  2D84               	goto	u3071
  3642  1D83  2D85               	goto	u3070
  3643  1D84                     u3071:
  3644  1D84  2DBC               	goto	l2472
  3645  1D85                     u3070:
  3646  1D85                     l2454:
  3647  1D85  01A0               	clrf	___awdiv@counter
  3648  1D86  0AA0               	incf	___awdiv@counter,f
  3649  1D87  2D93               	goto	l2460
  3650  1D88                     l2456:
  3651  1D88  3001               	movlw	1
  3652  1D89                     u3085:
  3653  1D89  1003               	clrc
  3654  1D8A  0DF7               	rlf	___awdiv@divisor,f
  3655  1D8B  0DF8               	rlf	___awdiv@divisor+1,f
  3656  1D8C  3EFF               	addlw	-1
  3657  1D8D  1D03               	skipz
  3658  1D8E  2D89               	goto	u3085
  3659  1D8F                     l2458:
  3660  1D8F  3001               	movlw	1
  3661  1D90  00FB               	movwf	??___awdiv
  3662  1D91  087B               	movf	??___awdiv,w
  3663  1D92  07A0               	addwf	___awdiv@counter,f
  3664  1D93                     l2460:
  3665  1D93  1FF8               	btfss	___awdiv@divisor+1,7
  3666  1D94  2D96               	goto	u3091
  3667  1D95  2D97               	goto	u3090
  3668  1D96                     u3091:
  3669  1D96  2D88               	goto	l2456
  3670  1D97                     u3090:
  3671  1D97                     l2462:
  3672  1D97  3001               	movlw	1
  3673  1D98                     u3105:
  3674  1D98  1003               	clrc
  3675  1D99  0DA2               	rlf	___awdiv@quotient,f
  3676  1D9A  0DA3               	rlf	___awdiv@quotient+1,f
  3677  1D9B  3EFF               	addlw	-1
  3678  1D9C  1D03               	skipz
  3679  1D9D  2D98               	goto	u3105
  3680  1D9E  0878               	movf	___awdiv@divisor+1,w
  3681  1D9F  027A               	subwf	___awdiv@dividend+1,w
  3682  1DA0  1D03               	skipz
  3683  1DA1  2DA4               	goto	u3115
  3684  1DA2  0877               	movf	___awdiv@divisor,w
  3685  1DA3  0279               	subwf	___awdiv@dividend,w
  3686  1DA4                     u3115:
  3687  1DA4  1C03               	skipc
  3688  1DA5  2DA7               	goto	u3111
  3689  1DA6  2DA8               	goto	u3110
  3690  1DA7                     u3111:
  3691  1DA7  2DAF               	goto	l2468
  3692  1DA8                     u3110:
  3693  1DA8                     l2464:
  3694  1DA8  0877               	movf	___awdiv@divisor,w
  3695  1DA9  02F9               	subwf	___awdiv@dividend,f
  3696  1DAA  0878               	movf	___awdiv@divisor+1,w
  3697  1DAB  1C03               	skipc
  3698  1DAC  03FA               	decf	___awdiv@dividend+1,f
  3699  1DAD  02FA               	subwf	___awdiv@dividend+1,f
  3700  1DAE                     l2466:
  3701  1DAE  1422               	bsf	___awdiv@quotient,0
  3702  1DAF                     l2468:
  3703  1DAF  3001               	movlw	1
  3704  1DB0                     u3125:
  3705  1DB0  1003               	clrc
  3706  1DB1  0CF8               	rrf	___awdiv@divisor+1,f
  3707  1DB2  0CF7               	rrf	___awdiv@divisor,f
  3708  1DB3  3EFF               	addlw	-1
  3709  1DB4  1D03               	skipz
  3710  1DB5  2DB0               	goto	u3125
  3711  1DB6                     l2470:
  3712  1DB6  3001               	movlw	1
  3713  1DB7  02A0               	subwf	___awdiv@counter,f
  3714  1DB8  1D03               	btfss	3,2
  3715  1DB9  2DBB               	goto	u3131
  3716  1DBA  2DBC               	goto	u3130
  3717  1DBB                     u3131:
  3718  1DBB  2D97               	goto	l2462
  3719  1DBC                     u3130:
  3720  1DBC                     l2472:
  3721  1DBC  0821               	movf	___awdiv@sign,w
  3722  1DBD  1903               	btfsc	3,2
  3723  1DBE  2DC0               	goto	u3141
  3724  1DBF  2DC1               	goto	u3140
  3725  1DC0                     u3141:
  3726  1DC0  2DC6               	goto	l2476
  3727  1DC1                     u3140:
  3728  1DC1                     l2474:
  3729  1DC1  09A2               	comf	___awdiv@quotient,f
  3730  1DC2  09A3               	comf	___awdiv@quotient+1,f
  3731  1DC3  0AA2               	incf	___awdiv@quotient,f
  3732  1DC4  1903               	skipnz
  3733  1DC5  0AA3               	incf	___awdiv@quotient+1,f
  3734  1DC6                     l2476:
  3735  1DC6  0823               	movf	___awdiv@quotient+1,w
  3736  1DC7  00F8               	movwf	?___awdiv+1
  3737  1DC8  0822               	movf	___awdiv@quotient,w
  3738  1DC9  00F7               	movwf	?___awdiv
  3739  1DCA                     l566:
  3740  1DCA  0008               	return
  3741  1DCB                     __end_of___awdiv:
  3742                           
  3743                           	psect	text7
  3744  19A0                     __ptext7:	
  3745 ;; *************** function _isdigit *****************
  3746 ;; Defined at:
  3747 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  c               1    wreg     unsigned char 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  c               1    1[COMMON] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;		None               void
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         2       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0
  3764 ;;      Totals:         2       0       0       0       0
  3765 ;;Total ram usage:        2 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_sprintf
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _isdigit
  3776  19A0                     _isdigit:
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3780                           ;isdigit@c stored from wreg
  3781  19A0  00F1               	movwf	isdigit@c
  3782  19A1                     l2986:
  3783  19A1  01F0               	clrf	_isdigit$955
  3784  19A2                     l2988:
  3785  19A2  303A               	movlw	58
  3786  19A3  0271               	subwf	isdigit@c,w
  3787  19A4  1803               	skipnc
  3788  19A5  29A7               	goto	u4451
  3789  19A6  29A8               	goto	u4450
  3790  19A7                     u4451:
  3791  19A7  29B0               	goto	l2994
  3792  19A8                     u4450:
  3793  19A8                     l2990:
  3794  19A8  3030               	movlw	48
  3795  19A9  0271               	subwf	isdigit@c,w
  3796  19AA  1C03               	skipc
  3797  19AB  29AD               	goto	u4461
  3798  19AC  29AE               	goto	u4460
  3799  19AD                     u4461:
  3800  19AD  29B0               	goto	l2994
  3801  19AE                     u4460:
  3802  19AE                     l2992:
  3803  19AE  01F0               	clrf	_isdigit$955
  3804  19AF  0AF0               	incf	_isdigit$955,f
  3805  19B0                     l2994:
  3806  19B0  0C70               	rrf	_isdigit$955,w
  3807  19B1                     l900:
  3808  19B1  0008               	return
  3809  19B2                     __end_of_isdigit:
  3810                           
  3811                           	psect	text8
  3812  10AB                     __ptext8:	
  3813 ;; *************** function _fround *****************
  3814 ;; Defined at:
  3815 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  prec            1    wreg     unsigned char 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  prec            1   49[BANK0 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  4   30[BANK0 ] unsigned char 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       4       0       0       0
  3830 ;;      Locals:         0       9       0       0       0
  3831 ;;      Temps:          0       7       0       0       0
  3832 ;;      Totals:         0      20       0       0       0
  3833 ;;Total ram usage:       20 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    2
  3836 ;; This function calls:
  3837 ;;		___flmul
  3838 ;;		___lwdiv
  3839 ;;		___lwmod
  3840 ;; This function is called by:
  3841 ;;		_sprintf
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           
  3846                           ;psect for function _fround
  3847  10AB                     _fround:
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3851                           ;fround@prec stored from wreg
  3852  10AB  1283               	bcf	3,5	;RP0=0, select bank0
  3853  10AC  1303               	bcf	3,6	;RP1=0, select bank0
  3854  10AD  00D1               	movwf	fround@prec
  3855  10AE                     l2928:
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3858  10AE  306E               	movlw	110
  3859  10AF  0251               	subwf	fround@prec,w
  3860  10B0  1C03               	skipc
  3861  10B1  28B3               	goto	u4201
  3862  10B2  28B4               	goto	u4200
  3863  10B3                     u4201:
  3864  10B3  29C1               	goto	l2936
  3865  10B4                     u4200:
  3866  10B4                     l2930:
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3869  10B4  303F               	movlw	63
  3870  10B5  00A7               	movwf	___flmul@b+3
  3871  10B6  3000               	movlw	0
  3872  10B7  00A6               	movwf	___flmul@b+2
  3873  10B8  3000               	movlw	0
  3874  10B9  00A5               	movwf	___flmul@b+1
  3875  10BA  3000               	movlw	0
  3876  10BB  00A4               	movwf	___flmul@b
  3877  10BC  3064               	movlw	100
  3878  10BD  00F6               	movwf	___lwdiv@divisor
  3879  10BE  3000               	movlw	0
  3880  10BF  00F7               	movwf	___lwdiv@divisor+1
  3881  10C0  0851               	movf	fround@prec,w
  3882  10C1  00C2               	movwf	??_fround
  3883  10C2  01C3               	clrf	??_fround+1
  3884  10C3  0842               	movf	??_fround,w
  3885  10C4  00F8               	movwf	___lwdiv@dividend
  3886  10C5  0843               	movf	??_fround+1,w
  3887  10C6  00F9               	movwf	___lwdiv@dividend+1
  3888  10C7  160A  158A  2355  160A  118A  	fcall	___lwdiv
  3889  10CC  0876               	movf	?___lwdiv,w
  3890  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  3891  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  3892  10CF  00C4               	movwf	??_fround+2
  3893  10D0  3001               	movlw	1
  3894  10D1                     u4215:
  3895  10D1  1003               	clrc
  3896  10D2  0DC4               	rlf	??_fround+2,f
  3897  10D3  3EFF               	addlw	-1
  3898  10D4  1D03               	skipz
  3899  10D5  28D1               	goto	u4215
  3900  10D6  1003               	clrc
  3901  10D7  0D44               	rlf	??_fround+2,w
  3902  10D8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3903  10D9  0084               	movwf	4
  3904  10DA  120A  158A  200A  160A  118A  	fcall	stringdir
  3905  10DF  00C5               	movwf	??_fround+3
  3906  10E0  120A  158A  200A  160A  118A  	fcall	stringdir
  3907  10E5  00C6               	movwf	??_fround+4
  3908  10E6  120A  158A  200A  160A  118A  	fcall	stringdir
  3909  10EB  00C7               	movwf	??_fround+5
  3910  10EC  120A  158A  200A  160A  118A  	fcall	stringdir
  3911  10F1  00C8               	movwf	??_fround+6
  3912  10F2  0848               	movf	??_fround+6,w
  3913  10F3  00AB               	movwf	___flmul@a+3
  3914  10F4  0847               	movf	??_fround+5,w
  3915  10F5  00AA               	movwf	___flmul@a+2
  3916  10F6  0846               	movf	??_fround+4,w
  3917  10F7  00A9               	movwf	___flmul@a+1
  3918  10F8  0845               	movf	??_fround+3,w
  3919  10F9  00A8               	movwf	___flmul@a
  3920  10FA  120A  158A  249F  160A  118A  	fcall	___flmul
  3921  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  3922  1100  1303               	bcf	3,6	;RP1=0, select bank0
  3923  1101  0827               	movf	?___flmul+3,w
  3924  1102  00D0               	movwf	_fround$1144+3
  3925  1103  0826               	movf	?___flmul+2,w
  3926  1104  00CF               	movwf	_fround$1144+2
  3927  1105  0825               	movf	?___flmul+1,w
  3928  1106  00CE               	movwf	_fround$1144+1
  3929  1107  0824               	movf	?___flmul,w
  3930  1108  00CD               	movwf	_fround$1144
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3933  1109  300A               	movlw	10
  3934  110A  00F6               	movwf	___lwdiv@divisor
  3935  110B  3000               	movlw	0
  3936  110C  00F7               	movwf	___lwdiv@divisor+1
  3937  110D  0851               	movf	fround@prec,w
  3938  110E  00C2               	movwf	??_fround
  3939  110F  01C3               	clrf	??_fround+1
  3940  1110  0842               	movf	??_fround,w
  3941  1111  00F2               	movwf	___lwmod@dividend
  3942  1112  0843               	movf	??_fround+1,w
  3943  1113  00F3               	movwf	___lwmod@dividend+1
  3944  1114  3064               	movlw	100
  3945  1115  00F0               	movwf	___lwmod@divisor
  3946  1116  3000               	movlw	0
  3947  1117  00F1               	movwf	___lwmod@divisor+1
  3948  1118  160A  158A  229B  160A  118A  	fcall	___lwmod
  3949  111D  0871               	movf	?___lwmod+1,w
  3950  111E  00F9               	movwf	___lwdiv@dividend+1
  3951  111F  0870               	movf	?___lwmod,w
  3952  1120  00F8               	movwf	___lwdiv@dividend
  3953  1121  160A  158A  2355  160A  118A  	fcall	___lwdiv
  3954  1126  0876               	movf	?___lwdiv,w
  3955  1127  1283               	bcf	3,5	;RP0=0, select bank0
  3956  1128  1303               	bcf	3,6	;RP1=0, select bank0
  3957  1129  00C4               	movwf	??_fround+2
  3958  112A  3001               	movlw	1
  3959  112B                     u4225:
  3960  112B  1003               	clrc
  3961  112C  0DC4               	rlf	??_fround+2,f
  3962  112D  3EFF               	addlw	-1
  3963  112E  1D03               	skipz
  3964  112F  292B               	goto	u4225
  3965  1130  1003               	clrc
  3966  1131  0D44               	rlf	??_fround+2,w
  3967  1132  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3968  1133  0084               	movwf	4
  3969  1134  120A  158A  200A  160A  118A  	fcall	stringdir
  3970  1139  00C5               	movwf	??_fround+3
  3971  113A  120A  158A  200A  160A  118A  	fcall	stringdir
  3972  113F  00C6               	movwf	??_fround+4
  3973  1140  120A  158A  200A  160A  118A  	fcall	stringdir
  3974  1145  00C7               	movwf	??_fround+5
  3975  1146  120A  158A  200A  160A  118A  	fcall	stringdir
  3976  114B  00C8               	movwf	??_fround+6
  3977  114C  0848               	movf	??_fround+6,w
  3978  114D  00A7               	movwf	___flmul@b+3
  3979  114E  0847               	movf	??_fround+5,w
  3980  114F  00A6               	movwf	___flmul@b+2
  3981  1150  0846               	movf	??_fround+4,w
  3982  1151  00A5               	movwf	___flmul@b+1
  3983  1152  0845               	movf	??_fround+3,w
  3984  1153  00A4               	movwf	___flmul@b
  3985  1154  0850               	movf	_fround$1144+3,w
  3986  1155  00AB               	movwf	___flmul@a+3
  3987  1156  084F               	movf	_fround$1144+2,w
  3988  1157  00AA               	movwf	___flmul@a+2
  3989  1158  084E               	movf	_fround$1144+1,w
  3990  1159  00A9               	movwf	___flmul@a+1
  3991  115A  084D               	movf	_fround$1144,w
  3992  115B  00A8               	movwf	___flmul@a
  3993  115C  120A  158A  249F  160A  118A  	fcall	___flmul
  3994  1161  1283               	bcf	3,5	;RP0=0, select bank0
  3995  1162  1303               	bcf	3,6	;RP1=0, select bank0
  3996  1163  0827               	movf	?___flmul+3,w
  3997  1164  00CC               	movwf	_fround$1145+3
  3998  1165  0826               	movf	?___flmul+2,w
  3999  1166  00CB               	movwf	_fround$1145+2
  4000  1167  0825               	movf	?___flmul+1,w
  4001  1168  00CA               	movwf	_fround$1145+1
  4002  1169  0824               	movf	?___flmul,w
  4003  116A  00C9               	movwf	_fround$1145
  4004                           
  4005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4006  116B  300A               	movlw	10
  4007  116C  00F0               	movwf	___lwmod@divisor
  4008  116D  3000               	movlw	0
  4009  116E  00F1               	movwf	___lwmod@divisor+1
  4010  116F  0851               	movf	fround@prec,w
  4011  1170  00C2               	movwf	??_fround
  4012  1171  01C3               	clrf	??_fround+1
  4013  1172  0842               	movf	??_fround,w
  4014  1173  00F2               	movwf	___lwmod@dividend
  4015  1174  0843               	movf	??_fround+1,w
  4016  1175  00F3               	movwf	___lwmod@dividend+1
  4017  1176  160A  158A  229B  160A  118A  	fcall	___lwmod
  4018  117B  0870               	movf	?___lwmod,w
  4019  117C  1283               	bcf	3,5	;RP0=0, select bank0
  4020  117D  1303               	bcf	3,6	;RP1=0, select bank0
  4021  117E  00C4               	movwf	??_fround+2
  4022  117F  3001               	movlw	1
  4023  1180                     u4235:
  4024  1180  1003               	clrc
  4025  1181  0DC4               	rlf	??_fround+2,f
  4026  1182  3EFF               	addlw	-1
  4027  1183  1D03               	skipz
  4028  1184  2980               	goto	u4235
  4029  1185  1003               	clrc
  4030  1186  0D44               	rlf	??_fround+2,w
  4031  1187  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4032  1188  0084               	movwf	4
  4033  1189  120A  158A  200A  160A  118A  	fcall	stringdir
  4034  118E  00C5               	movwf	??_fround+3
  4035  118F  120A  158A  200A  160A  118A  	fcall	stringdir
  4036  1194  00C6               	movwf	??_fround+4
  4037  1195  120A  158A  200A  160A  118A  	fcall	stringdir
  4038  119A  00C7               	movwf	??_fround+5
  4039  119B  120A  158A  200A  160A  118A  	fcall	stringdir
  4040  11A0  00C8               	movwf	??_fround+6
  4041  11A1  0848               	movf	??_fround+6,w
  4042  11A2  00A7               	movwf	___flmul@b+3
  4043  11A3  0847               	movf	??_fround+5,w
  4044  11A4  00A6               	movwf	___flmul@b+2
  4045  11A5  0846               	movf	??_fround+4,w
  4046  11A6  00A5               	movwf	___flmul@b+1
  4047  11A7  0845               	movf	??_fround+3,w
  4048  11A8  00A4               	movwf	___flmul@b
  4049  11A9  084C               	movf	_fround$1145+3,w
  4050  11AA  00AB               	movwf	___flmul@a+3
  4051  11AB  084B               	movf	_fround$1145+2,w
  4052  11AC  00AA               	movwf	___flmul@a+2
  4053  11AD  084A               	movf	_fround$1145+1,w
  4054  11AE  00A9               	movwf	___flmul@a+1
  4055  11AF  0849               	movf	_fround$1145,w
  4056  11B0  00A8               	movwf	___flmul@a
  4057  11B1  120A  158A  249F  160A  118A  	fcall	___flmul
  4058  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  4059  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  4060  11B8  0827               	movf	?___flmul+3,w
  4061  11B9  00C1               	movwf	?_fround+3
  4062  11BA  0826               	movf	?___flmul+2,w
  4063  11BB  00C0               	movwf	?_fround+2
  4064  11BC  0825               	movf	?___flmul+1,w
  4065  11BD  00BF               	movwf	?_fround+1
  4066  11BE  0824               	movf	?___flmul,w
  4067  11BF  00BE               	movwf	?_fround
  4068  11C0  2AB5               	goto	l310
  4069  11C1                     l2936:
  4070  11C1  300B               	movlw	11
  4071  11C2  0251               	subwf	fround@prec,w
  4072  11C3  1C03               	skipc
  4073  11C4  29C6               	goto	u4241
  4074  11C5  29C7               	goto	u4240
  4075  11C6                     u4241:
  4076  11C6  2A72               	goto	l2942
  4077  11C7                     u4240:
  4078  11C7                     l2938:
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4081  11C7  303F               	movlw	63
  4082  11C8  00A7               	movwf	___flmul@b+3
  4083  11C9  3000               	movlw	0
  4084  11CA  00A6               	movwf	___flmul@b+2
  4085  11CB  3000               	movlw	0
  4086  11CC  00A5               	movwf	___flmul@b+1
  4087  11CD  3000               	movlw	0
  4088  11CE  00A4               	movwf	___flmul@b
  4089  11CF  300A               	movlw	10
  4090  11D0  00F6               	movwf	___lwdiv@divisor
  4091  11D1  3000               	movlw	0
  4092  11D2  00F7               	movwf	___lwdiv@divisor+1
  4093  11D3  0851               	movf	fround@prec,w
  4094  11D4  00C2               	movwf	??_fround
  4095  11D5  01C3               	clrf	??_fround+1
  4096  11D6  0842               	movf	??_fround,w
  4097  11D7  00F8               	movwf	___lwdiv@dividend
  4098  11D8  0843               	movf	??_fround+1,w
  4099  11D9  00F9               	movwf	___lwdiv@dividend+1
  4100  11DA  160A  158A  2355  160A  118A  	fcall	___lwdiv
  4101  11DF  0876               	movf	?___lwdiv,w
  4102  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  4103  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  4104  11E2  00C4               	movwf	??_fround+2
  4105  11E3  3001               	movlw	1
  4106  11E4                     u4255:
  4107  11E4  1003               	clrc
  4108  11E5  0DC4               	rlf	??_fround+2,f
  4109  11E6  3EFF               	addlw	-1
  4110  11E7  1D03               	skipz
  4111  11E8  29E4               	goto	u4255
  4112  11E9  1003               	clrc
  4113  11EA  0D44               	rlf	??_fround+2,w
  4114  11EB  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4115  11EC  0084               	movwf	4
  4116  11ED  120A  158A  200A  160A  118A  	fcall	stringdir
  4117  11F2  00C5               	movwf	??_fround+3
  4118  11F3  120A  158A  200A  160A  118A  	fcall	stringdir
  4119  11F8  00C6               	movwf	??_fround+4
  4120  11F9  120A  158A  200A  160A  118A  	fcall	stringdir
  4121  11FE  00C7               	movwf	??_fround+5
  4122  11FF  120A  158A  200A  160A  118A  	fcall	stringdir
  4123  1204  00C8               	movwf	??_fround+6
  4124  1205  0848               	movf	??_fround+6,w
  4125  1206  00AB               	movwf	___flmul@a+3
  4126  1207  0847               	movf	??_fround+5,w
  4127  1208  00AA               	movwf	___flmul@a+2
  4128  1209  0846               	movf	??_fround+4,w
  4129  120A  00A9               	movwf	___flmul@a+1
  4130  120B  0845               	movf	??_fround+3,w
  4131  120C  00A8               	movwf	___flmul@a
  4132  120D  120A  158A  249F  160A  118A  	fcall	___flmul
  4133  1212  1283               	bcf	3,5	;RP0=0, select bank0
  4134  1213  1303               	bcf	3,6	;RP1=0, select bank0
  4135  1214  0827               	movf	?___flmul+3,w
  4136  1215  00D0               	movwf	_fround$1144+3
  4137  1216  0826               	movf	?___flmul+2,w
  4138  1217  00CF               	movwf	_fround$1144+2
  4139  1218  0825               	movf	?___flmul+1,w
  4140  1219  00CE               	movwf	_fround$1144+1
  4141  121A  0824               	movf	?___flmul,w
  4142  121B  00CD               	movwf	_fround$1144
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4145  121C  300A               	movlw	10
  4146  121D  00F0               	movwf	___lwmod@divisor
  4147  121E  3000               	movlw	0
  4148  121F  00F1               	movwf	___lwmod@divisor+1
  4149  1220  0851               	movf	fround@prec,w
  4150  1221  00C2               	movwf	??_fround
  4151  1222  01C3               	clrf	??_fround+1
  4152  1223  0842               	movf	??_fround,w
  4153  1224  00F2               	movwf	___lwmod@dividend
  4154  1225  0843               	movf	??_fround+1,w
  4155  1226  00F3               	movwf	___lwmod@dividend+1
  4156  1227  160A  158A  229B  160A  118A  	fcall	___lwmod
  4157  122C  0870               	movf	?___lwmod,w
  4158  122D  1283               	bcf	3,5	;RP0=0, select bank0
  4159  122E  1303               	bcf	3,6	;RP1=0, select bank0
  4160  122F  00C4               	movwf	??_fround+2
  4161  1230  3001               	movlw	1
  4162  1231                     u4265:
  4163  1231  1003               	clrc
  4164  1232  0DC4               	rlf	??_fround+2,f
  4165  1233  3EFF               	addlw	-1
  4166  1234  1D03               	skipz
  4167  1235  2A31               	goto	u4265
  4168  1236  1003               	clrc
  4169  1237  0D44               	rlf	??_fround+2,w
  4170  1238  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4171  1239  0084               	movwf	4
  4172  123A  120A  158A  200A  160A  118A  	fcall	stringdir
  4173  123F  00C5               	movwf	??_fround+3
  4174  1240  120A  158A  200A  160A  118A  	fcall	stringdir
  4175  1245  00C6               	movwf	??_fround+4
  4176  1246  120A  158A  200A  160A  118A  	fcall	stringdir
  4177  124B  00C7               	movwf	??_fround+5
  4178  124C  120A  158A  200A  160A  118A  	fcall	stringdir
  4179  1251  00C8               	movwf	??_fround+6
  4180  1252  0848               	movf	??_fround+6,w
  4181  1253  00A7               	movwf	___flmul@b+3
  4182  1254  0847               	movf	??_fround+5,w
  4183  1255  00A6               	movwf	___flmul@b+2
  4184  1256  0846               	movf	??_fround+4,w
  4185  1257  00A5               	movwf	___flmul@b+1
  4186  1258  0845               	movf	??_fround+3,w
  4187  1259  00A4               	movwf	___flmul@b
  4188  125A  0850               	movf	_fround$1144+3,w
  4189  125B  00AB               	movwf	___flmul@a+3
  4190  125C  084F               	movf	_fround$1144+2,w
  4191  125D  00AA               	movwf	___flmul@a+2
  4192  125E  084E               	movf	_fround$1144+1,w
  4193  125F  00A9               	movwf	___flmul@a+1
  4194  1260  084D               	movf	_fround$1144,w
  4195  1261  00A8               	movwf	___flmul@a
  4196  1262  120A  158A  249F  160A  118A  	fcall	___flmul
  4197  1267  1283               	bcf	3,5	;RP0=0, select bank0
  4198  1268  1303               	bcf	3,6	;RP1=0, select bank0
  4199  1269  0827               	movf	?___flmul+3,w
  4200  126A  00C1               	movwf	?_fround+3
  4201  126B  0826               	movf	?___flmul+2,w
  4202  126C  00C0               	movwf	?_fround+2
  4203  126D  0825               	movf	?___flmul+1,w
  4204  126E  00BF               	movwf	?_fround+1
  4205  126F  0824               	movf	?___flmul,w
  4206  1270  00BE               	movwf	?_fround
  4207  1271  2AB5               	goto	l310
  4208  1272                     l2942:
  4209                           
  4210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4211  1272  303F               	movlw	63
  4212  1273  00A7               	movwf	___flmul@b+3
  4213  1274  3000               	movlw	0
  4214  1275  00A6               	movwf	___flmul@b+2
  4215  1276  3000               	movlw	0
  4216  1277  00A5               	movwf	___flmul@b+1
  4217  1278  3000               	movlw	0
  4218  1279  00A4               	movwf	___flmul@b
  4219  127A  0851               	movf	fround@prec,w
  4220  127B  00C2               	movwf	??_fround
  4221  127C  3001               	movlw	1
  4222  127D                     u4275:
  4223  127D  1003               	clrc
  4224  127E  0DC2               	rlf	??_fround,f
  4225  127F  3EFF               	addlw	-1
  4226  1280  1D03               	skipz
  4227  1281  2A7D               	goto	u4275
  4228  1282  1003               	clrc
  4229  1283  0D42               	rlf	??_fround,w
  4230  1284  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4231  1285  0084               	movwf	4
  4232  1286  120A  158A  200A  160A  118A  	fcall	stringdir
  4233  128B  00C3               	movwf	??_fround+1
  4234  128C  120A  158A  200A  160A  118A  	fcall	stringdir
  4235  1291  00C4               	movwf	??_fround+2
  4236  1292  120A  158A  200A  160A  118A  	fcall	stringdir
  4237  1297  00C5               	movwf	??_fround+3
  4238  1298  120A  158A  200A  160A  118A  	fcall	stringdir
  4239  129D  00C6               	movwf	??_fround+4
  4240  129E  0846               	movf	??_fround+4,w
  4241  129F  00AB               	movwf	___flmul@a+3
  4242  12A0  0845               	movf	??_fround+3,w
  4243  12A1  00AA               	movwf	___flmul@a+2
  4244  12A2  0844               	movf	??_fround+2,w
  4245  12A3  00A9               	movwf	___flmul@a+1
  4246  12A4  0843               	movf	??_fround+1,w
  4247  12A5  00A8               	movwf	___flmul@a
  4248  12A6  120A  158A  249F  160A  118A  	fcall	___flmul
  4249  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  4250  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  4251  12AD  0827               	movf	?___flmul+3,w
  4252  12AE  00C1               	movwf	?_fround+3
  4253  12AF  0826               	movf	?___flmul+2,w
  4254  12B0  00C0               	movwf	?_fround+2
  4255  12B1  0825               	movf	?___flmul+1,w
  4256  12B2  00BF               	movwf	?_fround+1
  4257  12B3  0824               	movf	?___flmul,w
  4258  12B4  00BE               	movwf	?_fround
  4259  12B5                     l310:
  4260  12B5  0008               	return
  4261  12B6                     __end_of_fround:
  4262                           
  4263                           	psect	text9
  4264  1A9B                     __ptext9:	
  4265 ;; *************** function ___lwmod *****************
  4266 ;; Defined at:
  4267 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  divisor         2    0[COMMON] unsigned int 
  4270 ;;  dividend        2    2[COMMON] unsigned int 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  counter         1    5[COMMON] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  2    0[COMMON] unsigned int 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4282 ;;      Params:         4       0       0       0       0
  4283 ;;      Locals:         1       0       0       0       0
  4284 ;;      Temps:          1       0       0       0       0
  4285 ;;      Totals:         6       0       0       0       0
  4286 ;;Total ram usage:        6 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_fround
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           
  4296                           ;psect for function ___lwmod
  4297  1A9B                     ___lwmod:
  4298  1A9B                     l2544:	
  4299                           ;incstack = 0
  4300                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4301                           
  4302  1A9B  0870               	movf	___lwmod@divisor,w
  4303  1A9C  0471               	iorwf	___lwmod@divisor+1,w
  4304  1A9D  1903               	btfsc	3,2
  4305  1A9E  2AA0               	goto	u3311
  4306  1A9F  2AA1               	goto	u3310
  4307  1AA0                     u3311:
  4308  1AA0  2AD0               	goto	l2562
  4309  1AA1                     u3310:
  4310  1AA1                     l2546:
  4311  1AA1  01F5               	clrf	___lwmod@counter
  4312  1AA2  0AF5               	incf	___lwmod@counter,f
  4313  1AA3  2AAF               	goto	l2552
  4314  1AA4                     l2548:
  4315  1AA4  3001               	movlw	1
  4316  1AA5                     u3325:
  4317  1AA5  1003               	clrc
  4318  1AA6  0DF0               	rlf	___lwmod@divisor,f
  4319  1AA7  0DF1               	rlf	___lwmod@divisor+1,f
  4320  1AA8  3EFF               	addlw	-1
  4321  1AA9  1D03               	skipz
  4322  1AAA  2AA5               	goto	u3325
  4323  1AAB                     l2550:
  4324  1AAB  3001               	movlw	1
  4325  1AAC  00F4               	movwf	??___lwmod
  4326  1AAD  0874               	movf	??___lwmod,w
  4327  1AAE  07F5               	addwf	___lwmod@counter,f
  4328  1AAF                     l2552:
  4329  1AAF  1FF1               	btfss	___lwmod@divisor+1,7
  4330  1AB0  2AB2               	goto	u3331
  4331  1AB1  2AB3               	goto	u3330
  4332  1AB2                     u3331:
  4333  1AB2  2AA4               	goto	l2548
  4334  1AB3                     u3330:
  4335  1AB3                     l2554:
  4336  1AB3  0871               	movf	___lwmod@divisor+1,w
  4337  1AB4  0273               	subwf	___lwmod@dividend+1,w
  4338  1AB5  1D03               	skipz
  4339  1AB6  2AB9               	goto	u3345
  4340  1AB7  0870               	movf	___lwmod@divisor,w
  4341  1AB8  0272               	subwf	___lwmod@dividend,w
  4342  1AB9                     u3345:
  4343  1AB9  1C03               	skipc
  4344  1ABA  2ABC               	goto	u3341
  4345  1ABB  2ABD               	goto	u3340
  4346  1ABC                     u3341:
  4347  1ABC  2AC3               	goto	l2558
  4348  1ABD                     u3340:
  4349  1ABD                     l2556:
  4350  1ABD  0870               	movf	___lwmod@divisor,w
  4351  1ABE  02F2               	subwf	___lwmod@dividend,f
  4352  1ABF  0871               	movf	___lwmod@divisor+1,w
  4353  1AC0  1C03               	skipc
  4354  1AC1  03F3               	decf	___lwmod@dividend+1,f
  4355  1AC2  02F3               	subwf	___lwmod@dividend+1,f
  4356  1AC3                     l2558:
  4357  1AC3  3001               	movlw	1
  4358  1AC4                     u3355:
  4359  1AC4  1003               	clrc
  4360  1AC5  0CF1               	rrf	___lwmod@divisor+1,f
  4361  1AC6  0CF0               	rrf	___lwmod@divisor,f
  4362  1AC7  3EFF               	addlw	-1
  4363  1AC8  1D03               	skipz
  4364  1AC9  2AC4               	goto	u3355
  4365  1ACA                     l2560:
  4366  1ACA  3001               	movlw	1
  4367  1ACB  02F5               	subwf	___lwmod@counter,f
  4368  1ACC  1D03               	btfss	3,2
  4369  1ACD  2ACF               	goto	u3361
  4370  1ACE  2AD0               	goto	u3360
  4371  1ACF                     u3361:
  4372  1ACF  2AB3               	goto	l2554
  4373  1AD0                     u3360:
  4374  1AD0                     l2562:
  4375  1AD0  0873               	movf	___lwmod@dividend+1,w
  4376  1AD1  00F1               	movwf	?___lwmod+1
  4377  1AD2  0872               	movf	___lwmod@dividend,w
  4378  1AD3  00F0               	movwf	?___lwmod
  4379  1AD4                     l729:
  4380  1AD4  0008               	return
  4381  1AD5                     __end_of___lwmod:
  4382                           
  4383                           	psect	text10
  4384  1B55                     __ptext10:	
  4385 ;; *************** function ___lwdiv *****************
  4386 ;; Defined at:
  4387 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  divisor         2    6[COMMON] unsigned int 
  4390 ;;  dividend        2    8[COMMON] unsigned int 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  quotient        2   11[COMMON] unsigned int 
  4393 ;;  counter         1   13[COMMON] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  2    6[COMMON] unsigned int 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4403 ;;      Params:         4       0       0       0       0
  4404 ;;      Locals:         3       0       0       0       0
  4405 ;;      Temps:          1       0       0       0       0
  4406 ;;      Totals:         8       0       0       0       0
  4407 ;;Total ram usage:        8 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_fround
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function ___lwdiv
  4418  1B55                     ___lwdiv:
  4419  1B55                     l2518:	
  4420                           ;incstack = 0
  4421                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4422                           
  4423  1B55  01FB               	clrf	___lwdiv@quotient
  4424  1B56  01FC               	clrf	___lwdiv@quotient+1
  4425  1B57                     l2520:
  4426  1B57  0876               	movf	___lwdiv@divisor,w
  4427  1B58  0477               	iorwf	___lwdiv@divisor+1,w
  4428  1B59  1903               	btfsc	3,2
  4429  1B5A  2B5C               	goto	u3241
  4430  1B5B  2B5D               	goto	u3240
  4431  1B5C                     u3241:
  4432  1B5C  2B94               	goto	l2540
  4433  1B5D                     u3240:
  4434  1B5D                     l2522:
  4435  1B5D  01FD               	clrf	___lwdiv@counter
  4436  1B5E  0AFD               	incf	___lwdiv@counter,f
  4437  1B5F  2B6B               	goto	l2528
  4438  1B60                     l2524:
  4439  1B60  3001               	movlw	1
  4440  1B61                     u3255:
  4441  1B61  1003               	clrc
  4442  1B62  0DF6               	rlf	___lwdiv@divisor,f
  4443  1B63  0DF7               	rlf	___lwdiv@divisor+1,f
  4444  1B64  3EFF               	addlw	-1
  4445  1B65  1D03               	skipz
  4446  1B66  2B61               	goto	u3255
  4447  1B67                     l2526:
  4448  1B67  3001               	movlw	1
  4449  1B68  00FA               	movwf	??___lwdiv
  4450  1B69  087A               	movf	??___lwdiv,w
  4451  1B6A  07FD               	addwf	___lwdiv@counter,f
  4452  1B6B                     l2528:
  4453  1B6B  1FF7               	btfss	___lwdiv@divisor+1,7
  4454  1B6C  2B6E               	goto	u3261
  4455  1B6D  2B6F               	goto	u3260
  4456  1B6E                     u3261:
  4457  1B6E  2B60               	goto	l2524
  4458  1B6F                     u3260:
  4459  1B6F                     l2530:
  4460  1B6F  3001               	movlw	1
  4461  1B70                     u3275:
  4462  1B70  1003               	clrc
  4463  1B71  0DFB               	rlf	___lwdiv@quotient,f
  4464  1B72  0DFC               	rlf	___lwdiv@quotient+1,f
  4465  1B73  3EFF               	addlw	-1
  4466  1B74  1D03               	skipz
  4467  1B75  2B70               	goto	u3275
  4468  1B76  0877               	movf	___lwdiv@divisor+1,w
  4469  1B77  0279               	subwf	___lwdiv@dividend+1,w
  4470  1B78  1D03               	skipz
  4471  1B79  2B7C               	goto	u3285
  4472  1B7A  0876               	movf	___lwdiv@divisor,w
  4473  1B7B  0278               	subwf	___lwdiv@dividend,w
  4474  1B7C                     u3285:
  4475  1B7C  1C03               	skipc
  4476  1B7D  2B7F               	goto	u3281
  4477  1B7E  2B80               	goto	u3280
  4478  1B7F                     u3281:
  4479  1B7F  2B87               	goto	l2536
  4480  1B80                     u3280:
  4481  1B80                     l2532:
  4482  1B80  0876               	movf	___lwdiv@divisor,w
  4483  1B81  02F8               	subwf	___lwdiv@dividend,f
  4484  1B82  0877               	movf	___lwdiv@divisor+1,w
  4485  1B83  1C03               	skipc
  4486  1B84  03F9               	decf	___lwdiv@dividend+1,f
  4487  1B85  02F9               	subwf	___lwdiv@dividend+1,f
  4488  1B86                     l2534:
  4489  1B86  147B               	bsf	___lwdiv@quotient,0
  4490  1B87                     l2536:
  4491  1B87  3001               	movlw	1
  4492  1B88                     u3295:
  4493  1B88  1003               	clrc
  4494  1B89  0CF7               	rrf	___lwdiv@divisor+1,f
  4495  1B8A  0CF6               	rrf	___lwdiv@divisor,f
  4496  1B8B  3EFF               	addlw	-1
  4497  1B8C  1D03               	skipz
  4498  1B8D  2B88               	goto	u3295
  4499  1B8E                     l2538:
  4500  1B8E  3001               	movlw	1
  4501  1B8F  02FD               	subwf	___lwdiv@counter,f
  4502  1B90  1D03               	btfss	3,2
  4503  1B91  2B93               	goto	u3301
  4504  1B92  2B94               	goto	u3300
  4505  1B93                     u3301:
  4506  1B93  2B6F               	goto	l2530
  4507  1B94                     u3300:
  4508  1B94                     l2540:
  4509  1B94  087C               	movf	___lwdiv@quotient+1,w
  4510  1B95  00F7               	movwf	?___lwdiv+1
  4511  1B96  087B               	movf	___lwdiv@quotient,w
  4512  1B97  00F6               	movwf	?___lwdiv
  4513  1B98                     l719:
  4514  1B98  0008               	return
  4515  1B99                     __end_of___lwdiv:
  4516                           
  4517                           	psect	text11
  4518  0C9F                     __ptext11:	
  4519 ;; *************** function ___flmul *****************
  4520 ;; Defined at:
  4521 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  b               4    4[BANK0 ] unsigned int 
  4524 ;;  a               4    8[BANK0 ] unsigned int 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  prod            4   24[BANK0 ] struct .
  4527 ;;  grs             4   18[BANK0 ] unsigned long 
  4528 ;;  temp            2   28[BANK0 ] struct .
  4529 ;;  bexp            1   23[BANK0 ] unsigned char 
  4530 ;;  aexp            1   22[BANK0 ] unsigned char 
  4531 ;;  sign            1   17[BANK0 ] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  4    4[BANK0 ] unsigned char 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         0       8       0       0       0
  4542 ;;      Locals:         0      13       0       0       0
  4543 ;;      Temps:          0       5       0       0       0
  4544 ;;      Totals:         0      26       0       0       0
  4545 ;;Total ram usage:       26 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    1
  4548 ;; This function calls:
  4549 ;;		__Umul8_16
  4550 ;; This function is called by:
  4551 ;;		_main
  4552 ;;		_fround
  4553 ;;		_scale
  4554 ;;		_sprintf
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           
  4559                           ;psect for function ___flmul
  4560  0C9F                     ___flmul:
  4561  0C9F                     l2760:	
  4562                           ;incstack = 0
  4563                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4564                           
  4565  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0CA1  0827               	movf	___flmul@b+3,w
  4568  0CA2  3980               	andlw	128
  4569  0CA3  00AC               	movwf	??___flmul
  4570  0CA4  082C               	movf	??___flmul,w
  4571  0CA5  00B1               	movwf	___flmul@sign
  4572  0CA6                     l2762:
  4573  0CA6  0827               	movf	___flmul@b+3,w
  4574  0CA7  00AC               	movwf	??___flmul
  4575  0CA8  072C               	addwf	??___flmul,w
  4576  0CA9  00AD               	movwf	??___flmul+1
  4577  0CAA  082D               	movf	??___flmul+1,w
  4578  0CAB  00B7               	movwf	___flmul@bexp
  4579  0CAC                     l2764:
  4580  0CAC  1FA6               	btfss	___flmul@b+2,7
  4581  0CAD  2CAF               	goto	u3831
  4582  0CAE  2CB0               	goto	u3830
  4583  0CAF                     u3831:
  4584  0CAF  2CB1               	goto	l2768
  4585  0CB0                     u3830:
  4586  0CB0                     l2766:
  4587  0CB0  1437               	bsf	___flmul@bexp,0
  4588  0CB1                     l2768:
  4589  0CB1  0837               	movf	___flmul@bexp,w
  4590  0CB2  1903               	btfsc	3,2
  4591  0CB3  2CB5               	goto	u3841
  4592  0CB4  2CB6               	goto	u3840
  4593  0CB5                     u3841:
  4594  0CB5  2CC5               	goto	l2776
  4595  0CB6                     u3840:
  4596  0CB6                     l2770:
  4597  0CB6  0A37               	incf	___flmul@bexp,w
  4598  0CB7  1D03               	btfss	3,2
  4599  0CB8  2CBA               	goto	u3851
  4600  0CB9  2CBB               	goto	u3850
  4601  0CBA                     u3851:
  4602  0CBA  2CC3               	goto	l2774
  4603  0CBB                     u3850:
  4604  0CBB                     l2772:
  4605  0CBB  3000               	movlw	0
  4606  0CBC  00A7               	movwf	___flmul@b+3
  4607  0CBD  3000               	movlw	0
  4608  0CBE  00A6               	movwf	___flmul@b+2
  4609  0CBF  3000               	movlw	0
  4610  0CC0  00A5               	movwf	___flmul@b+1
  4611  0CC1  3000               	movlw	0
  4612  0CC2  00A4               	movwf	___flmul@b
  4613  0CC3                     l2774:
  4614  0CC3  17A6               	bsf	___flmul@b+2,7
  4615  0CC4  2CCD               	goto	l2778
  4616  0CC5                     l2776:
  4617  0CC5  3000               	movlw	0
  4618  0CC6  00A7               	movwf	___flmul@b+3
  4619  0CC7  3000               	movlw	0
  4620  0CC8  00A6               	movwf	___flmul@b+2
  4621  0CC9  3000               	movlw	0
  4622  0CCA  00A5               	movwf	___flmul@b+1
  4623  0CCB  3000               	movlw	0
  4624  0CCC  00A4               	movwf	___flmul@b
  4625  0CCD                     l2778:
  4626  0CCD  082B               	movf	___flmul@a+3,w
  4627  0CCE  3980               	andlw	128
  4628  0CCF  00AC               	movwf	??___flmul
  4629  0CD0  082C               	movf	??___flmul,w
  4630  0CD1  06B1               	xorwf	___flmul@sign,f
  4631  0CD2                     l2780:
  4632  0CD2  082B               	movf	___flmul@a+3,w
  4633  0CD3  00AC               	movwf	??___flmul
  4634  0CD4  072C               	addwf	??___flmul,w
  4635  0CD5  00AD               	movwf	??___flmul+1
  4636  0CD6  082D               	movf	??___flmul+1,w
  4637  0CD7  00B6               	movwf	___flmul@aexp
  4638  0CD8                     l2782:
  4639  0CD8  1FAA               	btfss	___flmul@a+2,7
  4640  0CD9  2CDB               	goto	u3861
  4641  0CDA  2CDC               	goto	u3860
  4642  0CDB                     u3861:
  4643  0CDB  2CDD               	goto	l2786
  4644  0CDC                     u3860:
  4645  0CDC                     l2784:
  4646  0CDC  1436               	bsf	___flmul@aexp,0
  4647  0CDD                     l2786:
  4648  0CDD  0836               	movf	___flmul@aexp,w
  4649  0CDE  1903               	btfsc	3,2
  4650  0CDF  2CE1               	goto	u3871
  4651  0CE0  2CE2               	goto	u3870
  4652  0CE1                     u3871:
  4653  0CE1  2CF1               	goto	l2794
  4654  0CE2                     u3870:
  4655  0CE2                     l2788:
  4656  0CE2  0A36               	incf	___flmul@aexp,w
  4657  0CE3  1D03               	btfss	3,2
  4658  0CE4  2CE6               	goto	u3881
  4659  0CE5  2CE7               	goto	u3880
  4660  0CE6                     u3881:
  4661  0CE6  2CEF               	goto	l2792
  4662  0CE7                     u3880:
  4663  0CE7                     l2790:
  4664  0CE7  3000               	movlw	0
  4665  0CE8  00AB               	movwf	___flmul@a+3
  4666  0CE9  3000               	movlw	0
  4667  0CEA  00AA               	movwf	___flmul@a+2
  4668  0CEB  3000               	movlw	0
  4669  0CEC  00A9               	movwf	___flmul@a+1
  4670  0CED  3000               	movlw	0
  4671  0CEE  00A8               	movwf	___flmul@a
  4672  0CEF                     l2792:
  4673  0CEF  17AA               	bsf	___flmul@a+2,7
  4674  0CF0  2CF9               	goto	l2796
  4675  0CF1                     l2794:
  4676  0CF1  3000               	movlw	0
  4677  0CF2  00AB               	movwf	___flmul@a+3
  4678  0CF3  3000               	movlw	0
  4679  0CF4  00AA               	movwf	___flmul@a+2
  4680  0CF5  3000               	movlw	0
  4681  0CF6  00A9               	movwf	___flmul@a+1
  4682  0CF7  3000               	movlw	0
  4683  0CF8  00A8               	movwf	___flmul@a
  4684  0CF9                     l2796:
  4685  0CF9  0836               	movf	___flmul@aexp,w
  4686  0CFA  1903               	btfsc	3,2
  4687  0CFB  2CFD               	goto	u3891
  4688  0CFC  2CFE               	goto	u3890
  4689  0CFD                     u3891:
  4690  0CFD  2D03               	goto	l2800
  4691  0CFE                     u3890:
  4692  0CFE                     l2798:
  4693  0CFE  0837               	movf	___flmul@bexp,w
  4694  0CFF  1D03               	btfss	3,2
  4695  0D00  2D02               	goto	u3901
  4696  0D01  2D03               	goto	u3900
  4697  0D02                     u3901:
  4698  0D02  2D0C               	goto	l2804
  4699  0D03                     u3900:
  4700  0D03                     l2800:
  4701  0D03  3000               	movlw	0
  4702  0D04  00A7               	movwf	?___flmul+3
  4703  0D05  3000               	movlw	0
  4704  0D06  00A6               	movwf	?___flmul+2
  4705  0D07  3000               	movlw	0
  4706  0D08  00A5               	movwf	?___flmul+1
  4707  0D09  3000               	movlw	0
  4708  0D0A  00A4               	movwf	?___flmul
  4709  0D0B  2FFF               	goto	l836
  4710  0D0C                     l2804:
  4711  0D0C  0824               	movf	___flmul@b,w
  4712  0D0D  00AC               	movwf	??___flmul
  4713  0D0E  082C               	movf	??___flmul,w
  4714  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4715  0D10  082A               	movf	___flmul@a+2,w
  4716  0D11  160A  158A  2274  120A  158A  	fcall	__Umul8_16
  4717  0D16  0871               	movf	?__Umul8_16+1,w
  4718  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4719  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4720  0D19  00BD               	movwf	___flmul@temp+1
  4721  0D1A  0870               	movf	?__Umul8_16,w
  4722  0D1B  00BC               	movwf	___flmul@temp
  4723  0D1C                     l2806:
  4724  0D1C  083C               	movf	___flmul@temp,w
  4725  0D1D  00AC               	movwf	??___flmul
  4726  0D1E  01AD               	clrf	??___flmul+1
  4727  0D1F  01AE               	clrf	??___flmul+2
  4728  0D20  01AF               	clrf	??___flmul+3
  4729  0D21  082F               	movf	??___flmul+3,w
  4730  0D22  00B5               	movwf	___flmul@grs+3
  4731  0D23  082E               	movf	??___flmul+2,w
  4732  0D24  00B4               	movwf	___flmul@grs+2
  4733  0D25  082D               	movf	??___flmul+1,w
  4734  0D26  00B3               	movwf	___flmul@grs+1
  4735  0D27  082C               	movf	??___flmul,w
  4736  0D28  00B2               	movwf	___flmul@grs
  4737  0D29                     l2808:
  4738  0D29  083D               	movf	___flmul@temp+1,w
  4739  0D2A  00AC               	movwf	??___flmul
  4740  0D2B  01AD               	clrf	??___flmul+1
  4741  0D2C  01AE               	clrf	??___flmul+2
  4742  0D2D  01AF               	clrf	??___flmul+3
  4743  0D2E  082F               	movf	??___flmul+3,w
  4744  0D2F  00BB               	movwf	___flmul@prod+3
  4745  0D30  082E               	movf	??___flmul+2,w
  4746  0D31  00BA               	movwf	___flmul@prod+2
  4747  0D32  082D               	movf	??___flmul+1,w
  4748  0D33  00B9               	movwf	___flmul@prod+1
  4749  0D34  082C               	movf	??___flmul,w
  4750  0D35  00B8               	movwf	___flmul@prod
  4751  0D36  0825               	movf	___flmul@b+1,w
  4752  0D37  00AC               	movwf	??___flmul
  4753  0D38  082C               	movf	??___flmul,w
  4754  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4755  0D3A  0829               	movf	___flmul@a+1,w
  4756  0D3B  160A  158A  2274  120A  158A  	fcall	__Umul8_16
  4757  0D40  0871               	movf	?__Umul8_16+1,w
  4758  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4759  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4760  0D43  00BD               	movwf	___flmul@temp+1
  4761  0D44  0870               	movf	?__Umul8_16,w
  4762  0D45  00BC               	movwf	___flmul@temp
  4763  0D46                     l2810:
  4764  0D46  083C               	movf	___flmul@temp,w
  4765  0D47  00AC               	movwf	??___flmul
  4766  0D48  01AD               	clrf	??___flmul+1
  4767  0D49  01AE               	clrf	??___flmul+2
  4768  0D4A  01AF               	clrf	??___flmul+3
  4769  0D4B  082C               	movf	??___flmul,w
  4770  0D4C  07B2               	addwf	___flmul@grs,f
  4771  0D4D  082D               	movf	??___flmul+1,w
  4772  0D4E  1103               	clrz
  4773  0D4F  1803               	skipnc
  4774  0D50  3E01               	addlw	1
  4775  0D51  1903               	skipnz
  4776  0D52  2D54               	goto	u3911
  4777  0D53  07B3               	addwf	___flmul@grs+1,f
  4778  0D54                     u3911:
  4779  0D54  082E               	movf	??___flmul+2,w
  4780  0D55  1103               	clrz
  4781  0D56  1803               	skipnc
  4782  0D57  3E01               	addlw	1
  4783  0D58  1903               	skipnz
  4784  0D59  2D5B               	goto	u3912
  4785  0D5A  07B4               	addwf	___flmul@grs+2,f
  4786  0D5B                     u3912:
  4787  0D5B  082F               	movf	??___flmul+3,w
  4788  0D5C  1103               	clrz
  4789  0D5D  1803               	skipnc
  4790  0D5E  3E01               	addlw	1
  4791  0D5F  1903               	skipnz
  4792  0D60  2D62               	goto	u3913
  4793  0D61  07B5               	addwf	___flmul@grs+3,f
  4794  0D62                     u3913:
  4795  0D62                     l2812:
  4796  0D62  083D               	movf	___flmul@temp+1,w
  4797  0D63  00AC               	movwf	??___flmul
  4798  0D64  01AD               	clrf	??___flmul+1
  4799  0D65  01AE               	clrf	??___flmul+2
  4800  0D66  01AF               	clrf	??___flmul+3
  4801  0D67  082C               	movf	??___flmul,w
  4802  0D68  07B8               	addwf	___flmul@prod,f
  4803  0D69  082D               	movf	??___flmul+1,w
  4804  0D6A  1103               	clrz
  4805  0D6B  1803               	skipnc
  4806  0D6C  3E01               	addlw	1
  4807  0D6D  1903               	skipnz
  4808  0D6E  2D70               	goto	u3921
  4809  0D6F  07B9               	addwf	___flmul@prod+1,f
  4810  0D70                     u3921:
  4811  0D70  082E               	movf	??___flmul+2,w
  4812  0D71  1103               	clrz
  4813  0D72  1803               	skipnc
  4814  0D73  3E01               	addlw	1
  4815  0D74  1903               	skipnz
  4816  0D75  2D77               	goto	u3922
  4817  0D76  07BA               	addwf	___flmul@prod+2,f
  4818  0D77                     u3922:
  4819  0D77  082F               	movf	??___flmul+3,w
  4820  0D78  1103               	clrz
  4821  0D79  1803               	skipnc
  4822  0D7A  3E01               	addlw	1
  4823  0D7B  1903               	skipnz
  4824  0D7C  2D7E               	goto	u3923
  4825  0D7D  07BB               	addwf	___flmul@prod+3,f
  4826  0D7E                     u3923:
  4827  0D7E  0826               	movf	___flmul@b+2,w
  4828  0D7F  00AC               	movwf	??___flmul
  4829  0D80  082C               	movf	??___flmul,w
  4830  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4831  0D82  0828               	movf	___flmul@a,w
  4832  0D83  160A  158A  2274  120A  158A  	fcall	__Umul8_16
  4833  0D88  0871               	movf	?__Umul8_16+1,w
  4834  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0D8B  00BD               	movwf	___flmul@temp+1
  4837  0D8C  0870               	movf	?__Umul8_16,w
  4838  0D8D  00BC               	movwf	___flmul@temp
  4839  0D8E                     l2814:
  4840  0D8E  083C               	movf	___flmul@temp,w
  4841  0D8F  00AC               	movwf	??___flmul
  4842  0D90  01AD               	clrf	??___flmul+1
  4843  0D91  01AE               	clrf	??___flmul+2
  4844  0D92  01AF               	clrf	??___flmul+3
  4845  0D93  082C               	movf	??___flmul,w
  4846  0D94  07B2               	addwf	___flmul@grs,f
  4847  0D95  082D               	movf	??___flmul+1,w
  4848  0D96  1103               	clrz
  4849  0D97  1803               	skipnc
  4850  0D98  3E01               	addlw	1
  4851  0D99  1903               	skipnz
  4852  0D9A  2D9C               	goto	u3931
  4853  0D9B  07B3               	addwf	___flmul@grs+1,f
  4854  0D9C                     u3931:
  4855  0D9C  082E               	movf	??___flmul+2,w
  4856  0D9D  1103               	clrz
  4857  0D9E  1803               	skipnc
  4858  0D9F  3E01               	addlw	1
  4859  0DA0  1903               	skipnz
  4860  0DA1  2DA3               	goto	u3932
  4861  0DA2  07B4               	addwf	___flmul@grs+2,f
  4862  0DA3                     u3932:
  4863  0DA3  082F               	movf	??___flmul+3,w
  4864  0DA4  1103               	clrz
  4865  0DA5  1803               	skipnc
  4866  0DA6  3E01               	addlw	1
  4867  0DA7  1903               	skipnz
  4868  0DA8  2DAA               	goto	u3933
  4869  0DA9  07B5               	addwf	___flmul@grs+3,f
  4870  0DAA                     u3933:
  4871  0DAA                     l2816:
  4872  0DAA  083D               	movf	___flmul@temp+1,w
  4873  0DAB  00AC               	movwf	??___flmul
  4874  0DAC  01AD               	clrf	??___flmul+1
  4875  0DAD  01AE               	clrf	??___flmul+2
  4876  0DAE  01AF               	clrf	??___flmul+3
  4877  0DAF  082C               	movf	??___flmul,w
  4878  0DB0  07B8               	addwf	___flmul@prod,f
  4879  0DB1  082D               	movf	??___flmul+1,w
  4880  0DB2  1103               	clrz
  4881  0DB3  1803               	skipnc
  4882  0DB4  3E01               	addlw	1
  4883  0DB5  1903               	skipnz
  4884  0DB6  2DB8               	goto	u3941
  4885  0DB7  07B9               	addwf	___flmul@prod+1,f
  4886  0DB8                     u3941:
  4887  0DB8  082E               	movf	??___flmul+2,w
  4888  0DB9  1103               	clrz
  4889  0DBA  1803               	skipnc
  4890  0DBB  3E01               	addlw	1
  4891  0DBC  1903               	skipnz
  4892  0DBD  2DBF               	goto	u3942
  4893  0DBE  07BA               	addwf	___flmul@prod+2,f
  4894  0DBF                     u3942:
  4895  0DBF  082F               	movf	??___flmul+3,w
  4896  0DC0  1103               	clrz
  4897  0DC1  1803               	skipnc
  4898  0DC2  3E01               	addlw	1
  4899  0DC3  1903               	skipnz
  4900  0DC4  2DC6               	goto	u3943
  4901  0DC5  07BB               	addwf	___flmul@prod+3,f
  4902  0DC6                     u3943:
  4903  0DC6                     l2818:
  4904  0DC6  3008               	movlw	8
  4905  0DC7  00AC               	movwf	??___flmul
  4906  0DC8                     u3955:
  4907  0DC8  1003               	clrc
  4908  0DC9  0DB2               	rlf	___flmul@grs,f
  4909  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4910  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4911  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4912  0DCD  0BAC               	decfsz	??___flmul,f
  4913  0DCE  2DC8               	goto	u3955
  4914  0DCF                     l2820:
  4915  0DCF  0825               	movf	___flmul@b+1,w
  4916  0DD0  00AC               	movwf	??___flmul
  4917  0DD1  082C               	movf	??___flmul,w
  4918  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4919  0DD3  0828               	movf	___flmul@a,w
  4920  0DD4  160A  158A  2274  120A  158A  	fcall	__Umul8_16
  4921  0DD9  0871               	movf	?__Umul8_16+1,w
  4922  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4923  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4924  0DDC  00BD               	movwf	___flmul@temp+1
  4925  0DDD  0870               	movf	?__Umul8_16,w
  4926  0DDE  00BC               	movwf	___flmul@temp
  4927  0DDF                     l2822:
  4928  0DDF  083C               	movf	___flmul@temp,w
  4929  0DE0  00AC               	movwf	??___flmul
  4930  0DE1  083D               	movf	___flmul@temp+1,w
  4931  0DE2  00AD               	movwf	??___flmul+1
  4932  0DE3  01AE               	clrf	??___flmul+2
  4933  0DE4  01AF               	clrf	??___flmul+3
  4934  0DE5  082C               	movf	??___flmul,w
  4935  0DE6  07B2               	addwf	___flmul@grs,f
  4936  0DE7  082D               	movf	??___flmul+1,w
  4937  0DE8  1103               	clrz
  4938  0DE9  1803               	skipnc
  4939  0DEA  3E01               	addlw	1
  4940  0DEB  1903               	skipnz
  4941  0DEC  2DEE               	goto	u3961
  4942  0DED  07B3               	addwf	___flmul@grs+1,f
  4943  0DEE                     u3961:
  4944  0DEE  082E               	movf	??___flmul+2,w
  4945  0DEF  1103               	clrz
  4946  0DF0  1803               	skipnc
  4947  0DF1  3E01               	addlw	1
  4948  0DF2  1903               	skipnz
  4949  0DF3  2DF5               	goto	u3962
  4950  0DF4  07B4               	addwf	___flmul@grs+2,f
  4951  0DF5                     u3962:
  4952  0DF5  082F               	movf	??___flmul+3,w
  4953  0DF6  1103               	clrz
  4954  0DF7  1803               	skipnc
  4955  0DF8  3E01               	addlw	1
  4956  0DF9  1903               	skipnz
  4957  0DFA  2DFC               	goto	u3963
  4958  0DFB  07B5               	addwf	___flmul@grs+3,f
  4959  0DFC                     u3963:
  4960  0DFC                     l2824:
  4961  0DFC  0824               	movf	___flmul@b,w
  4962  0DFD  00AC               	movwf	??___flmul
  4963  0DFE  082C               	movf	??___flmul,w
  4964  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4965  0E00  0829               	movf	___flmul@a+1,w
  4966  0E01  160A  158A  2274  120A  158A  	fcall	__Umul8_16
  4967  0E06  0871               	movf	?__Umul8_16+1,w
  4968  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0E09  00BD               	movwf	___flmul@temp+1
  4971  0E0A  0870               	movf	?__Umul8_16,w
  4972  0E0B  00BC               	movwf	___flmul@temp
  4973  0E0C                     l2826:
  4974  0E0C  083C               	movf	___flmul@temp,w
  4975  0E0D  00AC               	movwf	??___flmul
  4976  0E0E  083D               	movf	___flmul@temp+1,w
  4977  0E0F  00AD               	movwf	??___flmul+1
  4978  0E10  01AE               	clrf	??___flmul+2
  4979  0E11  01AF               	clrf	??___flmul+3
  4980  0E12  082C               	movf	??___flmul,w
  4981  0E13  07B2               	addwf	___flmul@grs,f
  4982  0E14  082D               	movf	??___flmul+1,w
  4983  0E15  1103               	clrz
  4984  0E16  1803               	skipnc
  4985  0E17  3E01               	addlw	1
  4986  0E18  1903               	skipnz
  4987  0E19  2E1B               	goto	u3971
  4988  0E1A  07B3               	addwf	___flmul@grs+1,f
  4989  0E1B                     u3971:
  4990  0E1B  082E               	movf	??___flmul+2,w
  4991  0E1C  1103               	clrz
  4992  0E1D  1803               	skipnc
  4993  0E1E  3E01               	addlw	1
  4994  0E1F  1903               	skipnz
  4995  0E20  2E22               	goto	u3972
  4996  0E21  07B4               	addwf	___flmul@grs+2,f
  4997  0E22                     u3972:
  4998  0E22  082F               	movf	??___flmul+3,w
  4999  0E23  1103               	clrz
  5000  0E24  1803               	skipnc
  5001  0E25  3E01               	addlw	1
  5002  0E26  1903               	skipnz
  5003  0E27  2E29               	goto	u3973
  5004  0E28  07B5               	addwf	___flmul@grs+3,f
  5005  0E29                     u3973:
  5006  0E29                     l2828:
  5007  0E29  3008               	movlw	8
  5008  0E2A  00AC               	movwf	??___flmul
  5009  0E2B                     u3985:
  5010  0E2B  1003               	clrc
  5011  0E2C  0DB2               	rlf	___flmul@grs,f
  5012  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5013  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5014  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5015  0E30  0BAC               	decfsz	??___flmul,f
  5016  0E31  2E2B               	goto	u3985
  5017  0E32  0824               	movf	___flmul@b,w
  5018  0E33  00AC               	movwf	??___flmul
  5019  0E34  082C               	movf	??___flmul,w
  5020  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5021  0E36  0828               	movf	___flmul@a,w
  5022  0E37  160A  158A  2274  120A  158A  	fcall	__Umul8_16
  5023  0E3C  0871               	movf	?__Umul8_16+1,w
  5024  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5025  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5026  0E3F  00BD               	movwf	___flmul@temp+1
  5027  0E40  0870               	movf	?__Umul8_16,w
  5028  0E41  00BC               	movwf	___flmul@temp
  5029  0E42                     l2830:
  5030  0E42  083C               	movf	___flmul@temp,w
  5031  0E43  00AC               	movwf	??___flmul
  5032  0E44  083D               	movf	___flmul@temp+1,w
  5033  0E45  00AD               	movwf	??___flmul+1
  5034  0E46  01AE               	clrf	??___flmul+2
  5035  0E47  01AF               	clrf	??___flmul+3
  5036  0E48  082C               	movf	??___flmul,w
  5037  0E49  07B2               	addwf	___flmul@grs,f
  5038  0E4A  082D               	movf	??___flmul+1,w
  5039  0E4B  1103               	clrz
  5040  0E4C  1803               	skipnc
  5041  0E4D  3E01               	addlw	1
  5042  0E4E  1903               	skipnz
  5043  0E4F  2E51               	goto	u3991
  5044  0E50  07B3               	addwf	___flmul@grs+1,f
  5045  0E51                     u3991:
  5046  0E51  082E               	movf	??___flmul+2,w
  5047  0E52  1103               	clrz
  5048  0E53  1803               	skipnc
  5049  0E54  3E01               	addlw	1
  5050  0E55  1903               	skipnz
  5051  0E56  2E58               	goto	u3992
  5052  0E57  07B4               	addwf	___flmul@grs+2,f
  5053  0E58                     u3992:
  5054  0E58  082F               	movf	??___flmul+3,w
  5055  0E59  1103               	clrz
  5056  0E5A  1803               	skipnc
  5057  0E5B  3E01               	addlw	1
  5058  0E5C  1903               	skipnz
  5059  0E5D  2E5F               	goto	u3993
  5060  0E5E  07B5               	addwf	___flmul@grs+3,f
  5061  0E5F                     u3993:
  5062  0E5F                     l2832:
  5063  0E5F  0825               	movf	___flmul@b+1,w
  5064  0E60  00AC               	movwf	??___flmul
  5065  0E61  082C               	movf	??___flmul,w
  5066  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5067  0E63  082A               	movf	___flmul@a+2,w
  5068  0E64  160A  158A  2274  120A  158A  	fcall	__Umul8_16
  5069  0E69  0871               	movf	?__Umul8_16+1,w
  5070  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5071  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5072  0E6C  00BD               	movwf	___flmul@temp+1
  5073  0E6D  0870               	movf	?__Umul8_16,w
  5074  0E6E  00BC               	movwf	___flmul@temp
  5075  0E6F  083C               	movf	___flmul@temp,w
  5076  0E70  00AC               	movwf	??___flmul
  5077  0E71  083D               	movf	___flmul@temp+1,w
  5078  0E72  00AD               	movwf	??___flmul+1
  5079  0E73  01AE               	clrf	??___flmul+2
  5080  0E74  01AF               	clrf	??___flmul+3
  5081  0E75  082C               	movf	??___flmul,w
  5082  0E76  07B8               	addwf	___flmul@prod,f
  5083  0E77  082D               	movf	??___flmul+1,w
  5084  0E78  1103               	clrz
  5085  0E79  1803               	skipnc
  5086  0E7A  3E01               	addlw	1
  5087  0E7B  1903               	skipnz
  5088  0E7C  2E7E               	goto	u4001
  5089  0E7D  07B9               	addwf	___flmul@prod+1,f
  5090  0E7E                     u4001:
  5091  0E7E  082E               	movf	??___flmul+2,w
  5092  0E7F  1103               	clrz
  5093  0E80  1803               	skipnc
  5094  0E81  3E01               	addlw	1
  5095  0E82  1903               	skipnz
  5096  0E83  2E85               	goto	u4002
  5097  0E84  07BA               	addwf	___flmul@prod+2,f
  5098  0E85                     u4002:
  5099  0E85  082F               	movf	??___flmul+3,w
  5100  0E86  1103               	clrz
  5101  0E87  1803               	skipnc
  5102  0E88  3E01               	addlw	1
  5103  0E89  1903               	skipnz
  5104  0E8A  2E8C               	goto	u4003
  5105  0E8B  07BB               	addwf	___flmul@prod+3,f
  5106  0E8C                     u4003:
  5107  0E8C                     l2834:
  5108  0E8C  0826               	movf	___flmul@b+2,w
  5109  0E8D  00AC               	movwf	??___flmul
  5110  0E8E  082C               	movf	??___flmul,w
  5111  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5112  0E90  0829               	movf	___flmul@a+1,w
  5113  0E91  160A  158A  2274  120A  158A  	fcall	__Umul8_16
  5114  0E96  0871               	movf	?__Umul8_16+1,w
  5115  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5116  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5117  0E99  00BD               	movwf	___flmul@temp+1
  5118  0E9A  0870               	movf	?__Umul8_16,w
  5119  0E9B  00BC               	movwf	___flmul@temp
  5120  0E9C                     l2836:
  5121  0E9C  083C               	movf	___flmul@temp,w
  5122  0E9D  00AC               	movwf	??___flmul
  5123  0E9E  083D               	movf	___flmul@temp+1,w
  5124  0E9F  00AD               	movwf	??___flmul+1
  5125  0EA0  01AE               	clrf	??___flmul+2
  5126  0EA1  01AF               	clrf	??___flmul+3
  5127  0EA2  082C               	movf	??___flmul,w
  5128  0EA3  07B8               	addwf	___flmul@prod,f
  5129  0EA4  082D               	movf	??___flmul+1,w
  5130  0EA5  1103               	clrz
  5131  0EA6  1803               	skipnc
  5132  0EA7  3E01               	addlw	1
  5133  0EA8  1903               	skipnz
  5134  0EA9  2EAB               	goto	u4011
  5135  0EAA  07B9               	addwf	___flmul@prod+1,f
  5136  0EAB                     u4011:
  5137  0EAB  082E               	movf	??___flmul+2,w
  5138  0EAC  1103               	clrz
  5139  0EAD  1803               	skipnc
  5140  0EAE  3E01               	addlw	1
  5141  0EAF  1903               	skipnz
  5142  0EB0  2EB2               	goto	u4012
  5143  0EB1  07BA               	addwf	___flmul@prod+2,f
  5144  0EB2                     u4012:
  5145  0EB2  082F               	movf	??___flmul+3,w
  5146  0EB3  1103               	clrz
  5147  0EB4  1803               	skipnc
  5148  0EB5  3E01               	addlw	1
  5149  0EB6  1903               	skipnz
  5150  0EB7  2EB9               	goto	u4013
  5151  0EB8  07BB               	addwf	___flmul@prod+3,f
  5152  0EB9                     u4013:
  5153  0EB9  0826               	movf	___flmul@b+2,w
  5154  0EBA  00AC               	movwf	??___flmul
  5155  0EBB  082C               	movf	??___flmul,w
  5156  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5157  0EBD  082A               	movf	___flmul@a+2,w
  5158  0EBE  160A  158A  2274  120A  158A  	fcall	__Umul8_16
  5159  0EC3  0871               	movf	?__Umul8_16+1,w
  5160  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0EC6  00BD               	movwf	___flmul@temp+1
  5163  0EC7  0870               	movf	?__Umul8_16,w
  5164  0EC8  00BC               	movwf	___flmul@temp
  5165  0EC9                     l2838:
  5166  0EC9  083C               	movf	___flmul@temp,w
  5167  0ECA  00AC               	movwf	??___flmul
  5168  0ECB  083D               	movf	___flmul@temp+1,w
  5169  0ECC  00AD               	movwf	??___flmul+1
  5170  0ECD  01AE               	clrf	??___flmul+2
  5171  0ECE  01AF               	clrf	??___flmul+3
  5172  0ECF  3008               	movlw	8
  5173  0ED0                     u4025:
  5174  0ED0  1003               	clrc
  5175  0ED1  0DAC               	rlf	??___flmul,f
  5176  0ED2  0DAD               	rlf	??___flmul+1,f
  5177  0ED3  0DAE               	rlf	??___flmul+2,f
  5178  0ED4  0DAF               	rlf	??___flmul+3,f
  5179  0ED5                     u4020:
  5180  0ED5  3EFF               	addlw	-1
  5181  0ED6  1D03               	skipz
  5182  0ED7  2ED0               	goto	u4025
  5183  0ED8  082C               	movf	??___flmul,w
  5184  0ED9  07B8               	addwf	___flmul@prod,f
  5185  0EDA  082D               	movf	??___flmul+1,w
  5186  0EDB  1103               	clrz
  5187  0EDC  1803               	skipnc
  5188  0EDD  3E01               	addlw	1
  5189  0EDE  1903               	skipnz
  5190  0EDF  2EE1               	goto	u4031
  5191  0EE0  07B9               	addwf	___flmul@prod+1,f
  5192  0EE1                     u4031:
  5193  0EE1  082E               	movf	??___flmul+2,w
  5194  0EE2  1103               	clrz
  5195  0EE3  1803               	skipnc
  5196  0EE4  3E01               	addlw	1
  5197  0EE5  1903               	skipnz
  5198  0EE6  2EE8               	goto	u4032
  5199  0EE7  07BA               	addwf	___flmul@prod+2,f
  5200  0EE8                     u4032:
  5201  0EE8  082F               	movf	??___flmul+3,w
  5202  0EE9  1103               	clrz
  5203  0EEA  1803               	skipnc
  5204  0EEB  3E01               	addlw	1
  5205  0EEC  1903               	skipnz
  5206  0EED  2EEF               	goto	u4033
  5207  0EEE  07BB               	addwf	___flmul@prod+3,f
  5208  0EEF                     u4033:
  5209  0EEF                     l2840:
  5210  0EEF  0832               	movf	___flmul@grs,w
  5211  0EF0  00AC               	movwf	??___flmul
  5212  0EF1  0833               	movf	___flmul@grs+1,w
  5213  0EF2  00AD               	movwf	??___flmul+1
  5214  0EF3  0834               	movf	___flmul@grs+2,w
  5215  0EF4  00AE               	movwf	??___flmul+2
  5216  0EF5  0835               	movf	___flmul@grs+3,w
  5217  0EF6  00AF               	movwf	??___flmul+3
  5218  0EF7  3018               	movlw	24
  5219  0EF8                     u4045:
  5220  0EF8  1003               	clrc
  5221  0EF9  0CAF               	rrf	??___flmul+3,f
  5222  0EFA  0CAE               	rrf	??___flmul+2,f
  5223  0EFB  0CAD               	rrf	??___flmul+1,f
  5224  0EFC  0CAC               	rrf	??___flmul,f
  5225  0EFD                     u4040:
  5226  0EFD  3EFF               	addlw	-1
  5227  0EFE  1D03               	skipz
  5228  0EFF  2EF8               	goto	u4045
  5229  0F00  082C               	movf	??___flmul,w
  5230  0F01  07B8               	addwf	___flmul@prod,f
  5231  0F02  082D               	movf	??___flmul+1,w
  5232  0F03  1103               	clrz
  5233  0F04  1803               	skipnc
  5234  0F05  3E01               	addlw	1
  5235  0F06  1903               	skipnz
  5236  0F07  2F09               	goto	u4051
  5237  0F08  07B9               	addwf	___flmul@prod+1,f
  5238  0F09                     u4051:
  5239  0F09  082E               	movf	??___flmul+2,w
  5240  0F0A  1103               	clrz
  5241  0F0B  1803               	skipnc
  5242  0F0C  3E01               	addlw	1
  5243  0F0D  1903               	skipnz
  5244  0F0E  2F10               	goto	u4052
  5245  0F0F  07BA               	addwf	___flmul@prod+2,f
  5246  0F10                     u4052:
  5247  0F10  082F               	movf	??___flmul+3,w
  5248  0F11  1103               	clrz
  5249  0F12  1803               	skipnc
  5250  0F13  3E01               	addlw	1
  5251  0F14  1903               	skipnz
  5252  0F15  2F17               	goto	u4053
  5253  0F16  07BB               	addwf	___flmul@prod+3,f
  5254  0F17                     u4053:
  5255  0F17                     l2842:
  5256  0F17  3008               	movlw	8
  5257  0F18  00AC               	movwf	??___flmul
  5258  0F19                     u4065:
  5259  0F19  1003               	clrc
  5260  0F1A  0DB2               	rlf	___flmul@grs,f
  5261  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5262  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5263  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5264  0F1E  0BAC               	decfsz	??___flmul,f
  5265  0F1F  2F19               	goto	u4065
  5266  0F20                     l2844:
  5267  0F20  0837               	movf	___flmul@bexp,w
  5268  0F21  0736               	addwf	___flmul@aexp,w
  5269  0F22  00AC               	movwf	??___flmul
  5270  0F23  01AD               	clrf	??___flmul+1
  5271  0F24  0DAD               	rlf	??___flmul+1,f
  5272  0F25  082C               	movf	??___flmul,w
  5273  0F26  3E82               	addlw	130
  5274  0F27  00BC               	movwf	___flmul@temp
  5275  0F28  082D               	movf	??___flmul+1,w
  5276  0F29  1803               	skipnc
  5277  0F2A  3E01               	addlw	1
  5278  0F2B  3EFF               	addlw	255
  5279  0F2C  00BD               	movwf	___flmul@temp+1
  5280  0F2D  2F4B               	goto	l2856
  5281  0F2E                     l2846:
  5282  0F2E  3001               	movlw	1
  5283  0F2F  00AC               	movwf	??___flmul
  5284  0F30                     u4075:
  5285  0F30  1003               	clrc
  5286  0F31  0DB8               	rlf	___flmul@prod,f
  5287  0F32  0DB9               	rlf	___flmul@prod+1,f
  5288  0F33  0DBA               	rlf	___flmul@prod+2,f
  5289  0F34  0DBB               	rlf	___flmul@prod+3,f
  5290  0F35  0BAC               	decfsz	??___flmul,f
  5291  0F36  2F30               	goto	u4075
  5292  0F37                     l2848:
  5293  0F37  1FB5               	btfss	___flmul@grs+3,7
  5294  0F38  2F3A               	goto	u4081
  5295  0F39  2F3B               	goto	u4080
  5296  0F3A                     u4081:
  5297  0F3A  2F3C               	goto	l2852
  5298  0F3B                     u4080:
  5299  0F3B                     l2850:
  5300  0F3B  1438               	bsf	___flmul@prod,0
  5301  0F3C                     l2852:
  5302  0F3C  3001               	movlw	1
  5303  0F3D  00AC               	movwf	??___flmul
  5304  0F3E                     u4095:
  5305  0F3E  1003               	clrc
  5306  0F3F  0DB2               	rlf	___flmul@grs,f
  5307  0F40  0DB3               	rlf	___flmul@grs+1,f
  5308  0F41  0DB4               	rlf	___flmul@grs+2,f
  5309  0F42  0DB5               	rlf	___flmul@grs+3,f
  5310  0F43  0BAC               	decfsz	??___flmul,f
  5311  0F44  2F3E               	goto	u4095
  5312  0F45                     l2854:
  5313  0F45  30FF               	movlw	255
  5314  0F46  07BC               	addwf	___flmul@temp,f
  5315  0F47  1803               	skipnc
  5316  0F48  0ABD               	incf	___flmul@temp+1,f
  5317  0F49  30FF               	movlw	255
  5318  0F4A  07BD               	addwf	___flmul@temp+1,f
  5319  0F4B                     l2856:
  5320  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5321  0F4C  2F4E               	goto	u4101
  5322  0F4D  2F4F               	goto	u4100
  5323  0F4E                     u4101:
  5324  0F4E  2F2E               	goto	l2846
  5325  0F4F                     u4100:
  5326  0F4F                     l2858:
  5327  0F4F  01B6               	clrf	___flmul@aexp
  5328  0F50                     l2860:
  5329  0F50  1FB5               	btfss	___flmul@grs+3,7
  5330  0F51  2F53               	goto	u4111
  5331  0F52  2F54               	goto	u4110
  5332  0F53                     u4111:
  5333  0F53  2F70               	goto	l2868
  5334  0F54                     u4110:
  5335  0F54                     l2862:
  5336  0F54  30FF               	movlw	255
  5337  0F55  0532               	andwf	___flmul@grs,w
  5338  0F56  00AC               	movwf	??___flmul
  5339  0F57  30FF               	movlw	255
  5340  0F58  0533               	andwf	___flmul@grs+1,w
  5341  0F59  00AD               	movwf	??___flmul+1
  5342  0F5A  30FF               	movlw	255
  5343  0F5B  0534               	andwf	___flmul@grs+2,w
  5344  0F5C  00AE               	movwf	??___flmul+2
  5345  0F5D  307F               	movlw	127
  5346  0F5E  0535               	andwf	___flmul@grs+3,w
  5347  0F5F  00AF               	movwf	??___flmul+3
  5348  0F60  082F               	movf	??___flmul+3,w
  5349  0F61  042E               	iorwf	??___flmul+2,w
  5350  0F62  042D               	iorwf	??___flmul+1,w
  5351  0F63  042C               	iorwf	??___flmul,w
  5352  0F64  1903               	skipnz
  5353  0F65  2F67               	goto	u4121
  5354  0F66  2F68               	goto	u4120
  5355  0F67                     u4121:
  5356  0F67  2F6B               	goto	l842
  5357  0F68                     u4120:
  5358  0F68                     l2864:
  5359  0F68  01B6               	clrf	___flmul@aexp
  5360  0F69  0AB6               	incf	___flmul@aexp,f
  5361  0F6A  2F70               	goto	l2868
  5362  0F6B                     l842:
  5363  0F6B  1C38               	btfss	___flmul@prod,0
  5364  0F6C  2F6E               	goto	u4131
  5365  0F6D  2F6F               	goto	u4130
  5366  0F6E                     u4131:
  5367  0F6E  2F70               	goto	l2868
  5368  0F6F                     u4130:
  5369  0F6F  2F68               	goto	l2864
  5370  0F70                     l2868:
  5371  0F70  0836               	movf	___flmul@aexp,w
  5372  0F71  1903               	btfsc	3,2
  5373  0F72  2F74               	goto	u4141
  5374  0F73  2F75               	goto	u4140
  5375  0F74                     u4141:
  5376  0F74  2FA6               	goto	l2878
  5377  0F75                     u4140:
  5378  0F75                     l2870:
  5379  0F75  3001               	movlw	1
  5380  0F76  07B8               	addwf	___flmul@prod,f
  5381  0F77  3000               	movlw	0
  5382  0F78  1803               	skipnc
  5383  0F79  3001               	movlw	1
  5384  0F7A  07B9               	addwf	___flmul@prod+1,f
  5385  0F7B  3000               	movlw	0
  5386  0F7C  1803               	skipnc
  5387  0F7D  3001               	movlw	1
  5388  0F7E  07BA               	addwf	___flmul@prod+2,f
  5389  0F7F  3000               	movlw	0
  5390  0F80  1803               	skipnc
  5391  0F81  3001               	movlw	1
  5392  0F82  07BB               	addwf	___flmul@prod+3,f
  5393  0F83                     l2872:
  5394  0F83  1C3B               	btfss	___flmul@prod+3,0
  5395  0F84  2F86               	goto	u4151
  5396  0F85  2F87               	goto	u4150
  5397  0F86                     u4151:
  5398  0F86  2FA6               	goto	l2878
  5399  0F87                     u4150:
  5400  0F87                     l2874:
  5401  0F87  0838               	movf	___flmul@prod,w
  5402  0F88  00AC               	movwf	??___flmul
  5403  0F89  0839               	movf	___flmul@prod+1,w
  5404  0F8A  00AD               	movwf	??___flmul+1
  5405  0F8B  083A               	movf	___flmul@prod+2,w
  5406  0F8C  00AE               	movwf	??___flmul+2
  5407  0F8D  083B               	movf	___flmul@prod+3,w
  5408  0F8E  00AF               	movwf	??___flmul+3
  5409  0F8F  3001               	movlw	1
  5410  0F90  00B0               	movwf	??___flmul+4
  5411  0F91                     u4165:
  5412  0F91  0D2F               	rlf	??___flmul+3,w
  5413  0F92  0CAF               	rrf	??___flmul+3,f
  5414  0F93  0CAE               	rrf	??___flmul+2,f
  5415  0F94  0CAD               	rrf	??___flmul+1,f
  5416  0F95  0CAC               	rrf	??___flmul,f
  5417  0F96                     u4160:
  5418  0F96  0BB0               	decfsz	??___flmul+4,f
  5419  0F97  2F91               	goto	u4165
  5420  0F98  082F               	movf	??___flmul+3,w
  5421  0F99  00BB               	movwf	___flmul@prod+3
  5422  0F9A  082E               	movf	??___flmul+2,w
  5423  0F9B  00BA               	movwf	___flmul@prod+2
  5424  0F9C  082D               	movf	??___flmul+1,w
  5425  0F9D  00B9               	movwf	___flmul@prod+1
  5426  0F9E  082C               	movf	??___flmul,w
  5427  0F9F  00B8               	movwf	___flmul@prod
  5428  0FA0                     l2876:
  5429  0FA0  3001               	movlw	1
  5430  0FA1  07BC               	addwf	___flmul@temp,f
  5431  0FA2  1803               	skipnc
  5432  0FA3  0ABD               	incf	___flmul@temp+1,f
  5433  0FA4  3000               	movlw	0
  5434  0FA5  07BD               	addwf	___flmul@temp+1,f
  5435  0FA6                     l2878:
  5436  0FA6  083D               	movf	___flmul@temp+1,w
  5437  0FA7  3A80               	xorlw	128
  5438  0FA8  00FF               	movwf	btemp+1
  5439  0FA9  3080               	movlw	128
  5440  0FAA  027F               	subwf	btemp+1,w
  5441  0FAB  1D03               	skipz
  5442  0FAC  2FAF               	goto	u4175
  5443  0FAD  30FF               	movlw	255
  5444  0FAE  023C               	subwf	___flmul@temp,w
  5445  0FAF                     u4175:
  5446  0FAF  1C03               	skipc
  5447  0FB0  2FB2               	goto	u4171
  5448  0FB1  2FB3               	goto	u4170
  5449  0FB2                     u4171:
  5450  0FB2  2FBE               	goto	l2882
  5451  0FB3                     u4170:
  5452  0FB3                     l2880:
  5453  0FB3  307F               	movlw	127
  5454  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5455  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5456  0FB6  00BB               	movwf	___flmul@prod+3
  5457  0FB7  3080               	movlw	128
  5458  0FB8  00BA               	movwf	___flmul@prod+2
  5459  0FB9  3000               	movlw	0
  5460  0FBA  00B9               	movwf	___flmul@prod+1
  5461  0FBB  3000               	movlw	0
  5462  0FBC  00B8               	movwf	___flmul@prod
  5463  0FBD  2FF3               	goto	l848
  5464  0FBE                     l2882:
  5465  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5466  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5467  0FC0  083D               	movf	___flmul@temp+1,w
  5468  0FC1  3A80               	xorlw	128
  5469  0FC2  00FF               	movwf	btemp+1
  5470  0FC3  3080               	movlw	128
  5471  0FC4  027F               	subwf	btemp+1,w
  5472  0FC5  1D03               	skipz
  5473  0FC6  2FC9               	goto	u4185
  5474  0FC7  3001               	movlw	1
  5475  0FC8  023C               	subwf	___flmul@temp,w
  5476  0FC9                     u4185:
  5477  0FC9  1803               	skipnc
  5478  0FCA  2FCC               	goto	u4181
  5479  0FCB  2FCD               	goto	u4180
  5480  0FCC                     u4181:
  5481  0FCC  2FD9               	goto	l2888
  5482  0FCD                     u4180:
  5483  0FCD                     l2884:
  5484  0FCD  3000               	movlw	0
  5485  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5486  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5487  0FD0  00BB               	movwf	___flmul@prod+3
  5488  0FD1  3000               	movlw	0
  5489  0FD2  00BA               	movwf	___flmul@prod+2
  5490  0FD3  3000               	movlw	0
  5491  0FD4  00B9               	movwf	___flmul@prod+1
  5492  0FD5  3000               	movlw	0
  5493  0FD6  00B8               	movwf	___flmul@prod
  5494  0FD7                     l2886:
  5495  0FD7  01B1               	clrf	___flmul@sign
  5496  0FD8  2FF3               	goto	l848
  5497  0FD9                     l2888:
  5498  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5499  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5500  0FDB  083C               	movf	___flmul@temp,w
  5501  0FDC  00AC               	movwf	??___flmul
  5502  0FDD  082C               	movf	??___flmul,w
  5503  0FDE  00B7               	movwf	___flmul@bexp
  5504  0FDF  30FF               	movlw	255
  5505  0FE0  05B8               	andwf	___flmul@prod,f
  5506  0FE1  30FF               	movlw	255
  5507  0FE2  05B9               	andwf	___flmul@prod+1,f
  5508  0FE3  307F               	movlw	127
  5509  0FE4  05BA               	andwf	___flmul@prod+2,f
  5510  0FE5  3000               	movlw	0
  5511  0FE6  05BB               	andwf	___flmul@prod+3,f
  5512  0FE7                     l2890:
  5513  0FE7  1C37               	btfss	___flmul@bexp,0
  5514  0FE8  2FEA               	goto	u4191
  5515  0FE9  2FEB               	goto	u4190
  5516  0FEA                     u4191:
  5517  0FEA  2FEC               	goto	l2894
  5518  0FEB                     u4190:
  5519  0FEB                     l2892:
  5520  0FEB  17BA               	bsf	___flmul@prod+2,7
  5521  0FEC                     l2894:
  5522  0FEC  0837               	movf	___flmul@bexp,w
  5523  0FED  00AC               	movwf	??___flmul
  5524  0FEE  1003               	clrc
  5525  0FEF  0C2C               	rrf	??___flmul,w
  5526  0FF0  00AD               	movwf	??___flmul+1
  5527  0FF1  082D               	movf	??___flmul+1,w
  5528  0FF2  00BB               	movwf	___flmul@prod+3
  5529  0FF3                     l848:
  5530  0FF3  0831               	movf	___flmul@sign,w
  5531  0FF4  00AC               	movwf	??___flmul
  5532  0FF5  082C               	movf	??___flmul,w
  5533  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5534  0FF7                     l2896:
  5535  0FF7  083B               	movf	___flmul@prod+3,w
  5536  0FF8  00A7               	movwf	?___flmul+3
  5537  0FF9  083A               	movf	___flmul@prod+2,w
  5538  0FFA  00A6               	movwf	?___flmul+2
  5539  0FFB  0839               	movf	___flmul@prod+1,w
  5540  0FFC  00A5               	movwf	?___flmul+1
  5541  0FFD  0838               	movf	___flmul@prod,w
  5542  0FFE  00A4               	movwf	?___flmul
  5543  0FFF                     l836:
  5544  0FFF  0008               	return
  5545  1000                     __end_of___flmul:
  5546                           
  5547                           	psect	text12
  5548  1A74                     __ptext12:	
  5549 ;; *************** function __Umul8_16 *****************
  5550 ;; Defined at:
  5551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  multiplier      1    wreg     unsigned char 
  5554 ;;  multiplicand    1    0[COMMON] unsigned char 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  multiplier      1    8[COMMON] unsigned char 
  5557 ;;  word_mpld       2    6[COMMON] unsigned int 
  5558 ;;  product         2    4[COMMON] unsigned int 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  2    0[COMMON] unsigned int 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5568 ;;      Params:         2       0       0       0       0
  5569 ;;      Locals:         5       0       0       0       0
  5570 ;;      Temps:          2       0       0       0       0
  5571 ;;      Totals:         9       0       0       0       0
  5572 ;;Total ram usage:        9 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		___flmul
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function __Umul8_16
  5583  1A74                     __Umul8_16:
  5584                           
  5585                           ;incstack = 0
  5586                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5587                           ;__Umul8_16@multiplier stored from wreg
  5588  1A74  00F8               	movwf	__Umul8_16@multiplier
  5589  1A75                     l2404:
  5590  1A75  01F4               	clrf	__Umul8_16@product
  5591  1A76  01F5               	clrf	__Umul8_16@product+1
  5592  1A77                     l2406:
  5593  1A77  0870               	movf	__Umul8_16@multiplicand,w
  5594  1A78  00F2               	movwf	??__Umul8_16
  5595  1A79  01F3               	clrf	??__Umul8_16+1
  5596  1A7A  0872               	movf	??__Umul8_16,w
  5597  1A7B  00F6               	movwf	__Umul8_16@word_mpld
  5598  1A7C  0873               	movf	??__Umul8_16+1,w
  5599  1A7D  00F7               	movwf	__Umul8_16@word_mpld+1
  5600  1A7E                     l2408:
  5601  1A7E  1C78               	btfss	__Umul8_16@multiplier,0
  5602  1A7F  2A81               	goto	u2941
  5603  1A80  2A82               	goto	u2940
  5604  1A81                     u2941:
  5605  1A81  2A88               	goto	l855
  5606  1A82                     u2940:
  5607  1A82                     l2410:
  5608  1A82  0876               	movf	__Umul8_16@word_mpld,w
  5609  1A83  07F4               	addwf	__Umul8_16@product,f
  5610  1A84  1803               	skipnc
  5611  1A85  0AF5               	incf	__Umul8_16@product+1,f
  5612  1A86  0877               	movf	__Umul8_16@word_mpld+1,w
  5613  1A87  07F5               	addwf	__Umul8_16@product+1,f
  5614  1A88                     l855:
  5615  1A88  3001               	movlw	1
  5616  1A89                     u2955:
  5617  1A89  1003               	clrc
  5618  1A8A  0DF6               	rlf	__Umul8_16@word_mpld,f
  5619  1A8B  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5620  1A8C  3EFF               	addlw	-1
  5621  1A8D  1D03               	skipz
  5622  1A8E  2A89               	goto	u2955
  5623  1A8F  1003               	clrc
  5624  1A90  0CF8               	rrf	__Umul8_16@multiplier,f
  5625  1A91                     l2412:
  5626  1A91  0878               	movf	__Umul8_16@multiplier,w
  5627  1A92  1D03               	btfss	3,2
  5628  1A93  2A95               	goto	u2961
  5629  1A94  2A96               	goto	u2960
  5630  1A95                     u2961:
  5631  1A95  2A7E               	goto	l2408
  5632  1A96                     u2960:
  5633  1A96                     l2414:
  5634  1A96  0875               	movf	__Umul8_16@product+1,w
  5635  1A97  00F1               	movwf	?__Umul8_16+1
  5636  1A98  0874               	movf	__Umul8_16@product,w
  5637  1A99  00F0               	movwf	?__Umul8_16
  5638  1A9A                     l857:
  5639  1A9A  0008               	return
  5640  1A9B                     __end_of__Umul8_16:
  5641                           
  5642                           	psect	text13
  5643  1E85                     __ptext13:	
  5644 ;; *************** function __tdiv_to_l_ *****************
  5645 ;; Defined at:
  5646 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  f1              4    0[COMMON] float 
  5649 ;;  f2              4    4[COMMON] float 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  quot            4    0[BANK0 ] unsigned long 
  5652 ;;  exp1            1    5[BANK0 ] unsigned char 
  5653 ;;  cntr            1    4[BANK0 ] unsigned char 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  4    0[COMMON] unsigned long 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5663 ;;      Params:         8       0       0       0       0
  5664 ;;      Locals:         0       6       0       0       0
  5665 ;;      Temps:          4       0       0       0       0
  5666 ;;      Totals:        12       6       0       0       0
  5667 ;;Total ram usage:       18 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_sprintf
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           
  5677                           ;psect for function __tdiv_to_l_
  5678  1E85                     __tdiv_to_l_:
  5679  1E85                     l2998:	
  5680                           ;incstack = 0
  5681                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5682                           
  5683  1E85  0870               	movf	__tdiv_to_l_@f1,w
  5684  1E86  00F8               	movwf	??__tdiv_to_l_
  5685  1E87  0871               	movf	__tdiv_to_l_@f1+1,w
  5686  1E88  00F9               	movwf	??__tdiv_to_l_+1
  5687  1E89  0872               	movf	__tdiv_to_l_@f1+2,w
  5688  1E8A  00FA               	movwf	??__tdiv_to_l_+2
  5689  1E8B  1003               	clrc
  5690  1E8C  0D79               	rlf	??__tdiv_to_l_+1,w
  5691  1E8D  0D7A               	rlf	??__tdiv_to_l_+2,w
  5692  1E8E  00FB               	movwf	??__tdiv_to_l_+3
  5693  1E8F  087B               	movf	??__tdiv_to_l_+3,w
  5694  1E90  1283               	bcf	3,5	;RP0=0, select bank0
  5695  1E91  1303               	bcf	3,6	;RP1=0, select bank0
  5696  1E92  00A5               	movwf	__tdiv_to_l_@exp1
  5697  1E93  0825               	movf	__tdiv_to_l_@exp1,w
  5698  1E94  1D03               	btfss	3,2
  5699  1E95  2E97               	goto	u4471
  5700  1E96  2E98               	goto	u4470
  5701  1E97                     u4471:
  5702  1E97  2EA1               	goto	l3004
  5703  1E98                     u4470:
  5704  1E98                     l3000:
  5705  1E98  3000               	movlw	0
  5706  1E99  00F3               	movwf	?__tdiv_to_l_+3
  5707  1E9A  3000               	movlw	0
  5708  1E9B  00F2               	movwf	?__tdiv_to_l_+2
  5709  1E9C  3000               	movlw	0
  5710  1E9D  00F1               	movwf	?__tdiv_to_l_+1
  5711  1E9E  3000               	movlw	0
  5712  1E9F  00F0               	movwf	?__tdiv_to_l_
  5713  1EA0  2F41               	goto	l630
  5714  1EA1                     l3004:
  5715  1EA1  0874               	movf	__tdiv_to_l_@f2,w
  5716  1EA2  00F8               	movwf	??__tdiv_to_l_
  5717  1EA3  0875               	movf	__tdiv_to_l_@f2+1,w
  5718  1EA4  00F9               	movwf	??__tdiv_to_l_+1
  5719  1EA5  0876               	movf	__tdiv_to_l_@f2+2,w
  5720  1EA6  00FA               	movwf	??__tdiv_to_l_+2
  5721  1EA7  1003               	clrc
  5722  1EA8  0D79               	rlf	??__tdiv_to_l_+1,w
  5723  1EA9  0D7A               	rlf	??__tdiv_to_l_+2,w
  5724  1EAA  00FB               	movwf	??__tdiv_to_l_+3
  5725  1EAB  087B               	movf	??__tdiv_to_l_+3,w
  5726  1EAC  00A4               	movwf	__tdiv_to_l_@cntr
  5727  1EAD  0824               	movf	__tdiv_to_l_@cntr,w
  5728  1EAE  1D03               	btfss	3,2
  5729  1EAF  2EB1               	goto	u4481
  5730  1EB0  2EB2               	goto	u4480
  5731  1EB1                     u4481:
  5732  1EB1  2EB3               	goto	l631
  5733  1EB2                     u4480:
  5734  1EB2  2E98               	goto	l3000
  5735  1EB3                     l631:
  5736  1EB3  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5737  1EB4                     l3010:
  5738  1EB4  30FF               	movlw	255
  5739  1EB5  05F0               	andwf	__tdiv_to_l_@f1,f
  5740  1EB6  30FF               	movlw	255
  5741  1EB7  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5742  1EB8  3000               	movlw	0
  5743  1EB9  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5744  1EBA                     l3012:
  5745  1EBA  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5746  1EBB  30FF               	movlw	255
  5747  1EBC  05F4               	andwf	__tdiv_to_l_@f2,f
  5748  1EBD  30FF               	movlw	255
  5749  1EBE  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5750  1EBF  3000               	movlw	0
  5751  1EC0  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5752  1EC1  3000               	movlw	0
  5753  1EC2  00A3               	movwf	__tdiv_to_l_@quot+3
  5754  1EC3  3000               	movlw	0
  5755  1EC4  00A2               	movwf	__tdiv_to_l_@quot+2
  5756  1EC5  3000               	movlw	0
  5757  1EC6  00A1               	movwf	__tdiv_to_l_@quot+1
  5758  1EC7  3000               	movlw	0
  5759  1EC8  00A0               	movwf	__tdiv_to_l_@quot
  5760  1EC9                     l3014:
  5761  1EC9  307F               	movlw	127
  5762  1ECA  02A5               	subwf	__tdiv_to_l_@exp1,f
  5763  1ECB                     l3016:
  5764  1ECB  3098               	movlw	152
  5765  1ECC  0724               	addwf	__tdiv_to_l_@cntr,w
  5766  1ECD  00F8               	movwf	??__tdiv_to_l_
  5767  1ECE  0878               	movf	??__tdiv_to_l_,w
  5768  1ECF  02A5               	subwf	__tdiv_to_l_@exp1,f
  5769  1ED0  3018               	movlw	24
  5770  1ED1  00F8               	movwf	??__tdiv_to_l_
  5771  1ED2  0878               	movf	??__tdiv_to_l_,w
  5772  1ED3  00A4               	movwf	__tdiv_to_l_@cntr
  5773  1ED4                     l3018:
  5774  1ED4  3001               	movlw	1
  5775  1ED5  00F8               	movwf	??__tdiv_to_l_
  5776  1ED6                     u4495:
  5777  1ED6  1003               	clrc
  5778  1ED7  0DA0               	rlf	__tdiv_to_l_@quot,f
  5779  1ED8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5780  1ED9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5781  1EDA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5782  1EDB  0BF8               	decfsz	??__tdiv_to_l_,f
  5783  1EDC  2ED6               	goto	u4495
  5784  1EDD                     l3020:
  5785  1EDD  0876               	movf	__tdiv_to_l_@f2+2,w
  5786  1EDE  0272               	subwf	__tdiv_to_l_@f1+2,w
  5787  1EDF  1D03               	skipz
  5788  1EE0  2EE7               	goto	u4505
  5789  1EE1  0875               	movf	__tdiv_to_l_@f2+1,w
  5790  1EE2  0271               	subwf	__tdiv_to_l_@f1+1,w
  5791  1EE3  1D03               	skipz
  5792  1EE4  2EE7               	goto	u4505
  5793  1EE5  0874               	movf	__tdiv_to_l_@f2,w
  5794  1EE6  0270               	subwf	__tdiv_to_l_@f1,w
  5795  1EE7                     u4505:
  5796  1EE7  1C03               	skipc
  5797  1EE8  2EEA               	goto	u4501
  5798  1EE9  2EEB               	goto	u4500
  5799  1EEA                     u4501:
  5800  1EEA  2EF6               	goto	l3026
  5801  1EEB                     u4500:
  5802  1EEB                     l3022:
  5803  1EEB  0874               	movf	__tdiv_to_l_@f2,w
  5804  1EEC  02F0               	subwf	__tdiv_to_l_@f1,f
  5805  1EED  0875               	movf	__tdiv_to_l_@f2+1,w
  5806  1EEE  1C03               	skipc
  5807  1EEF  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5808  1EF0  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5809  1EF1  0876               	movf	__tdiv_to_l_@f2+2,w
  5810  1EF2  1C03               	skipc
  5811  1EF3  0A76               	incf	__tdiv_to_l_@f2+2,w
  5812  1EF4  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5813  1EF5                     l3024:
  5814  1EF5  1420               	bsf	__tdiv_to_l_@quot,0
  5815  1EF6                     l3026:
  5816  1EF6  3001               	movlw	1
  5817  1EF7                     u4515:
  5818  1EF7  1003               	clrc
  5819  1EF8  0DF0               	rlf	__tdiv_to_l_@f1,f
  5820  1EF9  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5821  1EFA  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5822  1EFB  3EFF               	addlw	-1
  5823  1EFC  1D03               	skipz
  5824  1EFD  2EF7               	goto	u4515
  5825  1EFE                     l3028:
  5826  1EFE  3001               	movlw	1
  5827  1EFF  02A4               	subwf	__tdiv_to_l_@cntr,f
  5828  1F00  1D03               	btfss	3,2
  5829  1F01  2F03               	goto	u4521
  5830  1F02  2F04               	goto	u4520
  5831  1F03                     u4521:
  5832  1F03  2ED4               	goto	l3018
  5833  1F04                     u4520:
  5834  1F04                     l634:
  5835  1F04  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5836  1F05  2F07               	goto	u4531
  5837  1F06  2F08               	goto	u4530
  5838  1F07                     u4531:
  5839  1F07  2F22               	goto	l3038
  5840  1F08                     u4530:
  5841  1F08                     l3030:
  5842  1F08  0825               	movf	__tdiv_to_l_@exp1,w
  5843  1F09  3A80               	xorlw	128
  5844  1F0A  3E97               	addlw	151
  5845  1F0B  1803               	skipnc
  5846  1F0C  2F0E               	goto	u4541
  5847  1F0D  2F0F               	goto	u4540
  5848  1F0E                     u4541:
  5849  1F0E  2F10               	goto	l3036
  5850  1F0F                     u4540:
  5851  1F0F  2E98               	goto	l3000
  5852  1F10                     l3036:
  5853  1F10  3001               	movlw	1
  5854  1F11                     u4555:
  5855  1F11  1003               	clrc
  5856  1F12  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5857  1F13  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5858  1F14  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5859  1F15  0CA0               	rrf	__tdiv_to_l_@quot,f
  5860  1F16  3EFF               	addlw	-1
  5861  1F17  1D03               	skipz
  5862  1F18  2F11               	goto	u4555
  5863  1F19  3001               	movlw	1
  5864  1F1A  00F8               	movwf	??__tdiv_to_l_
  5865  1F1B  0878               	movf	??__tdiv_to_l_,w
  5866  1F1C  07A5               	addwf	__tdiv_to_l_@exp1,f
  5867  1F1D  1D03               	btfss	3,2
  5868  1F1E  2F20               	goto	u4561
  5869  1F1F  2F21               	goto	u4560
  5870  1F20                     u4561:
  5871  1F20  2F10               	goto	l3036
  5872  1F21                     u4560:
  5873  1F21  2F39               	goto	l3046
  5874  1F22                     l3038:
  5875  1F22  3018               	movlw	24
  5876  1F23  0225               	subwf	__tdiv_to_l_@exp1,w
  5877  1F24  1C03               	skipc
  5878  1F25  2F27               	goto	u4571
  5879  1F26  2F28               	goto	u4570
  5880  1F27                     u4571:
  5881  1F27  2F34               	goto	l641
  5882  1F28                     u4570:
  5883  1F28  2E98               	goto	l3000
  5884  1F29                     l3044:
  5885  1F29  3001               	movlw	1
  5886  1F2A  00F8               	movwf	??__tdiv_to_l_
  5887  1F2B                     u4585:
  5888  1F2B  1003               	clrc
  5889  1F2C  0DA0               	rlf	__tdiv_to_l_@quot,f
  5890  1F2D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5891  1F2E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5892  1F2F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5893  1F30  0BF8               	decfsz	??__tdiv_to_l_,f
  5894  1F31  2F2B               	goto	u4585
  5895  1F32  3001               	movlw	1
  5896  1F33  02A5               	subwf	__tdiv_to_l_@exp1,f
  5897  1F34                     l641:
  5898  1F34  0825               	movf	__tdiv_to_l_@exp1,w
  5899  1F35  1D03               	btfss	3,2
  5900  1F36  2F38               	goto	u4591
  5901  1F37  2F39               	goto	u4590
  5902  1F38                     u4591:
  5903  1F38  2F29               	goto	l3044
  5904  1F39                     u4590:
  5905  1F39                     l3046:
  5906  1F39  0823               	movf	__tdiv_to_l_@quot+3,w
  5907  1F3A  00F3               	movwf	?__tdiv_to_l_+3
  5908  1F3B  0822               	movf	__tdiv_to_l_@quot+2,w
  5909  1F3C  00F2               	movwf	?__tdiv_to_l_+2
  5910  1F3D  0821               	movf	__tdiv_to_l_@quot+1,w
  5911  1F3E  00F1               	movwf	?__tdiv_to_l_+1
  5912  1F3F  0820               	movf	__tdiv_to_l_@quot,w
  5913  1F40  00F0               	movwf	?__tdiv_to_l_
  5914  1F41                     l630:
  5915  1F41  0008               	return
  5916  1F42                     __end_of__tdiv_to_l_:
  5917                           
  5918                           	psect	text14
  5919  1F42                     __ptext14:	
  5920 ;; *************** function __div_to_l_ *****************
  5921 ;; Defined at:
  5922 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;  f1              4    0[COMMON] unsigned long 
  5925 ;;  f2              4    4[COMMON] unsigned long 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  quot            4    0[BANK0 ] unsigned long 
  5928 ;;  exp1            1    5[BANK0 ] unsigned char 
  5929 ;;  cntr            1    4[BANK0 ] unsigned char 
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  4    0[COMMON] unsigned long 
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5939 ;;      Params:         8       0       0       0       0
  5940 ;;      Locals:         0       6       0       0       0
  5941 ;;      Temps:          1       0       0       0       0
  5942 ;;      Totals:         9       6       0       0       0
  5943 ;;Total ram usage:       15 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; This function calls:
  5946 ;;		Nothing
  5947 ;; This function is called by:
  5948 ;;		_sprintf
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           
  5953                           ;psect for function __div_to_l_
  5954  1F42                     __div_to_l_:
  5955  1F42                     l3050:	
  5956                           ;incstack = 0
  5957                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5958                           
  5959  1F42  1003               	clrc
  5960  1F43  0D72               	rlf	__div_to_l_@f1+2,w
  5961  1F44  0D73               	rlf	__div_to_l_@f1+3,w
  5962  1F45  00F8               	movwf	??__div_to_l_
  5963  1F46  0878               	movf	??__div_to_l_,w
  5964  1F47  1283               	bcf	3,5	;RP0=0, select bank0
  5965  1F48  1303               	bcf	3,6	;RP1=0, select bank0
  5966  1F49  00A5               	movwf	__div_to_l_@exp1
  5967  1F4A  0825               	movf	__div_to_l_@exp1,w
  5968  1F4B  1D03               	btfss	3,2
  5969  1F4C  2F4E               	goto	u4601
  5970  1F4D  2F4F               	goto	u4600
  5971  1F4E                     u4601:
  5972  1F4E  2F58               	goto	l3056
  5973  1F4F                     u4600:
  5974  1F4F                     l3052:
  5975  1F4F  3000               	movlw	0
  5976  1F50  00F3               	movwf	?__div_to_l_+3
  5977  1F51  3000               	movlw	0
  5978  1F52  00F2               	movwf	?__div_to_l_+2
  5979  1F53  3000               	movlw	0
  5980  1F54  00F1               	movwf	?__div_to_l_+1
  5981  1F55  3000               	movlw	0
  5982  1F56  00F0               	movwf	?__div_to_l_
  5983  1F57  2FFF               	goto	l583
  5984  1F58                     l3056:
  5985  1F58  1003               	clrc
  5986  1F59  0D76               	rlf	__div_to_l_@f2+2,w
  5987  1F5A  0D77               	rlf	__div_to_l_@f2+3,w
  5988  1F5B  00F8               	movwf	??__div_to_l_
  5989  1F5C  0878               	movf	??__div_to_l_,w
  5990  1F5D  00A4               	movwf	__div_to_l_@cntr
  5991  1F5E  0824               	movf	__div_to_l_@cntr,w
  5992  1F5F  1D03               	btfss	3,2
  5993  1F60  2F62               	goto	u4611
  5994  1F61  2F63               	goto	u4610
  5995  1F62                     u4611:
  5996  1F62  2F64               	goto	l584
  5997  1F63                     u4610:
  5998  1F63  2F4F               	goto	l3052
  5999  1F64                     l584:
  6000  1F64  17F2               	bsf	__div_to_l_@f1+2,7
  6001  1F65                     l3062:
  6002  1F65  30FF               	movlw	255
  6003  1F66  05F0               	andwf	__div_to_l_@f1,f
  6004  1F67  30FF               	movlw	255
  6005  1F68  05F1               	andwf	__div_to_l_@f1+1,f
  6006  1F69  30FF               	movlw	255
  6007  1F6A  05F2               	andwf	__div_to_l_@f1+2,f
  6008  1F6B  3000               	movlw	0
  6009  1F6C  05F3               	andwf	__div_to_l_@f1+3,f
  6010  1F6D                     l3064:
  6011  1F6D  17F6               	bsf	__div_to_l_@f2+2,7
  6012  1F6E  30FF               	movlw	255
  6013  1F6F  05F4               	andwf	__div_to_l_@f2,f
  6014  1F70  30FF               	movlw	255
  6015  1F71  05F5               	andwf	__div_to_l_@f2+1,f
  6016  1F72  30FF               	movlw	255
  6017  1F73  05F6               	andwf	__div_to_l_@f2+2,f
  6018  1F74  3000               	movlw	0
  6019  1F75  05F7               	andwf	__div_to_l_@f2+3,f
  6020  1F76  3000               	movlw	0
  6021  1F77  00A3               	movwf	__div_to_l_@quot+3
  6022  1F78  3000               	movlw	0
  6023  1F79  00A2               	movwf	__div_to_l_@quot+2
  6024  1F7A  3000               	movlw	0
  6025  1F7B  00A1               	movwf	__div_to_l_@quot+1
  6026  1F7C  3000               	movlw	0
  6027  1F7D  00A0               	movwf	__div_to_l_@quot
  6028  1F7E                     l3066:
  6029  1F7E  307F               	movlw	127
  6030  1F7F  02A5               	subwf	__div_to_l_@exp1,f
  6031  1F80                     l3068:
  6032  1F80  30A0               	movlw	160
  6033  1F81  0724               	addwf	__div_to_l_@cntr,w
  6034  1F82  00F8               	movwf	??__div_to_l_
  6035  1F83  0878               	movf	??__div_to_l_,w
  6036  1F84  02A5               	subwf	__div_to_l_@exp1,f
  6037  1F85  3020               	movlw	32
  6038  1F86  00F8               	movwf	??__div_to_l_
  6039  1F87  0878               	movf	??__div_to_l_,w
  6040  1F88  00A4               	movwf	__div_to_l_@cntr
  6041  1F89                     l3070:
  6042  1F89  3001               	movlw	1
  6043  1F8A  00F8               	movwf	??__div_to_l_
  6044  1F8B                     u4625:
  6045  1F8B  1003               	clrc
  6046  1F8C  0DA0               	rlf	__div_to_l_@quot,f
  6047  1F8D  0DA1               	rlf	__div_to_l_@quot+1,f
  6048  1F8E  0DA2               	rlf	__div_to_l_@quot+2,f
  6049  1F8F  0DA3               	rlf	__div_to_l_@quot+3,f
  6050  1F90  0BF8               	decfsz	??__div_to_l_,f
  6051  1F91  2F8B               	goto	u4625
  6052  1F92                     l3072:
  6053  1F92  0877               	movf	__div_to_l_@f2+3,w
  6054  1F93  0273               	subwf	__div_to_l_@f1+3,w
  6055  1F94  1D03               	skipz
  6056  1F95  2FA0               	goto	u4635
  6057  1F96  0876               	movf	__div_to_l_@f2+2,w
  6058  1F97  0272               	subwf	__div_to_l_@f1+2,w
  6059  1F98  1D03               	skipz
  6060  1F99  2FA0               	goto	u4635
  6061  1F9A  0875               	movf	__div_to_l_@f2+1,w
  6062  1F9B  0271               	subwf	__div_to_l_@f1+1,w
  6063  1F9C  1D03               	skipz
  6064  1F9D  2FA0               	goto	u4635
  6065  1F9E  0874               	movf	__div_to_l_@f2,w
  6066  1F9F  0270               	subwf	__div_to_l_@f1,w
  6067  1FA0                     u4635:
  6068  1FA0  1C03               	skipc
  6069  1FA1  2FA3               	goto	u4631
  6070  1FA2  2FA4               	goto	u4630
  6071  1FA3                     u4631:
  6072  1FA3  2FB3               	goto	l3078
  6073  1FA4                     u4630:
  6074  1FA4                     l3074:
  6075  1FA4  0874               	movf	__div_to_l_@f2,w
  6076  1FA5  02F0               	subwf	__div_to_l_@f1,f
  6077  1FA6  0875               	movf	__div_to_l_@f2+1,w
  6078  1FA7  1C03               	skipc
  6079  1FA8  0F75               	incfsz	__div_to_l_@f2+1,w
  6080  1FA9  02F1               	subwf	__div_to_l_@f1+1,f
  6081  1FAA  0876               	movf	__div_to_l_@f2+2,w
  6082  1FAB  1C03               	skipc
  6083  1FAC  0F76               	incfsz	__div_to_l_@f2+2,w
  6084  1FAD  02F2               	subwf	__div_to_l_@f1+2,f
  6085  1FAE  0877               	movf	__div_to_l_@f2+3,w
  6086  1FAF  1C03               	skipc
  6087  1FB0  0F77               	incfsz	__div_to_l_@f2+3,w
  6088  1FB1  02F3               	subwf	__div_to_l_@f1+3,f
  6089  1FB2                     l3076:
  6090  1FB2  1420               	bsf	__div_to_l_@quot,0
  6091  1FB3                     l3078:
  6092  1FB3  3001               	movlw	1
  6093  1FB4  00F8               	movwf	??__div_to_l_
  6094  1FB5                     u4645:
  6095  1FB5  1003               	clrc
  6096  1FB6  0DF0               	rlf	__div_to_l_@f1,f
  6097  1FB7  0DF1               	rlf	__div_to_l_@f1+1,f
  6098  1FB8  0DF2               	rlf	__div_to_l_@f1+2,f
  6099  1FB9  0DF3               	rlf	__div_to_l_@f1+3,f
  6100  1FBA  0BF8               	decfsz	??__div_to_l_,f
  6101  1FBB  2FB5               	goto	u4645
  6102  1FBC                     l3080:
  6103  1FBC  3001               	movlw	1
  6104  1FBD  02A4               	subwf	__div_to_l_@cntr,f
  6105  1FBE  1D03               	btfss	3,2
  6106  1FBF  2FC1               	goto	u4651
  6107  1FC0  2FC2               	goto	u4650
  6108  1FC1                     u4651:
  6109  1FC1  2F89               	goto	l3070
  6110  1FC2                     u4650:
  6111  1FC2                     l587:
  6112  1FC2  1FA5               	btfss	__div_to_l_@exp1,7
  6113  1FC3  2FC5               	goto	u4661
  6114  1FC4  2FC6               	goto	u4660
  6115  1FC5                     u4661:
  6116  1FC5  2FE0               	goto	l3090
  6117  1FC6                     u4660:
  6118  1FC6                     l3082:
  6119  1FC6  0825               	movf	__div_to_l_@exp1,w
  6120  1FC7  3A80               	xorlw	128
  6121  1FC8  3E9F               	addlw	159
  6122  1FC9  1803               	skipnc
  6123  1FCA  2FCC               	goto	u4671
  6124  1FCB  2FCD               	goto	u4670
  6125  1FCC                     u4671:
  6126  1FCC  2FCE               	goto	l3088
  6127  1FCD                     u4670:
  6128  1FCD  2F4F               	goto	l3052
  6129  1FCE                     l3088:
  6130  1FCE  3001               	movlw	1
  6131  1FCF                     u4685:
  6132  1FCF  1003               	clrc
  6133  1FD0  0CA3               	rrf	__div_to_l_@quot+3,f
  6134  1FD1  0CA2               	rrf	__div_to_l_@quot+2,f
  6135  1FD2  0CA1               	rrf	__div_to_l_@quot+1,f
  6136  1FD3  0CA0               	rrf	__div_to_l_@quot,f
  6137  1FD4  3EFF               	addlw	-1
  6138  1FD5  1D03               	skipz
  6139  1FD6  2FCF               	goto	u4685
  6140  1FD7  3001               	movlw	1
  6141  1FD8  00F8               	movwf	??__div_to_l_
  6142  1FD9  0878               	movf	??__div_to_l_,w
  6143  1FDA  07A5               	addwf	__div_to_l_@exp1,f
  6144  1FDB  1D03               	btfss	3,2
  6145  1FDC  2FDE               	goto	u4691
  6146  1FDD  2FDF               	goto	u4690
  6147  1FDE                     u4691:
  6148  1FDE  2FCE               	goto	l3088
  6149  1FDF                     u4690:
  6150  1FDF  2FF7               	goto	l3098
  6151  1FE0                     l3090:
  6152  1FE0  3020               	movlw	32
  6153  1FE1  0225               	subwf	__div_to_l_@exp1,w
  6154  1FE2  1C03               	skipc
  6155  1FE3  2FE5               	goto	u4701
  6156  1FE4  2FE6               	goto	u4700
  6157  1FE5                     u4701:
  6158  1FE5  2FF2               	goto	l594
  6159  1FE6                     u4700:
  6160  1FE6  2F4F               	goto	l3052
  6161  1FE7                     l3096:
  6162  1FE7  3001               	movlw	1
  6163  1FE8  00F8               	movwf	??__div_to_l_
  6164  1FE9                     u4715:
  6165  1FE9  1003               	clrc
  6166  1FEA  0DA0               	rlf	__div_to_l_@quot,f
  6167  1FEB  0DA1               	rlf	__div_to_l_@quot+1,f
  6168  1FEC  0DA2               	rlf	__div_to_l_@quot+2,f
  6169  1FED  0DA3               	rlf	__div_to_l_@quot+3,f
  6170  1FEE  0BF8               	decfsz	??__div_to_l_,f
  6171  1FEF  2FE9               	goto	u4715
  6172  1FF0  3001               	movlw	1
  6173  1FF1  02A5               	subwf	__div_to_l_@exp1,f
  6174  1FF2                     l594:
  6175  1FF2  0825               	movf	__div_to_l_@exp1,w
  6176  1FF3  1D03               	btfss	3,2
  6177  1FF4  2FF6               	goto	u4721
  6178  1FF5  2FF7               	goto	u4720
  6179  1FF6                     u4721:
  6180  1FF6  2FE7               	goto	l3096
  6181  1FF7                     u4720:
  6182  1FF7                     l3098:
  6183  1FF7  0823               	movf	__div_to_l_@quot+3,w
  6184  1FF8  00F3               	movwf	?__div_to_l_+3
  6185  1FF9  0822               	movf	__div_to_l_@quot+2,w
  6186  1FFA  00F2               	movwf	?__div_to_l_+2
  6187  1FFB  0821               	movf	__div_to_l_@quot+1,w
  6188  1FFC  00F1               	movwf	?__div_to_l_+1
  6189  1FFD  0820               	movf	__div_to_l_@quot,w
  6190  1FFE  00F0               	movwf	?__div_to_l_
  6191  1FFF                     l583:
  6192  1FFF  0008               	return
  6193  2000                     __end_of__div_to_l_:
  6194                           
  6195                           	psect	text15
  6196  1DCB                     __ptext15:	
  6197 ;; *************** function ___xxtofl *****************
  6198 ;; Defined at:
  6199 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  sign            1    wreg     unsigned char 
  6202 ;;  val             4    0[COMMON] long 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  sign            1    8[COMMON] unsigned char 
  6205 ;;  arg             4   10[COMMON] unsigned long 
  6206 ;;  exp             1    9[COMMON] unsigned char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  4    0[COMMON] unsigned char 
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, status,0
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6216 ;;      Params:         4       0       0       0       0
  6217 ;;      Locals:         6       0       0       0       0
  6218 ;;      Temps:          4       0       0       0       0
  6219 ;;      Totals:        14       0       0       0       0
  6220 ;;Total ram usage:       14 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; This function calls:
  6223 ;;		Nothing
  6224 ;; This function is called by:
  6225 ;;		_main
  6226 ;;		_sprintf
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           
  6231                           ;psect for function ___xxtofl
  6232  1DCB                     ___xxtofl:
  6233                           
  6234                           ;incstack = 0
  6235                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6236                           ;___xxtofl@sign stored from wreg
  6237  1DCB  00F8               	movwf	___xxtofl@sign
  6238  1DCC                     l3242:
  6239  1DCC  0878               	movf	___xxtofl@sign,w
  6240  1DCD  1903               	btfsc	3,2
  6241  1DCE  2DD0               	goto	u5111
  6242  1DCF  2DD1               	goto	u5110
  6243  1DD0                     u5111:
  6244  1DD0  2DE5               	goto	l3248
  6245  1DD1                     u5110:
  6246  1DD1                     l3244:
  6247  1DD1  1FF3               	btfss	___xxtofl@val+3,7
  6248  1DD2  2DD4               	goto	u5121
  6249  1DD3  2DD5               	goto	u5120
  6250  1DD4                     u5121:
  6251  1DD4  2DE5               	goto	l3248
  6252  1DD5                     u5120:
  6253  1DD5                     l3246:
  6254  1DD5  0970               	comf	___xxtofl@val,w
  6255  1DD6  00FA               	movwf	___xxtofl@arg
  6256  1DD7  0971               	comf	___xxtofl@val+1,w
  6257  1DD8  00FB               	movwf	___xxtofl@arg+1
  6258  1DD9  0972               	comf	___xxtofl@val+2,w
  6259  1DDA  00FC               	movwf	___xxtofl@arg+2
  6260  1DDB  0973               	comf	___xxtofl@val+3,w
  6261  1DDC  00FD               	movwf	___xxtofl@arg+3
  6262  1DDD  0AFA               	incf	___xxtofl@arg,f
  6263  1DDE  1903               	skipnz
  6264  1DDF  0AFB               	incf	___xxtofl@arg+1,f
  6265  1DE0  1903               	skipnz
  6266  1DE1  0AFC               	incf	___xxtofl@arg+2,f
  6267  1DE2  1903               	skipnz
  6268  1DE3  0AFD               	incf	___xxtofl@arg+3,f
  6269  1DE4  2DED               	goto	l880
  6270  1DE5                     l3248:
  6271  1DE5  0873               	movf	___xxtofl@val+3,w
  6272  1DE6  00FD               	movwf	___xxtofl@arg+3
  6273  1DE7  0872               	movf	___xxtofl@val+2,w
  6274  1DE8  00FC               	movwf	___xxtofl@arg+2
  6275  1DE9  0871               	movf	___xxtofl@val+1,w
  6276  1DEA  00FB               	movwf	___xxtofl@arg+1
  6277  1DEB  0870               	movf	___xxtofl@val,w
  6278  1DEC  00FA               	movwf	___xxtofl@arg
  6279  1DED                     l880:
  6280  1DED  0873               	movf	___xxtofl@val+3,w
  6281  1DEE  0472               	iorwf	___xxtofl@val+2,w
  6282  1DEF  0471               	iorwf	___xxtofl@val+1,w
  6283  1DF0  0470               	iorwf	___xxtofl@val,w
  6284  1DF1  1D03               	skipz
  6285  1DF2  2DF4               	goto	u5131
  6286  1DF3  2DF5               	goto	u5130
  6287  1DF4                     u5131:
  6288  1DF4  2DFE               	goto	l3254
  6289  1DF5                     u5130:
  6290  1DF5                     l3250:
  6291  1DF5  3000               	movlw	0
  6292  1DF6  00F3               	movwf	?___xxtofl+3
  6293  1DF7  3000               	movlw	0
  6294  1DF8  00F2               	movwf	?___xxtofl+2
  6295  1DF9  3000               	movlw	0
  6296  1DFA  00F1               	movwf	?___xxtofl+1
  6297  1DFB  3000               	movlw	0
  6298  1DFC  00F0               	movwf	?___xxtofl
  6299  1DFD  2E84               	goto	l882
  6300  1DFE                     l3254:
  6301  1DFE  3096               	movlw	150
  6302  1DFF  00F4               	movwf	??___xxtofl
  6303  1E00  0874               	movf	??___xxtofl,w
  6304  1E01  00F9               	movwf	___xxtofl@exp
  6305  1E02  2E10               	goto	l3258
  6306  1E03                     l3256:
  6307  1E03  3001               	movlw	1
  6308  1E04  00F4               	movwf	??___xxtofl
  6309  1E05  0874               	movf	??___xxtofl,w
  6310  1E06  07F9               	addwf	___xxtofl@exp,f
  6311  1E07  3001               	movlw	1
  6312  1E08                     u5145:
  6313  1E08  1003               	clrc
  6314  1E09  0CFD               	rrf	___xxtofl@arg+3,f
  6315  1E0A  0CFC               	rrf	___xxtofl@arg+2,f
  6316  1E0B  0CFB               	rrf	___xxtofl@arg+1,f
  6317  1E0C  0CFA               	rrf	___xxtofl@arg,f
  6318  1E0D  3EFF               	addlw	-1
  6319  1E0E  1D03               	skipz
  6320  1E0F  2E08               	goto	u5145
  6321  1E10                     l3258:
  6322  1E10  30FE               	movlw	254
  6323  1E11  057D               	andwf	___xxtofl@arg+3,w
  6324  1E12  1D03               	btfss	3,2
  6325  1E13  2E15               	goto	u5151
  6326  1E14  2E16               	goto	u5150
  6327  1E15                     u5151:
  6328  1E15  2E03               	goto	l3256
  6329  1E16                     u5150:
  6330  1E16  2E32               	goto	l886
  6331  1E17                     l3260:
  6332  1E17  3001               	movlw	1
  6333  1E18  00F4               	movwf	??___xxtofl
  6334  1E19  0874               	movf	??___xxtofl,w
  6335  1E1A  07F9               	addwf	___xxtofl@exp,f
  6336  1E1B                     l3262:
  6337  1E1B  3001               	movlw	1
  6338  1E1C  07FA               	addwf	___xxtofl@arg,f
  6339  1E1D  3000               	movlw	0
  6340  1E1E  1803               	skipnc
  6341  1E1F  3001               	movlw	1
  6342  1E20  07FB               	addwf	___xxtofl@arg+1,f
  6343  1E21  3000               	movlw	0
  6344  1E22  1803               	skipnc
  6345  1E23  3001               	movlw	1
  6346  1E24  07FC               	addwf	___xxtofl@arg+2,f
  6347  1E25  3000               	movlw	0
  6348  1E26  1803               	skipnc
  6349  1E27  3001               	movlw	1
  6350  1E28  07FD               	addwf	___xxtofl@arg+3,f
  6351  1E29                     l3264:
  6352  1E29  3001               	movlw	1
  6353  1E2A                     u5165:
  6354  1E2A  1003               	clrc
  6355  1E2B  0CFD               	rrf	___xxtofl@arg+3,f
  6356  1E2C  0CFC               	rrf	___xxtofl@arg+2,f
  6357  1E2D  0CFB               	rrf	___xxtofl@arg+1,f
  6358  1E2E  0CFA               	rrf	___xxtofl@arg,f
  6359  1E2F  3EFF               	addlw	-1
  6360  1E30  1D03               	skipz
  6361  1E31  2E2A               	goto	u5165
  6362  1E32                     l886:
  6363  1E32  30FF               	movlw	255
  6364  1E33  057D               	andwf	___xxtofl@arg+3,w
  6365  1E34  1D03               	btfss	3,2
  6366  1E35  2E37               	goto	u5171
  6367  1E36  2E38               	goto	u5170
  6368  1E37                     u5171:
  6369  1E37  2E17               	goto	l3260
  6370  1E38                     u5170:
  6371  1E38  2E44               	goto	l3268
  6372  1E39                     l3266:
  6373  1E39  3001               	movlw	1
  6374  1E3A  02F9               	subwf	___xxtofl@exp,f
  6375  1E3B  3001               	movlw	1
  6376  1E3C  00F4               	movwf	??___xxtofl
  6377  1E3D                     u5185:
  6378  1E3D  1003               	clrc
  6379  1E3E  0DFA               	rlf	___xxtofl@arg,f
  6380  1E3F  0DFB               	rlf	___xxtofl@arg+1,f
  6381  1E40  0DFC               	rlf	___xxtofl@arg+2,f
  6382  1E41  0DFD               	rlf	___xxtofl@arg+3,f
  6383  1E42  0BF4               	decfsz	??___xxtofl,f
  6384  1E43  2E3D               	goto	u5185
  6385  1E44                     l3268:
  6386  1E44  1BFC               	btfsc	___xxtofl@arg+2,7
  6387  1E45  2E47               	goto	u5191
  6388  1E46  2E48               	goto	u5190
  6389  1E47                     u5191:
  6390  1E47  2E4E               	goto	l893
  6391  1E48                     u5190:
  6392  1E48                     l3270:
  6393  1E48  3002               	movlw	2
  6394  1E49  0279               	subwf	___xxtofl@exp,w
  6395  1E4A  1803               	skipnc
  6396  1E4B  2E4D               	goto	u5201
  6397  1E4C  2E4E               	goto	u5200
  6398  1E4D                     u5201:
  6399  1E4D  2E39               	goto	l3266
  6400  1E4E                     u5200:
  6401  1E4E                     l893:
  6402  1E4E  1879               	btfsc	___xxtofl@exp,0
  6403  1E4F  2E51               	goto	u5211
  6404  1E50  2E52               	goto	u5210
  6405  1E51                     u5211:
  6406  1E51  2E5A               	goto	l894
  6407  1E52                     u5210:
  6408  1E52                     l3272:
  6409  1E52  30FF               	movlw	255
  6410  1E53  05FA               	andwf	___xxtofl@arg,f
  6411  1E54  30FF               	movlw	255
  6412  1E55  05FB               	andwf	___xxtofl@arg+1,f
  6413  1E56  307F               	movlw	127
  6414  1E57  05FC               	andwf	___xxtofl@arg+2,f
  6415  1E58  30FF               	movlw	255
  6416  1E59  05FD               	andwf	___xxtofl@arg+3,f
  6417  1E5A                     l894:
  6418  1E5A  1003               	clrc
  6419  1E5B  0CF9               	rrf	___xxtofl@exp,f
  6420  1E5C                     l3274:
  6421  1E5C  0879               	movf	___xxtofl@exp,w
  6422  1E5D  00F4               	movwf	??___xxtofl
  6423  1E5E  01F5               	clrf	??___xxtofl+1
  6424  1E5F  01F6               	clrf	??___xxtofl+2
  6425  1E60  01F7               	clrf	??___xxtofl+3
  6426  1E61  3018               	movlw	24
  6427  1E62                     u5225:
  6428  1E62  1003               	clrc
  6429  1E63  0DF4               	rlf	??___xxtofl,f
  6430  1E64  0DF5               	rlf	??___xxtofl+1,f
  6431  1E65  0DF6               	rlf	??___xxtofl+2,f
  6432  1E66  0DF7               	rlf	??___xxtofl+3,f
  6433  1E67                     u5220:
  6434  1E67  3EFF               	addlw	-1
  6435  1E68  1D03               	skipz
  6436  1E69  2E62               	goto	u5225
  6437  1E6A  0874               	movf	??___xxtofl,w
  6438  1E6B  04FA               	iorwf	___xxtofl@arg,f
  6439  1E6C  0875               	movf	??___xxtofl+1,w
  6440  1E6D  04FB               	iorwf	___xxtofl@arg+1,f
  6441  1E6E  0876               	movf	??___xxtofl+2,w
  6442  1E6F  04FC               	iorwf	___xxtofl@arg+2,f
  6443  1E70  0877               	movf	??___xxtofl+3,w
  6444  1E71  04FD               	iorwf	___xxtofl@arg+3,f
  6445  1E72                     l3276:
  6446  1E72  0878               	movf	___xxtofl@sign,w
  6447  1E73  1903               	btfsc	3,2
  6448  1E74  2E76               	goto	u5231
  6449  1E75  2E77               	goto	u5230
  6450  1E76                     u5231:
  6451  1E76  2E7C               	goto	l3282
  6452  1E77                     u5230:
  6453  1E77                     l3278:
  6454  1E77  1FF3               	btfss	___xxtofl@val+3,7
  6455  1E78  2E7A               	goto	u5241
  6456  1E79  2E7B               	goto	u5240
  6457  1E7A                     u5241:
  6458  1E7A  2E7C               	goto	l3282
  6459  1E7B                     u5240:
  6460  1E7B                     l3280:
  6461  1E7B  17FD               	bsf	___xxtofl@arg+3,7
  6462  1E7C                     l3282:
  6463  1E7C  087D               	movf	___xxtofl@arg+3,w
  6464  1E7D  00F3               	movwf	?___xxtofl+3
  6465  1E7E  087C               	movf	___xxtofl@arg+2,w
  6466  1E7F  00F2               	movwf	?___xxtofl+2
  6467  1E80  087B               	movf	___xxtofl@arg+1,w
  6468  1E81  00F1               	movwf	?___xxtofl+1
  6469  1E82  087A               	movf	___xxtofl@arg,w
  6470  1E83  00F0               	movwf	?___xxtofl
  6471  1E84                     l882:
  6472  1E84  0008               	return
  6473  1E85                     __end_of___xxtofl:
  6474                           
  6475                           	psect	text16
  6476  1A4F                     __ptext16:	
  6477 ;; *************** function ___wmul *****************
  6478 ;; Defined at:
  6479 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  multiplier      2    0[COMMON] unsigned int 
  6482 ;;  multiplicand    2    2[COMMON] unsigned int 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  product         2    4[COMMON] unsigned int 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  2    0[COMMON] unsigned int 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6494 ;;      Params:         4       0       0       0       0
  6495 ;;      Locals:         2       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0
  6497 ;;      Totals:         6       0       0       0       0
  6498 ;;Total ram usage:        6 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_sprintf
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           
  6508                           ;psect for function ___wmul
  6509  1A4F                     ___wmul:
  6510  1A4F                     l3102:	
  6511                           ;incstack = 0
  6512                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6513                           
  6514  1A4F  01F4               	clrf	___wmul@product
  6515  1A50  01F5               	clrf	___wmul@product+1
  6516  1A51                     l3104:
  6517  1A51  1C70               	btfss	___wmul@multiplier,0
  6518  1A52  2A54               	goto	u4731
  6519  1A53  2A55               	goto	u4730
  6520  1A54                     u4731:
  6521  1A54  2A5B               	goto	l413
  6522  1A55                     u4730:
  6523  1A55                     l3106:
  6524  1A55  0872               	movf	___wmul@multiplicand,w
  6525  1A56  07F4               	addwf	___wmul@product,f
  6526  1A57  1803               	skipnc
  6527  1A58  0AF5               	incf	___wmul@product+1,f
  6528  1A59  0873               	movf	___wmul@multiplicand+1,w
  6529  1A5A  07F5               	addwf	___wmul@product+1,f
  6530  1A5B                     l413:
  6531  1A5B  3001               	movlw	1
  6532  1A5C                     u4745:
  6533  1A5C  1003               	clrc
  6534  1A5D  0DF2               	rlf	___wmul@multiplicand,f
  6535  1A5E  0DF3               	rlf	___wmul@multiplicand+1,f
  6536  1A5F  3EFF               	addlw	-1
  6537  1A60  1D03               	skipz
  6538  1A61  2A5C               	goto	u4745
  6539  1A62                     l3108:
  6540  1A62  3001               	movlw	1
  6541  1A63                     u4755:
  6542  1A63  1003               	clrc
  6543  1A64  0CF1               	rrf	___wmul@multiplier+1,f
  6544  1A65  0CF0               	rrf	___wmul@multiplier,f
  6545  1A66  3EFF               	addlw	-1
  6546  1A67  1D03               	skipz
  6547  1A68  2A63               	goto	u4755
  6548  1A69                     l3110:
  6549  1A69  0870               	movf	___wmul@multiplier,w
  6550  1A6A  0471               	iorwf	___wmul@multiplier+1,w
  6551  1A6B  1D03               	btfss	3,2
  6552  1A6C  2A6E               	goto	u4761
  6553  1A6D  2A6F               	goto	u4760
  6554  1A6E                     u4761:
  6555  1A6E  2A51               	goto	l3104
  6556  1A6F                     u4760:
  6557  1A6F                     l3112:
  6558  1A6F  0875               	movf	___wmul@product+1,w
  6559  1A70  00F1               	movwf	?___wmul+1
  6560  1A71  0874               	movf	___wmul@product,w
  6561  1A72  00F0               	movwf	?___wmul
  6562  1A73                     l415:
  6563  1A73  0008               	return
  6564  1A74                     __end_of___wmul:
  6565                           
  6566                           	psect	text17
  6567  1BE7                     __ptext17:	
  6568 ;; *************** function ___llmod *****************
  6569 ;; Defined at:
  6570 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  divisor         4    0[BANK0 ] unsigned long 
  6573 ;;  dividend        4    4[BANK0 ] unsigned long 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  counter         1    9[BANK0 ] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  4    0[BANK0 ] unsigned long 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6585 ;;      Params:         0       8       0       0       0
  6586 ;;      Locals:         0       1       0       0       0
  6587 ;;      Temps:          0       1       0       0       0
  6588 ;;      Totals:         0      10       0       0       0
  6589 ;;Total ram usage:       10 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_sprintf
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           
  6599                           ;psect for function ___llmod
  6600  1BE7                     ___llmod:
  6601  1BE7                     l3216:	
  6602                           ;incstack = 0
  6603                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6604                           
  6605  1BE7  1283               	bcf	3,5	;RP0=0, select bank0
  6606  1BE8  1303               	bcf	3,6	;RP1=0, select bank0
  6607  1BE9  0823               	movf	___llmod@divisor+3,w
  6608  1BEA  0422               	iorwf	___llmod@divisor+2,w
  6609  1BEB  0421               	iorwf	___llmod@divisor+1,w
  6610  1BEC  0420               	iorwf	___llmod@divisor,w
  6611  1BED  1903               	skipnz
  6612  1BEE  2BF0               	goto	u5051
  6613  1BEF  2BF1               	goto	u5050
  6614  1BF0                     u5051:
  6615  1BF0  2C34               	goto	l3232
  6616  1BF1                     u5050:
  6617  1BF1                     l3218:
  6618  1BF1  01A9               	clrf	___llmod@counter
  6619  1BF2  0AA9               	incf	___llmod@counter,f
  6620  1BF3  2C01               	goto	l3222
  6621  1BF4                     l3220:
  6622  1BF4  3001               	movlw	1
  6623  1BF5  00A8               	movwf	??___llmod
  6624  1BF6                     u5065:
  6625  1BF6  1003               	clrc
  6626  1BF7  0DA0               	rlf	___llmod@divisor,f
  6627  1BF8  0DA1               	rlf	___llmod@divisor+1,f
  6628  1BF9  0DA2               	rlf	___llmod@divisor+2,f
  6629  1BFA  0DA3               	rlf	___llmod@divisor+3,f
  6630  1BFB  0BA8               	decfsz	??___llmod,f
  6631  1BFC  2BF6               	goto	u5065
  6632  1BFD  3001               	movlw	1
  6633  1BFE  00A8               	movwf	??___llmod
  6634  1BFF  0828               	movf	??___llmod,w
  6635  1C00  07A9               	addwf	___llmod@counter,f
  6636  1C01                     l3222:
  6637  1C01  1FA3               	btfss	___llmod@divisor+3,7
  6638  1C02  2C04               	goto	u5071
  6639  1C03  2C05               	goto	u5070
  6640  1C04                     u5071:
  6641  1C04  2BF4               	goto	l3220
  6642  1C05                     u5070:
  6643  1C05                     l3224:
  6644  1C05  0823               	movf	___llmod@divisor+3,w
  6645  1C06  0227               	subwf	___llmod@dividend+3,w
  6646  1C07  1D03               	skipz
  6647  1C08  2C13               	goto	u5085
  6648  1C09  0822               	movf	___llmod@divisor+2,w
  6649  1C0A  0226               	subwf	___llmod@dividend+2,w
  6650  1C0B  1D03               	skipz
  6651  1C0C  2C13               	goto	u5085
  6652  1C0D  0821               	movf	___llmod@divisor+1,w
  6653  1C0E  0225               	subwf	___llmod@dividend+1,w
  6654  1C0F  1D03               	skipz
  6655  1C10  2C13               	goto	u5085
  6656  1C11  0820               	movf	___llmod@divisor,w
  6657  1C12  0224               	subwf	___llmod@dividend,w
  6658  1C13                     u5085:
  6659  1C13  1C03               	skipc
  6660  1C14  2C16               	goto	u5081
  6661  1C15  2C17               	goto	u5080
  6662  1C16                     u5081:
  6663  1C16  2C25               	goto	l3228
  6664  1C17                     u5080:
  6665  1C17                     l3226:
  6666  1C17  0820               	movf	___llmod@divisor,w
  6667  1C18  02A4               	subwf	___llmod@dividend,f
  6668  1C19  0821               	movf	___llmod@divisor+1,w
  6669  1C1A  1C03               	skipc
  6670  1C1B  0F21               	incfsz	___llmod@divisor+1,w
  6671  1C1C  02A5               	subwf	___llmod@dividend+1,f
  6672  1C1D  0822               	movf	___llmod@divisor+2,w
  6673  1C1E  1C03               	skipc
  6674  1C1F  0F22               	incfsz	___llmod@divisor+2,w
  6675  1C20  02A6               	subwf	___llmod@dividend+2,f
  6676  1C21  0823               	movf	___llmod@divisor+3,w
  6677  1C22  1C03               	skipc
  6678  1C23  0F23               	incfsz	___llmod@divisor+3,w
  6679  1C24  02A7               	subwf	___llmod@dividend+3,f
  6680  1C25                     l3228:
  6681  1C25  3001               	movlw	1
  6682  1C26                     u5095:
  6683  1C26  1003               	clrc
  6684  1C27  0CA3               	rrf	___llmod@divisor+3,f
  6685  1C28  0CA2               	rrf	___llmod@divisor+2,f
  6686  1C29  0CA1               	rrf	___llmod@divisor+1,f
  6687  1C2A  0CA0               	rrf	___llmod@divisor,f
  6688  1C2B  3EFF               	addlw	-1
  6689  1C2C  1D03               	skipz
  6690  1C2D  2C26               	goto	u5095
  6691  1C2E                     l3230:
  6692  1C2E  3001               	movlw	1
  6693  1C2F  02A9               	subwf	___llmod@counter,f
  6694  1C30  1D03               	btfss	3,2
  6695  1C31  2C33               	goto	u5101
  6696  1C32  2C34               	goto	u5100
  6697  1C33                     u5101:
  6698  1C33  2C05               	goto	l3224
  6699  1C34                     u5100:
  6700  1C34                     l3232:
  6701  1C34  0827               	movf	___llmod@dividend+3,w
  6702  1C35  00A3               	movwf	?___llmod+3
  6703  1C36  0826               	movf	___llmod@dividend+2,w
  6704  1C37  00A2               	movwf	?___llmod+2
  6705  1C38  0825               	movf	___llmod@dividend+1,w
  6706  1C39  00A1               	movwf	?___llmod+1
  6707  1C3A  0824               	movf	___llmod@dividend,w
  6708  1C3B  00A0               	movwf	?___llmod
  6709  1C3C                     l669:
  6710  1C3C  0008               	return
  6711  1C3D                     __end_of___llmod:
  6712                           
  6713                           	psect	text18
  6714  1CFC                     __ptext18:	
  6715 ;; *************** function ___lldiv *****************
  6716 ;; Defined at:
  6717 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  divisor         4    0[COMMON] unsigned long 
  6720 ;;  dividend        4    4[COMMON] unsigned long 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  quotient        4    9[COMMON] unsigned long 
  6723 ;;  counter         1   13[COMMON] unsigned char 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  4    0[COMMON] unsigned long 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6733 ;;      Params:         8       0       0       0       0
  6734 ;;      Locals:         5       0       0       0       0
  6735 ;;      Temps:          1       0       0       0       0
  6736 ;;      Totals:        14       0       0       0       0
  6737 ;;Total ram usage:       14 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_sprintf
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function ___lldiv
  6748  1CFC                     ___lldiv:
  6749  1CFC                     l3116:	
  6750                           ;incstack = 0
  6751                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6752                           
  6753  1CFC  3000               	movlw	0
  6754  1CFD  00FC               	movwf	___lldiv@quotient+3
  6755  1CFE  3000               	movlw	0
  6756  1CFF  00FB               	movwf	___lldiv@quotient+2
  6757  1D00  3000               	movlw	0
  6758  1D01  00FA               	movwf	___lldiv@quotient+1
  6759  1D02  3000               	movlw	0
  6760  1D03  00F9               	movwf	___lldiv@quotient
  6761  1D04  0873               	movf	___lldiv@divisor+3,w
  6762  1D05  0472               	iorwf	___lldiv@divisor+2,w
  6763  1D06  0471               	iorwf	___lldiv@divisor+1,w
  6764  1D07  0470               	iorwf	___lldiv@divisor,w
  6765  1D08  1903               	skipnz
  6766  1D09  2D0B               	goto	u4771
  6767  1D0A  2D0C               	goto	u4770
  6768  1D0B                     u4771:
  6769  1D0B  2D59               	goto	l3136
  6770  1D0C                     u4770:
  6771  1D0C                     l3118:
  6772  1D0C  01FD               	clrf	___lldiv@counter
  6773  1D0D  0AFD               	incf	___lldiv@counter,f
  6774  1D0E  2D1C               	goto	l3122
  6775  1D0F                     l3120:
  6776  1D0F  3001               	movlw	1
  6777  1D10  00F8               	movwf	??___lldiv
  6778  1D11                     u4785:
  6779  1D11  1003               	clrc
  6780  1D12  0DF0               	rlf	___lldiv@divisor,f
  6781  1D13  0DF1               	rlf	___lldiv@divisor+1,f
  6782  1D14  0DF2               	rlf	___lldiv@divisor+2,f
  6783  1D15  0DF3               	rlf	___lldiv@divisor+3,f
  6784  1D16  0BF8               	decfsz	??___lldiv,f
  6785  1D17  2D11               	goto	u4785
  6786  1D18  3001               	movlw	1
  6787  1D19  00F8               	movwf	??___lldiv
  6788  1D1A  0878               	movf	??___lldiv,w
  6789  1D1B  07FD               	addwf	___lldiv@counter,f
  6790  1D1C                     l3122:
  6791  1D1C  1FF3               	btfss	___lldiv@divisor+3,7
  6792  1D1D  2D1F               	goto	u4791
  6793  1D1E  2D20               	goto	u4790
  6794  1D1F                     u4791:
  6795  1D1F  2D0F               	goto	l3120
  6796  1D20                     u4790:
  6797  1D20                     l3124:
  6798  1D20  3001               	movlw	1
  6799  1D21  00F8               	movwf	??___lldiv
  6800  1D22                     u4805:
  6801  1D22  1003               	clrc
  6802  1D23  0DF9               	rlf	___lldiv@quotient,f
  6803  1D24  0DFA               	rlf	___lldiv@quotient+1,f
  6804  1D25  0DFB               	rlf	___lldiv@quotient+2,f
  6805  1D26  0DFC               	rlf	___lldiv@quotient+3,f
  6806  1D27  0BF8               	decfsz	??___lldiv,f
  6807  1D28  2D22               	goto	u4805
  6808  1D29                     l3126:
  6809  1D29  0873               	movf	___lldiv@divisor+3,w
  6810  1D2A  0277               	subwf	___lldiv@dividend+3,w
  6811  1D2B  1D03               	skipz
  6812  1D2C  2D37               	goto	u4815
  6813  1D2D  0872               	movf	___lldiv@divisor+2,w
  6814  1D2E  0276               	subwf	___lldiv@dividend+2,w
  6815  1D2F  1D03               	skipz
  6816  1D30  2D37               	goto	u4815
  6817  1D31  0871               	movf	___lldiv@divisor+1,w
  6818  1D32  0275               	subwf	___lldiv@dividend+1,w
  6819  1D33  1D03               	skipz
  6820  1D34  2D37               	goto	u4815
  6821  1D35  0870               	movf	___lldiv@divisor,w
  6822  1D36  0274               	subwf	___lldiv@dividend,w
  6823  1D37                     u4815:
  6824  1D37  1C03               	skipc
  6825  1D38  2D3A               	goto	u4811
  6826  1D39  2D3B               	goto	u4810
  6827  1D3A                     u4811:
  6828  1D3A  2D4A               	goto	l3132
  6829  1D3B                     u4810:
  6830  1D3B                     l3128:
  6831  1D3B  0870               	movf	___lldiv@divisor,w
  6832  1D3C  02F4               	subwf	___lldiv@dividend,f
  6833  1D3D  0871               	movf	___lldiv@divisor+1,w
  6834  1D3E  1C03               	skipc
  6835  1D3F  0F71               	incfsz	___lldiv@divisor+1,w
  6836  1D40  02F5               	subwf	___lldiv@dividend+1,f
  6837  1D41  0872               	movf	___lldiv@divisor+2,w
  6838  1D42  1C03               	skipc
  6839  1D43  0F72               	incfsz	___lldiv@divisor+2,w
  6840  1D44  02F6               	subwf	___lldiv@dividend+2,f
  6841  1D45  0873               	movf	___lldiv@divisor+3,w
  6842  1D46  1C03               	skipc
  6843  1D47  0F73               	incfsz	___lldiv@divisor+3,w
  6844  1D48  02F7               	subwf	___lldiv@dividend+3,f
  6845  1D49                     l3130:
  6846  1D49  1479               	bsf	___lldiv@quotient,0
  6847  1D4A                     l3132:
  6848  1D4A  3001               	movlw	1
  6849  1D4B                     u4825:
  6850  1D4B  1003               	clrc
  6851  1D4C  0CF3               	rrf	___lldiv@divisor+3,f
  6852  1D4D  0CF2               	rrf	___lldiv@divisor+2,f
  6853  1D4E  0CF1               	rrf	___lldiv@divisor+1,f
  6854  1D4F  0CF0               	rrf	___lldiv@divisor,f
  6855  1D50  3EFF               	addlw	-1
  6856  1D51  1D03               	skipz
  6857  1D52  2D4B               	goto	u4825
  6858  1D53                     l3134:
  6859  1D53  3001               	movlw	1
  6860  1D54  02FD               	subwf	___lldiv@counter,f
  6861  1D55  1D03               	btfss	3,2
  6862  1D56  2D58               	goto	u4831
  6863  1D57  2D59               	goto	u4830
  6864  1D58                     u4831:
  6865  1D58  2D20               	goto	l3124
  6866  1D59                     u4830:
  6867  1D59                     l3136:
  6868  1D59  087C               	movf	___lldiv@quotient+3,w
  6869  1D5A  00F3               	movwf	?___lldiv+3
  6870  1D5B  087B               	movf	___lldiv@quotient+2,w
  6871  1D5C  00F2               	movwf	?___lldiv+2
  6872  1D5D  087A               	movf	___lldiv@quotient+1,w
  6873  1D5E  00F1               	movwf	?___lldiv+1
  6874  1D5F  0879               	movf	___lldiv@quotient,w
  6875  1D60  00F0               	movwf	?___lldiv
  6876  1D61                     l449:
  6877  1D61  0008               	return
  6878  1D62                     __end_of___lldiv:
  6879                           
  6880                           	psect	text19
  6881  08C4                     __ptext19:	
  6882 ;; *************** function ___fltol *****************
  6883 ;; Defined at:
  6884 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;  f1              4   49[BANK0 ] unsigned long 
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;  exp1            1   59[BANK0 ] unsigned char 
  6889 ;;  sign1           1   58[BANK0 ] unsigned char 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  4   49[BANK0 ] long 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6899 ;;      Params:         0       4       0       0       0
  6900 ;;      Locals:         0       2       0       0       0
  6901 ;;      Temps:          0       5       0       0       0
  6902 ;;      Totals:         0      11       0       0       0
  6903 ;;Total ram usage:       11 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_sprintf
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           
  6913                           ;psect for function ___fltol
  6914  08C4                     ___fltol:
  6915  08C4                     l3180:	
  6916                           ;incstack = 0
  6917                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6918                           
  6919  08C4  1003               	clrc
  6920  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  6921  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  6922  08C7  0D53               	rlf	___fltol@f1+2,w
  6923  08C8  0D54               	rlf	___fltol@f1+3,w
  6924  08C9  00D5               	movwf	??___fltol
  6925  08CA  0855               	movf	??___fltol,w
  6926  08CB  00DB               	movwf	___fltol@exp1
  6927  08CC  085B               	movf	___fltol@exp1,w
  6928  08CD  1D03               	btfss	3,2
  6929  08CE  28D0               	goto	u4951
  6930  08CF  28D1               	goto	u4950
  6931  08D0                     u4951:
  6932  08D0  28DA               	goto	l3186
  6933  08D1                     u4950:
  6934  08D1                     l3182:
  6935  08D1  3000               	movlw	0
  6936  08D2  00D4               	movwf	?___fltol+3
  6937  08D3  3000               	movlw	0
  6938  08D4  00D3               	movwf	?___fltol+2
  6939  08D5  3000               	movlw	0
  6940  08D6  00D2               	movwf	?___fltol+1
  6941  08D7  3000               	movlw	0
  6942  08D8  00D1               	movwf	?___fltol
  6943  08D9  293F               	goto	l616
  6944  08DA                     l3186:
  6945  08DA  0851               	movf	___fltol@f1,w
  6946  08DB  00D5               	movwf	??___fltol
  6947  08DC  0852               	movf	___fltol@f1+1,w
  6948  08DD  00D6               	movwf	??___fltol+1
  6949  08DE  0853               	movf	___fltol@f1+2,w
  6950  08DF  00D7               	movwf	??___fltol+2
  6951  08E0  0854               	movf	___fltol@f1+3,w
  6952  08E1  00D8               	movwf	??___fltol+3
  6953  08E2  301F               	movlw	31
  6954  08E3                     u4965:
  6955  08E3  1003               	clrc
  6956  08E4  0CD8               	rrf	??___fltol+3,f
  6957  08E5  0CD7               	rrf	??___fltol+2,f
  6958  08E6  0CD6               	rrf	??___fltol+1,f
  6959  08E7  0CD5               	rrf	??___fltol,f
  6960  08E8                     u4960:
  6961  08E8  3EFF               	addlw	-1
  6962  08E9  1D03               	skipz
  6963  08EA  28E3               	goto	u4965
  6964  08EB  0855               	movf	??___fltol,w
  6965  08EC  00D9               	movwf	??___fltol+4
  6966  08ED  0859               	movf	??___fltol+4,w
  6967  08EE  00DA               	movwf	___fltol@sign1
  6968  08EF                     l3188:
  6969  08EF  17D3               	bsf	___fltol@f1+2,7
  6970  08F0                     l3190:
  6971  08F0  30FF               	movlw	255
  6972  08F1  05D1               	andwf	___fltol@f1,f
  6973  08F2  30FF               	movlw	255
  6974  08F3  05D2               	andwf	___fltol@f1+1,f
  6975  08F4  30FF               	movlw	255
  6976  08F5  05D3               	andwf	___fltol@f1+2,f
  6977  08F6  3000               	movlw	0
  6978  08F7  05D4               	andwf	___fltol@f1+3,f
  6979  08F8                     l3192:
  6980  08F8  3096               	movlw	150
  6981  08F9  02DB               	subwf	___fltol@exp1,f
  6982  08FA                     l3194:
  6983  08FA  1FDB               	btfss	___fltol@exp1,7
  6984  08FB  28FD               	goto	u4971
  6985  08FC  28FE               	goto	u4970
  6986  08FD                     u4971:
  6987  08FD  2918               	goto	l3204
  6988  08FE                     u4970:
  6989  08FE                     l3196:
  6990  08FE  085B               	movf	___fltol@exp1,w
  6991  08FF  3A80               	xorlw	128
  6992  0900  3E97               	addlw	151
  6993  0901  1803               	skipnc
  6994  0902  2904               	goto	u4981
  6995  0903  2905               	goto	u4980
  6996  0904                     u4981:
  6997  0904  2906               	goto	l3202
  6998  0905                     u4980:
  6999  0905  28D1               	goto	l3182
  7000  0906                     l3202:
  7001  0906  3001               	movlw	1
  7002  0907                     u4995:
  7003  0907  1003               	clrc
  7004  0908  0CD4               	rrf	___fltol@f1+3,f
  7005  0909  0CD3               	rrf	___fltol@f1+2,f
  7006  090A  0CD2               	rrf	___fltol@f1+1,f
  7007  090B  0CD1               	rrf	___fltol@f1,f
  7008  090C  3EFF               	addlw	-1
  7009  090D  1D03               	skipz
  7010  090E  2907               	goto	u4995
  7011  090F  3001               	movlw	1
  7012  0910  00D5               	movwf	??___fltol
  7013  0911  0855               	movf	??___fltol,w
  7014  0912  07DB               	addwf	___fltol@exp1,f
  7015  0913  1D03               	btfss	3,2
  7016  0914  2916               	goto	u5001
  7017  0915  2917               	goto	u5000
  7018  0916                     u5001:
  7019  0916  2906               	goto	l3202
  7020  0917                     u5000:
  7021  0917  292F               	goto	l3212
  7022  0918                     l3204:
  7023  0918  3020               	movlw	32
  7024  0919  025B               	subwf	___fltol@exp1,w
  7025  091A  1C03               	skipc
  7026  091B  291D               	goto	u5011
  7027  091C  291E               	goto	u5010
  7028  091D                     u5011:
  7029  091D  292A               	goto	l623
  7030  091E                     u5010:
  7031  091E  28D1               	goto	l3182
  7032  091F                     l3210:
  7033  091F  3001               	movlw	1
  7034  0920  00D5               	movwf	??___fltol
  7035  0921                     u5025:
  7036  0921  1003               	clrc
  7037  0922  0DD1               	rlf	___fltol@f1,f
  7038  0923  0DD2               	rlf	___fltol@f1+1,f
  7039  0924  0DD3               	rlf	___fltol@f1+2,f
  7040  0925  0DD4               	rlf	___fltol@f1+3,f
  7041  0926  0BD5               	decfsz	??___fltol,f
  7042  0927  2921               	goto	u5025
  7043  0928  3001               	movlw	1
  7044  0929  02DB               	subwf	___fltol@exp1,f
  7045  092A                     l623:
  7046  092A  085B               	movf	___fltol@exp1,w
  7047  092B  1D03               	btfss	3,2
  7048  092C  292E               	goto	u5031
  7049  092D  292F               	goto	u5030
  7050  092E                     u5031:
  7051  092E  291F               	goto	l3210
  7052  092F                     u5030:
  7053  092F                     l3212:
  7054  092F  085A               	movf	___fltol@sign1,w
  7055  0930  1903               	btfsc	3,2
  7056  0931  2933               	goto	u5041
  7057  0932  2934               	goto	u5040
  7058  0933                     u5041:
  7059  0933  293F               	goto	l626
  7060  0934                     u5040:
  7061  0934                     l3214:
  7062  0934  09D1               	comf	___fltol@f1,f
  7063  0935  09D2               	comf	___fltol@f1+1,f
  7064  0936  09D3               	comf	___fltol@f1+2,f
  7065  0937  09D4               	comf	___fltol@f1+3,f
  7066  0938  0AD1               	incf	___fltol@f1,f
  7067  0939  1903               	skipnz
  7068  093A  0AD2               	incf	___fltol@f1+1,f
  7069  093B  1903               	skipnz
  7070  093C  0AD3               	incf	___fltol@f1+2,f
  7071  093D  1903               	skipnz
  7072  093E  0AD4               	incf	___fltol@f1+3,f
  7073  093F                     l626:
  7074  093F                     l616:
  7075  093F  0008               	return
  7076  0940                     __end_of___fltol:
  7077                           
  7078                           	psect	text20
  7079  1A2B                     __ptext20:	
  7080 ;; *************** function ___flsub *****************
  7081 ;; Defined at:
  7082 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  a               4   70[BANK0 ] long 
  7085 ;;  b               4   74[BANK0 ] long 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;		None
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  4   70[BANK0 ] long 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7097 ;;      Params:         0       8       0       0       0
  7098 ;;      Locals:         0       0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0
  7100 ;;      Totals:         0       8       0       0       0
  7101 ;;Total ram usage:        8 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    1
  7104 ;; This function calls:
  7105 ;;		___fladd
  7106 ;; This function is called by:
  7107 ;;		_sprintf
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           
  7112                           ;psect for function ___flsub
  7113  1A2B                     ___flsub:
  7114  1A2B                     l3236:	
  7115                           ;incstack = 0
  7116                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7117                           
  7118  1A2B  3080               	movlw	128
  7119  1A2C  1283               	bcf	3,5	;RP0=0, select bank0
  7120  1A2D  1303               	bcf	3,6	;RP1=0, select bank0
  7121  1A2E  06E9               	xorwf	___flsub@a+3,f
  7122  1A2F                     l3238:
  7123  1A2F  086D               	movf	___flsub@b+3,w
  7124  1A30  00D5               	movwf	___fladd@b+3
  7125  1A31  086C               	movf	___flsub@b+2,w
  7126  1A32  00D4               	movwf	___fladd@b+2
  7127  1A33  086B               	movf	___flsub@b+1,w
  7128  1A34  00D3               	movwf	___fladd@b+1
  7129  1A35  086A               	movf	___flsub@b,w
  7130  1A36  00D2               	movwf	___fladd@b
  7131  1A37  0869               	movf	___flsub@a+3,w
  7132  1A38  00D9               	movwf	___fladd@a+3
  7133  1A39  0868               	movf	___flsub@a+2,w
  7134  1A3A  00D8               	movwf	___fladd@a+2
  7135  1A3B  0867               	movf	___flsub@a+1,w
  7136  1A3C  00D7               	movwf	___fladd@a+1
  7137  1A3D  0866               	movf	___flsub@a,w
  7138  1A3E  00D6               	movwf	___fladd@a
  7139  1A3F  160A  118A  22B6  160A  158A  	fcall	___fladd
  7140  1A44  1283               	bcf	3,5	;RP0=0, select bank0
  7141  1A45  1303               	bcf	3,6	;RP1=0, select bank0
  7142  1A46  0855               	movf	?___fladd+3,w
  7143  1A47  00E9               	movwf	?___flsub+3
  7144  1A48  0854               	movf	?___fladd+2,w
  7145  1A49  00E8               	movwf	?___flsub+2
  7146  1A4A  0853               	movf	?___fladd+1,w
  7147  1A4B  00E7               	movwf	?___flsub+1
  7148  1A4C  0852               	movf	?___fladd,w
  7149  1A4D  00E6               	movwf	?___flsub
  7150  1A4E                     l786:
  7151  1A4E  0008               	return
  7152  1A4F                     __end_of___flsub:
  7153                           
  7154                           	psect	text21
  7155  12B6                     __ptext21:	
  7156 ;; *************** function ___fladd *****************
  7157 ;; Defined at:
  7158 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  b               4   50[BANK0 ] long 
  7161 ;;  a               4   54[BANK0 ] long 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;  grs             1   69[BANK0 ] unsigned char 
  7164 ;;  bexp            1   68[BANK0 ] unsigned char 
  7165 ;;  aexp            1   67[BANK0 ] unsigned char 
  7166 ;;  signs           1   66[BANK0 ] unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  4   50[BANK0 ] unsigned char 
  7169 ;; Registers used:
  7170 ;;		wreg, status,2, status,0, btemp+1
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7176 ;;      Params:         0       8       0       0       0
  7177 ;;      Locals:         0       4       0       0       0
  7178 ;;      Temps:          0       8       0       0       0
  7179 ;;      Totals:         0      20       0       0       0
  7180 ;;Total ram usage:       20 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_sprintf
  7186 ;;		___flsub
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           
  7191                           ;psect for function ___fladd
  7192  12B6                     ___fladd:
  7193  12B6                     l2566:	
  7194                           ;incstack = 0
  7195                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7196                           
  7197  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  7198  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  7199  12B8  0855               	movf	___fladd@b+3,w
  7200  12B9  3980               	andlw	128
  7201  12BA  00DA               	movwf	??___fladd
  7202  12BB  085A               	movf	??___fladd,w
  7203  12BC  00E2               	movwf	___fladd@signs
  7204  12BD                     l2568:
  7205  12BD  0855               	movf	___fladd@b+3,w
  7206  12BE  00DA               	movwf	??___fladd
  7207  12BF  075A               	addwf	??___fladd,w
  7208  12C0  00DB               	movwf	??___fladd+1
  7209  12C1  085B               	movf	??___fladd+1,w
  7210  12C2  00E4               	movwf	___fladd@bexp
  7211  12C3                     l2570:
  7212  12C3  1FD4               	btfss	___fladd@b+2,7
  7213  12C4  2AC6               	goto	u3371
  7214  12C5  2AC7               	goto	u3370
  7215  12C6                     u3371:
  7216  12C6  2AC8               	goto	l2574
  7217  12C7                     u3370:
  7218  12C7                     l2572:
  7219  12C7  1464               	bsf	___fladd@bexp,0
  7220  12C8                     l2574:
  7221  12C8  0864               	movf	___fladd@bexp,w
  7222  12C9  1903               	btfsc	3,2
  7223  12CA  2ACC               	goto	u3381
  7224  12CB  2ACD               	goto	u3380
  7225  12CC                     u3381:
  7226  12CC  2ADD               	goto	l2584
  7227  12CD                     u3380:
  7228  12CD                     l2576:
  7229  12CD  0A64               	incf	___fladd@bexp,w
  7230  12CE  1D03               	btfss	3,2
  7231  12CF  2AD1               	goto	u3391
  7232  12D0  2AD2               	goto	u3390
  7233  12D1                     u3391:
  7234  12D1  2ADA               	goto	l2580
  7235  12D2                     u3390:
  7236  12D2                     l2578:
  7237  12D2  3000               	movlw	0
  7238  12D3  00D5               	movwf	___fladd@b+3
  7239  12D4  3000               	movlw	0
  7240  12D5  00D4               	movwf	___fladd@b+2
  7241  12D6  3000               	movlw	0
  7242  12D7  00D3               	movwf	___fladd@b+1
  7243  12D8  3000               	movlw	0
  7244  12D9  00D2               	movwf	___fladd@b
  7245  12DA                     l2580:
  7246  12DA  17D4               	bsf	___fladd@b+2,7
  7247  12DB                     l2582:
  7248  12DB  01D5               	clrf	___fladd@b+3
  7249  12DC  2AE5               	goto	l2586
  7250  12DD                     l2584:
  7251  12DD  3000               	movlw	0
  7252  12DE  00D5               	movwf	___fladd@b+3
  7253  12DF  3000               	movlw	0
  7254  12E0  00D4               	movwf	___fladd@b+2
  7255  12E1  3000               	movlw	0
  7256  12E2  00D3               	movwf	___fladd@b+1
  7257  12E3  3000               	movlw	0
  7258  12E4  00D2               	movwf	___fladd@b
  7259  12E5                     l2586:
  7260  12E5  0859               	movf	___fladd@a+3,w
  7261  12E6  3980               	andlw	128
  7262  12E7  00DA               	movwf	??___fladd
  7263  12E8  085A               	movf	??___fladd,w
  7264  12E9  00E3               	movwf	___fladd@aexp
  7265  12EA                     l2588:
  7266  12EA  0863               	movf	___fladd@aexp,w
  7267  12EB  0662               	xorwf	___fladd@signs,w
  7268  12EC  1903               	skipnz
  7269  12ED  2AEF               	goto	u3401
  7270  12EE  2AF0               	goto	u3400
  7271  12EF                     u3401:
  7272  12EF  2AF1               	goto	l2592
  7273  12F0                     u3400:
  7274  12F0                     l2590:
  7275  12F0  1762               	bsf	___fladd@signs,6
  7276  12F1                     l2592:
  7277  12F1  0859               	movf	___fladd@a+3,w
  7278  12F2  00DA               	movwf	??___fladd
  7279  12F3  075A               	addwf	??___fladd,w
  7280  12F4  00DB               	movwf	??___fladd+1
  7281  12F5  085B               	movf	??___fladd+1,w
  7282  12F6  00E3               	movwf	___fladd@aexp
  7283  12F7                     l2594:
  7284  12F7  1FD8               	btfss	___fladd@a+2,7
  7285  12F8  2AFA               	goto	u3411
  7286  12F9  2AFB               	goto	u3410
  7287  12FA                     u3411:
  7288  12FA  2AFC               	goto	l2598
  7289  12FB                     u3410:
  7290  12FB                     l2596:
  7291  12FB  1463               	bsf	___fladd@aexp,0
  7292  12FC                     l2598:
  7293  12FC  0863               	movf	___fladd@aexp,w
  7294  12FD  1903               	btfsc	3,2
  7295  12FE  2B00               	goto	u3421
  7296  12FF  2B01               	goto	u3420
  7297  1300                     u3421:
  7298  1300  2B11               	goto	l2608
  7299  1301                     u3420:
  7300  1301                     l2600:
  7301  1301  0A63               	incf	___fladd@aexp,w
  7302  1302  1D03               	btfss	3,2
  7303  1303  2B05               	goto	u3431
  7304  1304  2B06               	goto	u3430
  7305  1305                     u3431:
  7306  1305  2B0E               	goto	l2604
  7307  1306                     u3430:
  7308  1306                     l2602:
  7309  1306  3000               	movlw	0
  7310  1307  00D9               	movwf	___fladd@a+3
  7311  1308  3000               	movlw	0
  7312  1309  00D8               	movwf	___fladd@a+2
  7313  130A  3000               	movlw	0
  7314  130B  00D7               	movwf	___fladd@a+1
  7315  130C  3000               	movlw	0
  7316  130D  00D6               	movwf	___fladd@a
  7317  130E                     l2604:
  7318  130E  17D8               	bsf	___fladd@a+2,7
  7319  130F                     l2606:
  7320  130F  01D9               	clrf	___fladd@a+3
  7321  1310  2B19               	goto	l740
  7322  1311                     l2608:
  7323  1311  3000               	movlw	0
  7324  1312  00D9               	movwf	___fladd@a+3
  7325  1313  3000               	movlw	0
  7326  1314  00D8               	movwf	___fladd@a+2
  7327  1315  3000               	movlw	0
  7328  1316  00D7               	movwf	___fladd@a+1
  7329  1317  3000               	movlw	0
  7330  1318  00D6               	movwf	___fladd@a
  7331  1319                     l740:
  7332  1319  0864               	movf	___fladd@bexp,w
  7333  131A  0263               	subwf	___fladd@aexp,w
  7334  131B  1803               	skipnc
  7335  131C  2B1E               	goto	u3441
  7336  131D  2B1F               	goto	u3440
  7337  131E                     u3441:
  7338  131E  2B63               	goto	l2644
  7339  131F                     u3440:
  7340  131F                     l2610:
  7341  131F  1F62               	btfss	___fladd@signs,6
  7342  1320  2B22               	goto	u3451
  7343  1321  2B23               	goto	u3450
  7344  1322                     u3451:
  7345  1322  2B27               	goto	l2614
  7346  1323                     u3450:
  7347  1323                     l2612:
  7348  1323  3080               	movlw	128
  7349  1324  00DA               	movwf	??___fladd
  7350  1325  085A               	movf	??___fladd,w
  7351  1326  06E2               	xorwf	___fladd@signs,f
  7352  1327                     l2614:
  7353  1327  0864               	movf	___fladd@bexp,w
  7354  1328  00DA               	movwf	??___fladd
  7355  1329  085A               	movf	??___fladd,w
  7356  132A  00E5               	movwf	___fladd@grs
  7357  132B                     l2616:
  7358  132B  0863               	movf	___fladd@aexp,w
  7359  132C  00DA               	movwf	??___fladd
  7360  132D  085A               	movf	??___fladd,w
  7361  132E  00E4               	movwf	___fladd@bexp
  7362  132F                     l2618:
  7363  132F  0865               	movf	___fladd@grs,w
  7364  1330  00DA               	movwf	??___fladd
  7365  1331  085A               	movf	??___fladd,w
  7366  1332  00E3               	movwf	___fladd@aexp
  7367  1333                     l2620:
  7368  1333  0852               	movf	___fladd@b,w
  7369  1334  00DA               	movwf	??___fladd
  7370  1335  085A               	movf	??___fladd,w
  7371  1336  00E5               	movwf	___fladd@grs
  7372  1337                     l2622:
  7373  1337  0856               	movf	___fladd@a,w
  7374  1338  00DA               	movwf	??___fladd
  7375  1339  085A               	movf	??___fladd,w
  7376  133A  00D2               	movwf	___fladd@b
  7377  133B                     l2624:
  7378  133B  0865               	movf	___fladd@grs,w
  7379  133C  00DA               	movwf	??___fladd
  7380  133D  085A               	movf	??___fladd,w
  7381  133E  00D6               	movwf	___fladd@a
  7382  133F                     l2626:
  7383  133F  0853               	movf	___fladd@b+1,w
  7384  1340  00DA               	movwf	??___fladd
  7385  1341  085A               	movf	??___fladd,w
  7386  1342  00E5               	movwf	___fladd@grs
  7387  1343                     l2628:
  7388  1343  0857               	movf	___fladd@a+1,w
  7389  1344  00DA               	movwf	??___fladd
  7390  1345  085A               	movf	??___fladd,w
  7391  1346  00D3               	movwf	___fladd@b+1
  7392  1347                     l2630:
  7393  1347  0865               	movf	___fladd@grs,w
  7394  1348  00DA               	movwf	??___fladd
  7395  1349  085A               	movf	??___fladd,w
  7396  134A  00D7               	movwf	___fladd@a+1
  7397  134B                     l2632:
  7398  134B  0854               	movf	___fladd@b+2,w
  7399  134C  00DA               	movwf	??___fladd
  7400  134D  085A               	movf	??___fladd,w
  7401  134E  00E5               	movwf	___fladd@grs
  7402  134F                     l2634:
  7403  134F  0858               	movf	___fladd@a+2,w
  7404  1350  00DA               	movwf	??___fladd
  7405  1351  085A               	movf	??___fladd,w
  7406  1352  00D4               	movwf	___fladd@b+2
  7407  1353                     l2636:
  7408  1353  0865               	movf	___fladd@grs,w
  7409  1354  00DA               	movwf	??___fladd
  7410  1355  085A               	movf	??___fladd,w
  7411  1356  00D8               	movwf	___fladd@a+2
  7412  1357                     l2638:
  7413  1357  0855               	movf	___fladd@b+3,w
  7414  1358  00DA               	movwf	??___fladd
  7415  1359  085A               	movf	??___fladd,w
  7416  135A  00E5               	movwf	___fladd@grs
  7417  135B                     l2640:
  7418  135B  0859               	movf	___fladd@a+3,w
  7419  135C  00DA               	movwf	??___fladd
  7420  135D  085A               	movf	??___fladd,w
  7421  135E  00D5               	movwf	___fladd@b+3
  7422  135F                     l2642:
  7423  135F  0865               	movf	___fladd@grs,w
  7424  1360  00DA               	movwf	??___fladd
  7425  1361  085A               	movf	??___fladd,w
  7426  1362  00D9               	movwf	___fladd@a+3
  7427  1363                     l2644:
  7428  1363  01E5               	clrf	___fladd@grs
  7429  1364                     l2646:
  7430  1364  0863               	movf	___fladd@aexp,w
  7431  1365  00DA               	movwf	??___fladd
  7432  1366  01DB               	clrf	??___fladd+1
  7433  1367  085B               	movf	??___fladd+1,w
  7434  1368  00DD               	movwf	??___fladd+3
  7435  1369  0864               	movf	___fladd@bexp,w
  7436  136A  025A               	subwf	??___fladd,w
  7437  136B  00DC               	movwf	??___fladd+2
  7438  136C  1C03               	skipc
  7439  136D  03DD               	decf	??___fladd+3,f
  7440  136E  085D               	movf	??___fladd+3,w
  7441  136F  3A80               	xorlw	128
  7442  1370  00FF               	movwf	btemp+1
  7443  1371  3080               	movlw	128
  7444  1372  027F               	subwf	btemp+1,w
  7445  1373  1D03               	skipz
  7446  1374  2B77               	goto	u3465
  7447  1375  301A               	movlw	26
  7448  1376  025C               	subwf	??___fladd+2,w
  7449  1377                     u3465:
  7450  1377  1C03               	skipc
  7451  1378  2B7A               	goto	u3461
  7452  1379  2B7B               	goto	u3460
  7453  137A                     u3461:
  7454  137A  2BB8               	goto	l2662
  7455  137B                     u3460:
  7456  137B                     l2648:
  7457  137B  1283               	bcf	3,5	;RP0=0, select bank0
  7458  137C  1303               	bcf	3,6	;RP1=0, select bank0
  7459  137D  0855               	movf	___fladd@b+3,w
  7460  137E  0454               	iorwf	___fladd@b+2,w
  7461  137F  0453               	iorwf	___fladd@b+1,w
  7462  1380  0452               	iorwf	___fladd@b,w
  7463  1381  1D03               	skipz
  7464  1382  2B84               	goto	u3471
  7465  1383  2B86               	goto	u3470
  7466  1384                     u3471:
  7467  1384  3001               	movlw	1
  7468  1385  2B87               	goto	u3480
  7469  1386                     u3470:
  7470  1386  3000               	movlw	0
  7471  1387                     u3480:
  7472  1387  00DA               	movwf	??___fladd
  7473  1388  085A               	movf	??___fladd,w
  7474  1389  00E5               	movwf	___fladd@grs
  7475  138A  3000               	movlw	0
  7476  138B  00D5               	movwf	___fladd@b+3
  7477  138C  3000               	movlw	0
  7478  138D  00D4               	movwf	___fladd@b+2
  7479  138E  3000               	movlw	0
  7480  138F  00D3               	movwf	___fladd@b+1
  7481  1390  3000               	movlw	0
  7482  1391  00D2               	movwf	___fladd@b
  7483  1392  0863               	movf	___fladd@aexp,w
  7484  1393  00DA               	movwf	??___fladd
  7485  1394  085A               	movf	??___fladd,w
  7486  1395  00E4               	movwf	___fladd@bexp
  7487  1396  2BC0               	goto	l744
  7488  1397                     l746:
  7489  1397  1C65               	btfss	___fladd@grs,0
  7490  1398  2B9A               	goto	u3491
  7491  1399  2B9B               	goto	u3490
  7492  139A                     u3491:
  7493  139A  2BA4               	goto	l2652
  7494  139B                     u3490:
  7495  139B                     l2650:
  7496  139B  0865               	movf	___fladd@grs,w
  7497  139C  00DA               	movwf	??___fladd
  7498  139D  1003               	clrc
  7499  139E  0C5A               	rrf	??___fladd,w
  7500  139F  3801               	iorlw	1
  7501  13A0  00DB               	movwf	??___fladd+1
  7502  13A1  085B               	movf	??___fladd+1,w
  7503  13A2  00E5               	movwf	___fladd@grs
  7504  13A3  2BA6               	goto	l2654
  7505  13A4                     l2652:
  7506  13A4  1003               	clrc
  7507  13A5  0CE5               	rrf	___fladd@grs,f
  7508  13A6                     l2654:
  7509  13A6  1C52               	btfss	___fladd@b,0
  7510  13A7  2BA9               	goto	u3501
  7511  13A8  2BAA               	goto	u3500
  7512  13A9                     u3501:
  7513  13A9  2BAB               	goto	l2658
  7514  13AA                     u3500:
  7515  13AA                     l2656:
  7516  13AA  17E5               	bsf	___fladd@grs,7
  7517  13AB                     l2658:
  7518  13AB  3001               	movlw	1
  7519  13AC  00DA               	movwf	??___fladd
  7520  13AD                     u3515:
  7521  13AD  0D55               	rlf	___fladd@b+3,w
  7522  13AE  0CD5               	rrf	___fladd@b+3,f
  7523  13AF  0CD4               	rrf	___fladd@b+2,f
  7524  13B0  0CD3               	rrf	___fladd@b+1,f
  7525  13B1  0CD2               	rrf	___fladd@b,f
  7526  13B2  0BDA               	decfsz	??___fladd& (0+127),f
  7527  13B3  2BAD               	goto	u3515
  7528  13B4                     l2660:
  7529  13B4  3001               	movlw	1
  7530  13B5  00DA               	movwf	??___fladd
  7531  13B6  085A               	movf	??___fladd,w
  7532  13B7  07E4               	addwf	___fladd@bexp,f
  7533  13B8                     l2662:
  7534  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  7535  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  7536  13BA  0863               	movf	___fladd@aexp,w
  7537  13BB  0264               	subwf	___fladd@bexp,w
  7538  13BC  1C03               	skipc
  7539  13BD  2BBF               	goto	u3521
  7540  13BE  2BC0               	goto	u3520
  7541  13BF                     u3521:
  7542  13BF  2B97               	goto	l746
  7543  13C0                     u3520:
  7544  13C0                     l744:
  7545  13C0  1B62               	btfsc	___fladd@signs,6
  7546  13C1  2BC3               	goto	u3531
  7547  13C2  2BC4               	goto	u3530
  7548  13C3                     u3531:
  7549  13C3  2C0F               	goto	l2688
  7550  13C4                     u3530:
  7551  13C4                     l2664:
  7552  13C4  0864               	movf	___fladd@bexp,w
  7553  13C5  1D03               	btfss	3,2
  7554  13C6  2BC8               	goto	u3541
  7555  13C7  2BC9               	goto	u3540
  7556  13C8                     u3541:
  7557  13C8  2BD2               	goto	l2670
  7558  13C9                     u3540:
  7559  13C9                     l2666:
  7560  13C9  3000               	movlw	0
  7561  13CA  00D5               	movwf	?___fladd+3
  7562  13CB  3000               	movlw	0
  7563  13CC  00D4               	movwf	?___fladd+2
  7564  13CD  3000               	movlw	0
  7565  13CE  00D3               	movwf	?___fladd+1
  7566  13CF  3000               	movlw	0
  7567  13D0  00D2               	movwf	?___fladd
  7568  13D1  2D3D               	goto	l753
  7569  13D2                     l2670:
  7570  13D2  0856               	movf	___fladd@a,w
  7571  13D3  07D2               	addwf	___fladd@b,f
  7572  13D4  0857               	movf	___fladd@a+1,w
  7573  13D5  1103               	clrz
  7574  13D6  1803               	skipnc
  7575  13D7  3E01               	addlw	1
  7576  13D8  1903               	skipnz
  7577  13D9  2BDB               	goto	u3551
  7578  13DA  07D3               	addwf	___fladd@b+1,f
  7579  13DB                     u3551:
  7580  13DB  0858               	movf	___fladd@a+2,w
  7581  13DC  1103               	clrz
  7582  13DD  1803               	skipnc
  7583  13DE  3E01               	addlw	1
  7584  13DF  1903               	skipnz
  7585  13E0  2BE2               	goto	u3552
  7586  13E1  07D4               	addwf	___fladd@b+2,f
  7587  13E2                     u3552:
  7588  13E2  0859               	movf	___fladd@a+3,w
  7589  13E3  1103               	clrz
  7590  13E4  1803               	skipnc
  7591  13E5  3E01               	addlw	1
  7592  13E6  1903               	skipnz
  7593  13E7  2BE9               	goto	u3553
  7594  13E8  07D5               	addwf	___fladd@b+3,f
  7595  13E9                     u3553:
  7596  13E9                     l2672:
  7597  13E9  1C55               	btfss	___fladd@b+3,0
  7598  13EA  2BEC               	goto	u3561
  7599  13EB  2BED               	goto	u3560
  7600  13EC                     u3561:
  7601  13EC  2CC3               	goto	l2722
  7602  13ED                     u3560:
  7603  13ED                     l2674:
  7604  13ED  1C65               	btfss	___fladd@grs,0
  7605  13EE  2BF0               	goto	u3571
  7606  13EF  2BF1               	goto	u3570
  7607  13F0                     u3571:
  7608  13F0  2BFA               	goto	l2678
  7609  13F1                     u3570:
  7610  13F1                     l2676:
  7611  13F1  0865               	movf	___fladd@grs,w
  7612  13F2  00DA               	movwf	??___fladd
  7613  13F3  1003               	clrc
  7614  13F4  0C5A               	rrf	??___fladd,w
  7615  13F5  3801               	iorlw	1
  7616  13F6  00DB               	movwf	??___fladd+1
  7617  13F7  085B               	movf	??___fladd+1,w
  7618  13F8  00E5               	movwf	___fladd@grs
  7619  13F9  2BFC               	goto	l2680
  7620  13FA                     l2678:
  7621  13FA  1003               	clrc
  7622  13FB  0CE5               	rrf	___fladd@grs,f
  7623  13FC                     l2680:
  7624  13FC  1C52               	btfss	___fladd@b,0
  7625  13FD  2BFF               	goto	u3581
  7626  13FE  2C00               	goto	u3580
  7627  13FF                     u3581:
  7628  13FF  2C01               	goto	l2684
  7629  1400                     u3580:
  7630  1400                     l2682:
  7631  1400  17E5               	bsf	___fladd@grs,7
  7632  1401                     l2684:
  7633  1401  3001               	movlw	1
  7634  1402  00DA               	movwf	??___fladd
  7635  1403                     u3595:
  7636  1403  0D55               	rlf	___fladd@b+3,w
  7637  1404  0CD5               	rrf	___fladd@b+3,f
  7638  1405  0CD4               	rrf	___fladd@b+2,f
  7639  1406  0CD3               	rrf	___fladd@b+1,f
  7640  1407  0CD2               	rrf	___fladd@b,f
  7641  1408  0BDA               	decfsz	??___fladd& (0+127),f
  7642  1409  2C03               	goto	u3595
  7643  140A                     l2686:
  7644  140A  3001               	movlw	1
  7645  140B  00DA               	movwf	??___fladd
  7646  140C  085A               	movf	??___fladd,w
  7647  140D  07E4               	addwf	___fladd@bexp,f
  7648  140E  2CC3               	goto	l2722
  7649  140F                     l2688:
  7650  140F  0855               	movf	___fladd@b+3,w
  7651  1410  3A80               	xorlw	128
  7652  1411  00FF               	movwf	btemp+1
  7653  1412  0859               	movf	___fladd@a+3,w
  7654  1413  3A80               	xorlw	128
  7655  1414  027F               	subwf	btemp+1,w
  7656  1415  1D03               	skipz
  7657  1416  2C21               	goto	u3603
  7658  1417  0858               	movf	___fladd@a+2,w
  7659  1418  0254               	subwf	___fladd@b+2,w
  7660  1419  1D03               	skipz
  7661  141A  2C21               	goto	u3603
  7662  141B  0857               	movf	___fladd@a+1,w
  7663  141C  0253               	subwf	___fladd@b+1,w
  7664  141D  1D03               	skipz
  7665  141E  2C21               	goto	u3603
  7666  141F  0856               	movf	___fladd@a,w
  7667  1420  0252               	subwf	___fladd@b,w
  7668  1421                     u3603:
  7669  1421  1803               	skipnc
  7670  1422  2C24               	goto	u3601
  7671  1423  2C25               	goto	u3600
  7672  1424                     u3601:
  7673  1424  2C7D               	goto	l2698
  7674  1425                     u3600:
  7675  1425                     l2690:
  7676  1425  30FF               	movlw	255
  7677  1426  00DA               	movwf	??___fladd
  7678  1427  30FF               	movlw	255
  7679  1428  00DB               	movwf	??___fladd+1
  7680  1429  30FF               	movlw	255
  7681  142A  00DC               	movwf	??___fladd+2
  7682  142B  30FF               	movlw	255
  7683  142C  00DD               	movwf	??___fladd+3
  7684  142D  0856               	movf	___fladd@a,w
  7685  142E  00DE               	movwf	??___fladd+4
  7686  142F  0857               	movf	___fladd@a+1,w
  7687  1430  00DF               	movwf	??___fladd+5
  7688  1431  0858               	movf	___fladd@a+2,w
  7689  1432  00E0               	movwf	??___fladd+6
  7690  1433  0859               	movf	___fladd@a+3,w
  7691  1434  00E1               	movwf	??___fladd+7
  7692  1435  0852               	movf	___fladd@b,w
  7693  1436  02DE               	subwf	??___fladd+4,f
  7694  1437  0853               	movf	___fladd@b+1,w
  7695  1438  1C03               	skipc
  7696  1439  0F53               	incfsz	___fladd@b+1,w
  7697  143A  2C3C               	goto	u3611
  7698  143B  2C3D               	goto	u3612
  7699  143C                     u3611:
  7700  143C  02DF               	subwf	??___fladd+5,f
  7701  143D                     u3612:
  7702  143D  0854               	movf	___fladd@b+2,w
  7703  143E  1C03               	skipc
  7704  143F  0F54               	incfsz	___fladd@b+2,w
  7705  1440  2C42               	goto	u3613
  7706  1441  2C43               	goto	u3614
  7707  1442                     u3613:
  7708  1442  02E0               	subwf	??___fladd+6,f
  7709  1443                     u3614:
  7710  1443  0855               	movf	___fladd@b+3,w
  7711  1444  1C03               	skipc
  7712  1445  0F55               	incfsz	___fladd@b+3,w
  7713  1446  2C48               	goto	u3615
  7714  1447  2C49               	goto	u3616
  7715  1448                     u3615:
  7716  1448  02E1               	subwf	??___fladd+7,f
  7717  1449                     u3616:
  7718  1449  085E               	movf	??___fladd+4,w
  7719  144A  07DA               	addwf	??___fladd,f
  7720  144B  085F               	movf	??___fladd+5,w
  7721  144C  1803               	skipnc
  7722  144D  0F5F               	incfsz	??___fladd+5,w
  7723  144E  2C50               	goto	u3620
  7724  144F  2C51               	goto	u3621
  7725  1450                     u3620:
  7726  1450  07DB               	addwf	??___fladd+1,f
  7727  1451                     u3621:
  7728  1451  0860               	movf	??___fladd+6,w
  7729  1452  1803               	skipnc
  7730  1453  0F60               	incfsz	??___fladd+6,w
  7731  1454  2C56               	goto	u3622
  7732  1455  2C57               	goto	u3623
  7733  1456                     u3622:
  7734  1456  07DC               	addwf	??___fladd+2,f
  7735  1457                     u3623:
  7736  1457  0861               	movf	??___fladd+7,w
  7737  1458  1803               	skipnc
  7738  1459  0A61               	incf	??___fladd+7,w
  7739  145A  07DD               	addwf	??___fladd+3,f
  7740  145B  085D               	movf	??___fladd+3,w
  7741  145C  00D5               	movwf	___fladd@b+3
  7742  145D  085C               	movf	??___fladd+2,w
  7743  145E  00D4               	movwf	___fladd@b+2
  7744  145F  085B               	movf	??___fladd+1,w
  7745  1460  00D3               	movwf	___fladd@b+1
  7746  1461  085A               	movf	??___fladd,w
  7747  1462  00D2               	movwf	___fladd@b
  7748  1463                     l2692:
  7749  1463  3080               	movlw	128
  7750  1464  00DA               	movwf	??___fladd
  7751  1465  085A               	movf	??___fladd,w
  7752  1466  06E2               	xorwf	___fladd@signs,f
  7753  1467  09E5               	comf	___fladd@grs,f
  7754  1468  0AE5               	incf	___fladd@grs,f
  7755  1469                     l2694:
  7756  1469  0865               	movf	___fladd@grs,w
  7757  146A  1D03               	btfss	3,2
  7758  146B  2C6D               	goto	u3631
  7759  146C  2C6E               	goto	u3630
  7760  146D                     u3631:
  7761  146D  2C8B               	goto	l761
  7762  146E                     u3630:
  7763  146E                     l2696:
  7764  146E  3001               	movlw	1
  7765  146F  07D2               	addwf	___fladd@b,f
  7766  1470  3000               	movlw	0
  7767  1471  1803               	skipnc
  7768  1472  3001               	movlw	1
  7769  1473  07D3               	addwf	___fladd@b+1,f
  7770  1474  3000               	movlw	0
  7771  1475  1803               	skipnc
  7772  1476  3001               	movlw	1
  7773  1477  07D4               	addwf	___fladd@b+2,f
  7774  1478  3000               	movlw	0
  7775  1479  1803               	skipnc
  7776  147A  3001               	movlw	1
  7777  147B  07D5               	addwf	___fladd@b+3,f
  7778  147C  2C8B               	goto	l761
  7779  147D                     l2698:
  7780  147D  0856               	movf	___fladd@a,w
  7781  147E  02D2               	subwf	___fladd@b,f
  7782  147F  0857               	movf	___fladd@a+1,w
  7783  1480  1C03               	skipc
  7784  1481  0F57               	incfsz	___fladd@a+1,w
  7785  1482  02D3               	subwf	___fladd@b+1,f
  7786  1483  0858               	movf	___fladd@a+2,w
  7787  1484  1C03               	skipc
  7788  1485  0F58               	incfsz	___fladd@a+2,w
  7789  1486  02D4               	subwf	___fladd@b+2,f
  7790  1487  0859               	movf	___fladd@a+3,w
  7791  1488  1C03               	skipc
  7792  1489  0F59               	incfsz	___fladd@a+3,w
  7793  148A  02D5               	subwf	___fladd@b+3,f
  7794  148B                     l761:
  7795  148B  0855               	movf	___fladd@b+3,w
  7796  148C  0454               	iorwf	___fladd@b+2,w
  7797  148D  0453               	iorwf	___fladd@b+1,w
  7798  148E  0452               	iorwf	___fladd@b,w
  7799  148F  1D03               	skipz
  7800  1490  2C92               	goto	u3641
  7801  1491  2C93               	goto	u3640
  7802  1492                     u3641:
  7803  1492  2CBF               	goto	l2720
  7804  1493                     u3640:
  7805  1493                     l2700:
  7806  1493  0865               	movf	___fladd@grs,w
  7807  1494  1D03               	btfss	3,2
  7808  1495  2C97               	goto	u3651
  7809  1496  2C98               	goto	u3650
  7810  1497                     u3651:
  7811  1497  2CBF               	goto	l2720
  7812  1498                     u3650:
  7813  1498                     l2702:
  7814  1498  3000               	movlw	0
  7815  1499  00D5               	movwf	?___fladd+3
  7816  149A  3000               	movlw	0
  7817  149B  00D4               	movwf	?___fladd+2
  7818  149C  3000               	movlw	0
  7819  149D  00D3               	movwf	?___fladd+1
  7820  149E  3000               	movlw	0
  7821  149F  00D2               	movwf	?___fladd
  7822  14A0  2D3D               	goto	l753
  7823  14A1                     l2706:
  7824  14A1  3001               	movlw	1
  7825  14A2  00DA               	movwf	??___fladd
  7826  14A3                     u3665:
  7827  14A3  1003               	clrc
  7828  14A4  0DD2               	rlf	___fladd@b,f
  7829  14A5  0DD3               	rlf	___fladd@b+1,f
  7830  14A6  0DD4               	rlf	___fladd@b+2,f
  7831  14A7  0DD5               	rlf	___fladd@b+3,f
  7832  14A8  0BDA               	decfsz	??___fladd,f
  7833  14A9  2CA3               	goto	u3665
  7834  14AA                     l2708:
  7835  14AA  1FE5               	btfss	___fladd@grs,7
  7836  14AB  2CAD               	goto	u3671
  7837  14AC  2CAE               	goto	u3670
  7838  14AD                     u3671:
  7839  14AD  2CAF               	goto	l765
  7840  14AE                     u3670:
  7841  14AE                     l2710:
  7842  14AE  1452               	bsf	___fladd@b,0
  7843  14AF                     l765:
  7844  14AF  1C65               	btfss	___fladd@grs,0
  7845  14B0  2CB2               	goto	u3681
  7846  14B1  2CB3               	goto	u3680
  7847  14B2                     u3681:
  7848  14B2  2CB6               	goto	l2714
  7849  14B3                     u3680:
  7850  14B3                     l2712:
  7851  14B3  1403               	setc
  7852  14B4  0DE5               	rlf	___fladd@grs,f
  7853  14B5  2CB8               	goto	l2716
  7854  14B6                     l2714:
  7855  14B6  1003               	clrc
  7856  14B7  0DE5               	rlf	___fladd@grs,f
  7857  14B8                     l2716:
  7858  14B8  0864               	movf	___fladd@bexp,w
  7859  14B9  1903               	btfsc	3,2
  7860  14BA  2CBC               	goto	u3691
  7861  14BB  2CBD               	goto	u3690
  7862  14BC                     u3691:
  7863  14BC  2CBF               	goto	l2720
  7864  14BD                     u3690:
  7865  14BD                     l2718:
  7866  14BD  3001               	movlw	1
  7867  14BE  02E4               	subwf	___fladd@bexp,f
  7868  14BF                     l2720:
  7869  14BF  1FD4               	btfss	___fladd@b+2,7
  7870  14C0  2CC2               	goto	u3701
  7871  14C1  2CC3               	goto	u3700
  7872  14C2                     u3701:
  7873  14C2  2CA1               	goto	l2706
  7874  14C3                     u3700:
  7875  14C3                     l2722:
  7876  14C3  01E3               	clrf	___fladd@aexp
  7877  14C4                     l2724:
  7878  14C4  1FE5               	btfss	___fladd@grs,7
  7879  14C5  2CC7               	goto	u3711
  7880  14C6  2CC8               	goto	u3710
  7881  14C7                     u3711:
  7882  14C7  2CD6               	goto	l2732
  7883  14C8                     u3710:
  7884  14C8                     l2726:
  7885  14C8  0865               	movf	___fladd@grs,w
  7886  14C9  397F               	andlw	127
  7887  14CA  1903               	btfsc	3,2
  7888  14CB  2CCD               	goto	u3721
  7889  14CC  2CCE               	goto	u3720
  7890  14CD                     u3721:
  7891  14CD  2CD1               	goto	l771
  7892  14CE                     u3720:
  7893  14CE                     l2728:
  7894  14CE  01E3               	clrf	___fladd@aexp
  7895  14CF  0AE3               	incf	___fladd@aexp,f
  7896  14D0  2CD6               	goto	l2732
  7897  14D1                     l771:
  7898  14D1  1C52               	btfss	___fladd@b,0
  7899  14D2  2CD4               	goto	u3731
  7900  14D3  2CD5               	goto	u3730
  7901  14D4                     u3731:
  7902  14D4  2CD6               	goto	l2732
  7903  14D5                     u3730:
  7904  14D5  2CCE               	goto	l2728
  7905  14D6                     l2732:
  7906  14D6  0863               	movf	___fladd@aexp,w
  7907  14D7  1903               	btfsc	3,2
  7908  14D8  2CDA               	goto	u3741
  7909  14D9  2CDB               	goto	u3740
  7910  14DA                     u3741:
  7911  14DA  2D0F               	goto	l774
  7912  14DB                     u3740:
  7913  14DB                     l2734:
  7914  14DB  3001               	movlw	1
  7915  14DC  07D2               	addwf	___fladd@b,f
  7916  14DD  3000               	movlw	0
  7917  14DE  1803               	skipnc
  7918  14DF  3001               	movlw	1
  7919  14E0  07D3               	addwf	___fladd@b+1,f
  7920  14E1  3000               	movlw	0
  7921  14E2  1803               	skipnc
  7922  14E3  3001               	movlw	1
  7923  14E4  07D4               	addwf	___fladd@b+2,f
  7924  14E5  3000               	movlw	0
  7925  14E6  1803               	skipnc
  7926  14E7  3001               	movlw	1
  7927  14E8  07D5               	addwf	___fladd@b+3,f
  7928  14E9                     l2736:
  7929  14E9  1C55               	btfss	___fladd@b+3,0
  7930  14EA  2CEC               	goto	u3751
  7931  14EB  2CED               	goto	u3750
  7932  14EC                     u3751:
  7933  14EC  2D0F               	goto	l774
  7934  14ED                     u3750:
  7935  14ED                     l2738:
  7936  14ED  0852               	movf	___fladd@b,w
  7937  14EE  00DA               	movwf	??___fladd
  7938  14EF  0853               	movf	___fladd@b+1,w
  7939  14F0  00DB               	movwf	??___fladd+1
  7940  14F1  0854               	movf	___fladd@b+2,w
  7941  14F2  00DC               	movwf	??___fladd+2
  7942  14F3  0855               	movf	___fladd@b+3,w
  7943  14F4  00DD               	movwf	??___fladd+3
  7944  14F5  3001               	movlw	1
  7945  14F6  00DE               	movwf	??___fladd+4
  7946  14F7                     u3765:
  7947  14F7  0D5D               	rlf	??___fladd+3,w
  7948  14F8  0CDD               	rrf	??___fladd+3,f
  7949  14F9  0CDC               	rrf	??___fladd+2,f
  7950  14FA  0CDB               	rrf	??___fladd+1,f
  7951  14FB  0CDA               	rrf	??___fladd,f
  7952  14FC                     u3760:
  7953  14FC  0BDE               	decfsz	??___fladd+4,f
  7954  14FD  2CF7               	goto	u3765
  7955  14FE  085D               	movf	??___fladd+3,w
  7956  14FF  00D5               	movwf	___fladd@b+3
  7957  1500  085C               	movf	??___fladd+2,w
  7958  1501  00D4               	movwf	___fladd@b+2
  7959  1502  085B               	movf	??___fladd+1,w
  7960  1503  00D3               	movwf	___fladd@b+1
  7961  1504  085A               	movf	??___fladd,w
  7962  1505  00D2               	movwf	___fladd@b
  7963  1506  0A64               	incf	___fladd@bexp,w
  7964  1507  1903               	btfsc	3,2
  7965  1508  2D0A               	goto	u3771
  7966  1509  2D0B               	goto	u3770
  7967  150A                     u3771:
  7968  150A  2D0F               	goto	l774
  7969  150B                     u3770:
  7970  150B                     l2740:
  7971  150B  3001               	movlw	1
  7972  150C  00DA               	movwf	??___fladd
  7973  150D  085A               	movf	??___fladd,w
  7974  150E  07E4               	addwf	___fladd@bexp,f
  7975  150F                     l774:
  7976  150F  0A64               	incf	___fladd@bexp,w
  7977  1510  1903               	btfsc	3,2
  7978  1511  2D13               	goto	u3781
  7979  1512  2D14               	goto	u3780
  7980  1513                     u3781:
  7981  1513  2D19               	goto	l2744
  7982  1514                     u3780:
  7983  1514                     l2742:
  7984  1514  0864               	movf	___fladd@bexp,w
  7985  1515  1D03               	btfss	3,2
  7986  1516  2D18               	goto	u3791
  7987  1517  2D19               	goto	u3790
  7988  1518                     u3791:
  7989  1518  2D27               	goto	l2750
  7990  1519                     u3790:
  7991  1519                     l2744:
  7992  1519  3000               	movlw	0
  7993  151A  00D5               	movwf	___fladd@b+3
  7994  151B  3000               	movlw	0
  7995  151C  00D4               	movwf	___fladd@b+2
  7996  151D  3000               	movlw	0
  7997  151E  00D3               	movwf	___fladd@b+1
  7998  151F  3000               	movlw	0
  7999  1520  00D2               	movwf	___fladd@b
  8000  1521                     l2746:
  8001  1521  0864               	movf	___fladd@bexp,w
  8002  1522  1D03               	btfss	3,2
  8003  1523  2D25               	goto	u3801
  8004  1524  2D26               	goto	u3800
  8005  1525                     u3801:
  8006  1525  2D27               	goto	l2750
  8007  1526                     u3800:
  8008  1526                     l2748:
  8009  1526  01E2               	clrf	___fladd@signs
  8010  1527                     l2750:
  8011  1527  1C64               	btfss	___fladd@bexp,0
  8012  1528  2D2A               	goto	u3811
  8013  1529  2D2B               	goto	u3810
  8014  152A                     u3811:
  8015  152A  2D2D               	goto	l2754
  8016  152B                     u3810:
  8017  152B                     l2752:
  8018  152B  17D4               	bsf	___fladd@b+2,7
  8019  152C  2D31               	goto	l782
  8020  152D                     l2754:
  8021  152D  307F               	movlw	127
  8022  152E  00DA               	movwf	??___fladd
  8023  152F  085A               	movf	??___fladd,w
  8024  1530  05D4               	andwf	___fladd@b+2,f
  8025  1531                     l782:
  8026  1531  0864               	movf	___fladd@bexp,w
  8027  1532  00DA               	movwf	??___fladd
  8028  1533  1003               	clrc
  8029  1534  0C5A               	rrf	??___fladd,w
  8030  1535  00DB               	movwf	??___fladd+1
  8031  1536  085B               	movf	??___fladd+1,w
  8032  1537  00D5               	movwf	___fladd@b+3
  8033  1538                     l2756:
  8034  1538  1FE2               	btfss	___fladd@signs,7
  8035  1539  2D3B               	goto	u3821
  8036  153A  2D3C               	goto	u3820
  8037  153B                     u3821:
  8038  153B  2D3D               	goto	l783
  8039  153C                     u3820:
  8040  153C                     l2758:
  8041  153C  17D5               	bsf	___fladd@b+3,7
  8042  153D                     l783:
  8043  153D                     l753:
  8044  153D  0008               	return
  8045  153E                     __end_of___fladd:
  8046                           
  8047                           	psect	text22
  8048  1988                     __ptext22:	
  8049 ;; *************** function ___flneg *****************
  8050 ;; Defined at:
  8051 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  f1              4    0[COMMON] unsigned char 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  4    0[COMMON] unsigned char 
  8058 ;; Registers used:
  8059 ;;		wreg
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8065 ;;      Params:         4       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0
  8068 ;;      Totals:         4       0       0       0       0
  8069 ;;Total ram usage:        4 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; This function calls:
  8072 ;;		Nothing
  8073 ;; This function is called by:
  8074 ;;		_sprintf
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           
  8079                           ;psect for function ___flneg
  8080  1988                     ___flneg:
  8081  1988                     l3172:	
  8082                           ;incstack = 0
  8083                           ; Regs used in ___flneg: [wreg]
  8084                           
  8085  1988  0873               	movf	___flneg@f1+3,w
  8086  1989  0472               	iorwf	___flneg@f1+2,w
  8087  198A  0471               	iorwf	___flneg@f1+1,w
  8088  198B  0470               	iorwf	___flneg@f1,w
  8089  198C  1903               	skipnz
  8090  198D  298F               	goto	u4941
  8091  198E  2990               	goto	u4940
  8092  198F                     u4941:
  8093  198F  2992               	goto	l3176
  8094  1990                     u4940:
  8095  1990                     l3174:
  8096  1990  3080               	movlw	128
  8097  1991  06F3               	xorwf	___flneg@f1+3,f
  8098  1992                     l3176:
  8099  1992                     l612:
  8100  1992  0008               	return
  8101  1993                     __end_of___flneg:
  8102                           
  8103                           	psect	text23
  8104  1009                     __ptext23:	
  8105 ;; *************** function ___flge *****************
  8106 ;; Defined at:
  8107 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  ff1             4    0[COMMON] unsigned char 
  8110 ;;  ff2             4    4[COMMON] unsigned char 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;		None               void
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8122 ;;      Params:         8       0       0       0       0
  8123 ;;      Locals:         0       0       0       0       0
  8124 ;;      Temps:          4       0       0       0       0
  8125 ;;      Totals:        12       0       0       0       0
  8126 ;;Total ram usage:       12 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_sprintf
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           
  8136                           ;psect for function ___flge
  8137  1009                     ___flge:
  8138  1009                     l3152:	
  8139                           ;incstack = 0
  8140                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8141                           
  8142  1009  3000               	movlw	0
  8143  100A  0570               	andwf	___flge@ff1,w
  8144  100B  00F8               	movwf	??___flge
  8145  100C  3000               	movlw	0
  8146  100D  0571               	andwf	___flge@ff1+1,w
  8147  100E  00F9               	movwf	??___flge+1
  8148  100F  3080               	movlw	128
  8149  1010  0572               	andwf	___flge@ff1+2,w
  8150  1011  00FA               	movwf	??___flge+2
  8151  1012  307F               	movlw	127
  8152  1013  0573               	andwf	___flge@ff1+3,w
  8153  1014  00FB               	movwf	??___flge+3
  8154  1015  087B               	movf	??___flge+3,w
  8155  1016  047A               	iorwf	??___flge+2,w
  8156  1017  0479               	iorwf	??___flge+1,w
  8157  1018  0478               	iorwf	??___flge,w
  8158  1019  1D03               	skipz
  8159  101A  281C               	goto	u4871
  8160  101B  281D               	goto	u4870
  8161  101C                     u4871:
  8162  101C  2825               	goto	l604
  8163  101D                     u4870:
  8164  101D                     l3154:
  8165  101D  3000               	movlw	0
  8166  101E  00F3               	movwf	___flge@ff1+3
  8167  101F  3000               	movlw	0
  8168  1020  00F2               	movwf	___flge@ff1+2
  8169  1021  3000               	movlw	0
  8170  1022  00F1               	movwf	___flge@ff1+1
  8171  1023  3000               	movlw	0
  8172  1024  00F0               	movwf	___flge@ff1
  8173  1025                     l604:
  8174  1025  3000               	movlw	0
  8175  1026  0574               	andwf	___flge@ff2,w
  8176  1027  00F8               	movwf	??___flge
  8177  1028  3000               	movlw	0
  8178  1029  0575               	andwf	___flge@ff2+1,w
  8179  102A  00F9               	movwf	??___flge+1
  8180  102B  3080               	movlw	128
  8181  102C  0576               	andwf	___flge@ff2+2,w
  8182  102D  00FA               	movwf	??___flge+2
  8183  102E  307F               	movlw	127
  8184  102F  0577               	andwf	___flge@ff2+3,w
  8185  1030  00FB               	movwf	??___flge+3
  8186  1031  087B               	movf	??___flge+3,w
  8187  1032  047A               	iorwf	??___flge+2,w
  8188  1033  0479               	iorwf	??___flge+1,w
  8189  1034  0478               	iorwf	??___flge,w
  8190  1035  1D03               	skipz
  8191  1036  2838               	goto	u4881
  8192  1037  2839               	goto	u4880
  8193  1038                     u4881:
  8194  1038  2841               	goto	l3158
  8195  1039                     u4880:
  8196  1039                     l3156:
  8197  1039  3000               	movlw	0
  8198  103A  00F7               	movwf	___flge@ff2+3
  8199  103B  3000               	movlw	0
  8200  103C  00F6               	movwf	___flge@ff2+2
  8201  103D  3000               	movlw	0
  8202  103E  00F5               	movwf	___flge@ff2+1
  8203  103F  3000               	movlw	0
  8204  1040  00F4               	movwf	___flge@ff2
  8205  1041                     l3158:
  8206  1041  1FF3               	btfss	___flge@ff1+3,7
  8207  1042  2844               	goto	u4891
  8208  1043  2845               	goto	u4890
  8209  1044                     u4891:
  8210  1044  2869               	goto	l3162
  8211  1045                     u4890:
  8212  1045                     l3160:
  8213  1045  3000               	movlw	0
  8214  1046  00F8               	movwf	??___flge
  8215  1047  3000               	movlw	0
  8216  1048  00F9               	movwf	??___flge+1
  8217  1049  3000               	movlw	0
  8218  104A  00FA               	movwf	??___flge+2
  8219  104B  3080               	movlw	128
  8220  104C  00FB               	movwf	??___flge+3
  8221  104D  0870               	movf	___flge@ff1,w
  8222  104E  02F8               	subwf	??___flge,f
  8223  104F  0871               	movf	___flge@ff1+1,w
  8224  1050  1C03               	skipc
  8225  1051  0F71               	incfsz	___flge@ff1+1,w
  8226  1052  2854               	goto	u4901
  8227  1053  2855               	goto	u4902
  8228  1054                     u4901:
  8229  1054  02F9               	subwf	??___flge+1,f
  8230  1055                     u4902:
  8231  1055  0872               	movf	___flge@ff1+2,w
  8232  1056  1C03               	skipc
  8233  1057  0F72               	incfsz	___flge@ff1+2,w
  8234  1058  285A               	goto	u4903
  8235  1059  285B               	goto	u4904
  8236  105A                     u4903:
  8237  105A  02FA               	subwf	??___flge+2,f
  8238  105B                     u4904:
  8239  105B  0873               	movf	___flge@ff1+3,w
  8240  105C  1C03               	skipc
  8241  105D  0F73               	incfsz	___flge@ff1+3,w
  8242  105E  2860               	goto	u4905
  8243  105F  2861               	goto	u4906
  8244  1060                     u4905:
  8245  1060  02FB               	subwf	??___flge+3,f
  8246  1061                     u4906:
  8247  1061  087B               	movf	??___flge+3,w
  8248  1062  00F3               	movwf	___flge@ff1+3
  8249  1063  087A               	movf	??___flge+2,w
  8250  1064  00F2               	movwf	___flge@ff1+2
  8251  1065  0879               	movf	??___flge+1,w
  8252  1066  00F1               	movwf	___flge@ff1+1
  8253  1067  0878               	movf	??___flge,w
  8254  1068  00F0               	movwf	___flge@ff1
  8255  1069                     l3162:
  8256  1069  1FF7               	btfss	___flge@ff2+3,7
  8257  106A  286C               	goto	u4911
  8258  106B  286D               	goto	u4910
  8259  106C                     u4911:
  8260  106C  2891               	goto	l607
  8261  106D                     u4910:
  8262  106D                     l3164:
  8263  106D  3000               	movlw	0
  8264  106E  00F8               	movwf	??___flge
  8265  106F  3000               	movlw	0
  8266  1070  00F9               	movwf	??___flge+1
  8267  1071  3000               	movlw	0
  8268  1072  00FA               	movwf	??___flge+2
  8269  1073  3080               	movlw	128
  8270  1074  00FB               	movwf	??___flge+3
  8271  1075  0874               	movf	___flge@ff2,w
  8272  1076  02F8               	subwf	??___flge,f
  8273  1077  0875               	movf	___flge@ff2+1,w
  8274  1078  1C03               	skipc
  8275  1079  0F75               	incfsz	___flge@ff2+1,w
  8276  107A  287C               	goto	u4921
  8277  107B  287D               	goto	u4922
  8278  107C                     u4921:
  8279  107C  02F9               	subwf	??___flge+1,f
  8280  107D                     u4922:
  8281  107D  0876               	movf	___flge@ff2+2,w
  8282  107E  1C03               	skipc
  8283  107F  0F76               	incfsz	___flge@ff2+2,w
  8284  1080  2882               	goto	u4923
  8285  1081  2883               	goto	u4924
  8286  1082                     u4923:
  8287  1082  02FA               	subwf	??___flge+2,f
  8288  1083                     u4924:
  8289  1083  0877               	movf	___flge@ff2+3,w
  8290  1084  1C03               	skipc
  8291  1085  0F77               	incfsz	___flge@ff2+3,w
  8292  1086  2888               	goto	u4925
  8293  1087  2889               	goto	u4926
  8294  1088                     u4925:
  8295  1088  02FB               	subwf	??___flge+3,f
  8296  1089                     u4926:
  8297  1089  087B               	movf	??___flge+3,w
  8298  108A  00F7               	movwf	___flge@ff2+3
  8299  108B  087A               	movf	??___flge+2,w
  8300  108C  00F6               	movwf	___flge@ff2+2
  8301  108D  0879               	movf	??___flge+1,w
  8302  108E  00F5               	movwf	___flge@ff2+1
  8303  108F  0878               	movf	??___flge,w
  8304  1090  00F4               	movwf	___flge@ff2
  8305  1091                     l607:
  8306  1091  3080               	movlw	128
  8307  1092  06F3               	xorwf	___flge@ff1+3,f
  8308  1093  3080               	movlw	128
  8309  1094  06F7               	xorwf	___flge@ff2+3,f
  8310  1095  0877               	movf	___flge@ff2+3,w
  8311  1096  0273               	subwf	___flge@ff1+3,w
  8312  1097  1D03               	skipz
  8313  1098  28A3               	goto	u4935
  8314  1099  0876               	movf	___flge@ff2+2,w
  8315  109A  0272               	subwf	___flge@ff1+2,w
  8316  109B  1D03               	skipz
  8317  109C  28A3               	goto	u4935
  8318  109D  0875               	movf	___flge@ff2+1,w
  8319  109E  0271               	subwf	___flge@ff1+1,w
  8320  109F  1D03               	skipz
  8321  10A0  28A3               	goto	u4935
  8322  10A1  0874               	movf	___flge@ff2,w
  8323  10A2  0270               	subwf	___flge@ff1,w
  8324  10A3                     u4935:
  8325  10A3  1803               	skipnc
  8326  10A4  28A6               	goto	u4931
  8327  10A5  28A7               	goto	u4930
  8328  10A6                     u4931:
  8329  10A6  28A9               	goto	l3168
  8330  10A7                     u4930:
  8331  10A7                     l3166:
  8332  10A7  1003               	clrc
  8333  10A8  28AA               	goto	l608
  8334  10A9                     l3168:
  8335  10A9  1403               	setc
  8336  10AA                     l608:
  8337  10AA  0008               	return
  8338  10AB                     __end_of___flge:
  8339                           
  8340                           	psect	text24
  8341  1B99                     __ptext24:	
  8342 ;; *************** function ___fleq *****************
  8343 ;; Defined at:
  8344 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  ff1             4    0[COMMON] unsigned char 
  8347 ;;  ff2             4    4[COMMON] unsigned char 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;		None               void
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8359 ;;      Params:         8       0       0       0       0
  8360 ;;      Locals:         0       0       0       0       0
  8361 ;;      Temps:          4       0       0       0       0
  8362 ;;      Totals:        12       0       0       0       0
  8363 ;;Total ram usage:       12 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_sprintf
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           
  8373                           ;psect for function ___fleq
  8374  1B99                     ___fleq:
  8375  1B99                     l3140:	
  8376                           ;incstack = 0
  8377                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8378                           
  8379  1B99  3000               	movlw	0
  8380  1B9A  0570               	andwf	___fleq@ff1,w
  8381  1B9B  00F8               	movwf	??___fleq
  8382  1B9C  3000               	movlw	0
  8383  1B9D  0571               	andwf	___fleq@ff1+1,w
  8384  1B9E  00F9               	movwf	??___fleq+1
  8385  1B9F  3080               	movlw	128
  8386  1BA0  0572               	andwf	___fleq@ff1+2,w
  8387  1BA1  00FA               	movwf	??___fleq+2
  8388  1BA2  307F               	movlw	127
  8389  1BA3  0573               	andwf	___fleq@ff1+3,w
  8390  1BA4  00FB               	movwf	??___fleq+3
  8391  1BA5  087B               	movf	??___fleq+3,w
  8392  1BA6  047A               	iorwf	??___fleq+2,w
  8393  1BA7  0479               	iorwf	??___fleq+1,w
  8394  1BA8  0478               	iorwf	??___fleq,w
  8395  1BA9  1D03               	skipz
  8396  1BAA  2BAC               	goto	u4841
  8397  1BAB  2BAD               	goto	u4840
  8398  1BAC                     u4841:
  8399  1BAC  2BB5               	goto	l599
  8400  1BAD                     u4840:
  8401  1BAD                     l3142:
  8402  1BAD  3000               	movlw	0
  8403  1BAE  00F3               	movwf	___fleq@ff1+3
  8404  1BAF  3000               	movlw	0
  8405  1BB0  00F2               	movwf	___fleq@ff1+2
  8406  1BB1  3000               	movlw	0
  8407  1BB2  00F1               	movwf	___fleq@ff1+1
  8408  1BB3  3000               	movlw	0
  8409  1BB4  00F0               	movwf	___fleq@ff1
  8410  1BB5                     l599:
  8411  1BB5  3000               	movlw	0
  8412  1BB6  0574               	andwf	___fleq@ff2,w
  8413  1BB7  00F8               	movwf	??___fleq
  8414  1BB8  3000               	movlw	0
  8415  1BB9  0575               	andwf	___fleq@ff2+1,w
  8416  1BBA  00F9               	movwf	??___fleq+1
  8417  1BBB  3080               	movlw	128
  8418  1BBC  0576               	andwf	___fleq@ff2+2,w
  8419  1BBD  00FA               	movwf	??___fleq+2
  8420  1BBE  307F               	movlw	127
  8421  1BBF  0577               	andwf	___fleq@ff2+3,w
  8422  1BC0  00FB               	movwf	??___fleq+3
  8423  1BC1  087B               	movf	??___fleq+3,w
  8424  1BC2  047A               	iorwf	??___fleq+2,w
  8425  1BC3  0479               	iorwf	??___fleq+1,w
  8426  1BC4  0478               	iorwf	??___fleq,w
  8427  1BC5  1D03               	skipz
  8428  1BC6  2BC8               	goto	u4851
  8429  1BC7  2BC9               	goto	u4850
  8430  1BC8                     u4851:
  8431  1BC8  2BD1               	goto	l600
  8432  1BC9                     u4850:
  8433  1BC9                     l3144:
  8434  1BC9  3000               	movlw	0
  8435  1BCA  00F7               	movwf	___fleq@ff2+3
  8436  1BCB  3000               	movlw	0
  8437  1BCC  00F6               	movwf	___fleq@ff2+2
  8438  1BCD  3000               	movlw	0
  8439  1BCE  00F5               	movwf	___fleq@ff2+1
  8440  1BCF  3000               	movlw	0
  8441  1BD0  00F4               	movwf	___fleq@ff2
  8442  1BD1                     l600:
  8443  1BD1  0877               	movf	___fleq@ff2+3,w
  8444  1BD2  0673               	xorwf	___fleq@ff1+3,w
  8445  1BD3  1D03               	skipz
  8446  1BD4  2BDF               	goto	u4865
  8447  1BD5  0876               	movf	___fleq@ff2+2,w
  8448  1BD6  0672               	xorwf	___fleq@ff1+2,w
  8449  1BD7  1D03               	skipz
  8450  1BD8  2BDF               	goto	u4865
  8451  1BD9  0875               	movf	___fleq@ff2+1,w
  8452  1BDA  0671               	xorwf	___fleq@ff1+1,w
  8453  1BDB  1D03               	skipz
  8454  1BDC  2BDF               	goto	u4865
  8455  1BDD  0874               	movf	___fleq@ff2,w
  8456  1BDE  0670               	xorwf	___fleq@ff1,w
  8457  1BDF                     u4865:
  8458  1BDF  1903               	skipnz
  8459  1BE0  2BE2               	goto	u4861
  8460  1BE1  2BE3               	goto	u4860
  8461  1BE2                     u4861:
  8462  1BE2  2BE5               	goto	l3148
  8463  1BE3                     u4860:
  8464  1BE3                     l3146:
  8465  1BE3  1003               	clrc
  8466  1BE4  2BE6               	goto	l601
  8467  1BE5                     l3148:
  8468  1BE5  1403               	setc
  8469  1BE6                     l601:
  8470  1BE6  0008               	return
  8471  1BE7                     __end_of___fleq:
  8472                           
  8473                           	psect	text25
  8474  19B2                     __ptext25:	
  8475 ;; *************** function _setup *****************
  8476 ;; Defined at:
  8477 ;;		line 117 in file "lab2_main.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;		None
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      void 
  8484 ;; Registers used:
  8485 ;;		status,2
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8491 ;;      Params:         0       0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0
  8494 ;;      Totals:         0       0       0       0       0
  8495 ;;Total ram usage:        0 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_main
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           
  8505                           ;psect for function _setup
  8506  19B2                     _setup:
  8507  19B2                     l3286:	
  8508                           ;incstack = 0
  8509                           ; Regs used in _setup: [status,2]
  8510                           
  8511                           
  8512                           ;lab2_main.c: 118:     ANSEL = 0;
  8513  19B2  1683               	bsf	3,5	;RP0=1, select bank3
  8514  19B3  1703               	bsf	3,6	;RP1=1, select bank3
  8515  19B4  0188               	clrf	8	;volatile
  8516                           
  8517                           ;lab2_main.c: 119:     ANSELH = 0;
  8518  19B5  0189               	clrf	9	;volatile
  8519  19B6                     l3288:
  8520                           
  8521                           ;lab2_main.c: 122:     TRISAbits.TRISA0 = 1;
  8522  19B6  1683               	bsf	3,5	;RP0=1, select bank1
  8523  19B7  1303               	bcf	3,6	;RP1=0, select bank1
  8524  19B8  1405               	bsf	5,0	;volatile
  8525  19B9                     l3290:
  8526                           
  8527                           ;lab2_main.c: 123:     TRISAbits.TRISA1 = 1;
  8528  19B9  1485               	bsf	5,1	;volatile
  8529                           
  8530                           ;lab2_main.c: 126:     TRISD = 0;
  8531  19BA  0188               	clrf	8	;volatile
  8532                           
  8533                           ;lab2_main.c: 127:     TRISE = 0;
  8534  19BB  0189               	clrf	9	;volatile
  8535                           
  8536                           ;lab2_main.c: 129:     PORTA = 0;
  8537  19BC  1283               	bcf	3,5	;RP0=0, select bank0
  8538  19BD  1303               	bcf	3,6	;RP1=0, select bank0
  8539  19BE  0185               	clrf	5	;volatile
  8540                           
  8541                           ;lab2_main.c: 130:     PORTC = 0;
  8542  19BF  0187               	clrf	7	;volatile
  8543                           
  8544                           ;lab2_main.c: 131:     PORTD = 0;
  8545  19C0  0188               	clrf	8	;volatile
  8546                           
  8547                           ;lab2_main.c: 132:     PORTE = 0;
  8548  19C1  0189               	clrf	9	;volatile
  8549  19C2                     l3292:
  8550                           
  8551                           ;lab2_main.c: 135:     INTCONbits.PEIE = 1;
  8552  19C2  170B               	bsf	11,6	;volatile
  8553  19C3                     l3294:
  8554                           
  8555                           ;lab2_main.c: 136:     PIE1bits.RCIE = 1;
  8556  19C3  1683               	bsf	3,5	;RP0=1, select bank1
  8557  19C4  1303               	bcf	3,6	;RP1=0, select bank1
  8558  19C5  168C               	bsf	12,5	;volatile
  8559  19C6                     l3296:
  8560                           
  8561                           ;lab2_main.c: 137:     PIR1bits.RCIF = 0;
  8562  19C6  1283               	bcf	3,5	;RP0=0, select bank0
  8563  19C7  1303               	bcf	3,6	;RP1=0, select bank0
  8564  19C8  128C               	bcf	12,5	;volatile
  8565  19C9                     l3298:
  8566                           
  8567                           ;lab2_main.c: 138:     INTCONbits.GIE = 1;
  8568  19C9  178B               	bsf	11,7	;volatile
  8569  19CA                     l67:
  8570  19CA  0008               	return
  8571  19CB                     __end_of_setup:
  8572                           
  8573                           	psect	text26
  8574  1A07                     __ptext26:	
  8575 ;; *************** function _cursor *****************
  8576 ;; Defined at:
  8577 ;;		line 57 in file "LCD.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  a               1    wreg     unsigned char 
  8580 ;;  b               1    4[COMMON] unsigned char 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  a               1    6[COMMON] unsigned char 
  8583 ;;  x               1    7[COMMON] unsigned char 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      void 
  8586 ;; Registers used:
  8587 ;;		wreg, status,2, status,0, pclath, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8593 ;;      Params:         1       0       0       0       0
  8594 ;;      Locals:         2       0       0       0       0
  8595 ;;      Temps:          1       0       0       0       0
  8596 ;;      Totals:         4       0       0       0       0
  8597 ;;Total ram usage:        4 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    2
  8600 ;; This function calls:
  8601 ;;		_CMDs
  8602 ;; This function is called by:
  8603 ;;		_main
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           
  8608                           ;psect for function _cursor
  8609  1A07                     _cursor:
  8610                           
  8611                           ;incstack = 0
  8612                           ; Regs used in _cursor: [wreg+status,2+status,0+pclath+cstack]
  8613                           ;cursor@a stored from wreg
  8614  1A07  00F6               	movwf	cursor@a
  8615  1A08                     l3326:
  8616                           
  8617                           ;LCD.c: 58:     uint8_t x;;LCD.c: 59:     if (a == 1){
  8618  1A08  0376               	decf	cursor@a,w
  8619  1A09  1D03               	btfss	3,2
  8620  1A0A  2A0C               	goto	u5251
  8621  1A0B  2A0D               	goto	u5250
  8622  1A0C                     u5251:
  8623  1A0C  2A19               	goto	l3332
  8624  1A0D                     u5250:
  8625  1A0D                     l3328:
  8626                           
  8627                           ;LCD.c: 60:        x = 0x80 + b;
  8628  1A0D  0874               	movf	cursor@b,w
  8629  1A0E  3E80               	addlw	128
  8630  1A0F  00F5               	movwf	??_cursor
  8631  1A10  0875               	movf	??_cursor,w
  8632  1A11  00F7               	movwf	cursor@x
  8633  1A12                     l3330:
  8634                           
  8635                           ;LCD.c: 61:        CMDs(x);
  8636  1A12  0877               	movf	cursor@x,w
  8637  1A13  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8638                           
  8639                           ;LCD.c: 62:     }
  8640  1A18  2A2A               	goto	l155
  8641  1A19                     l3332:
  8642  1A19  3002               	movlw	2
  8643  1A1A  0676               	xorwf	cursor@a,w
  8644  1A1B  1D03               	btfss	3,2
  8645  1A1C  2A1E               	goto	u5261
  8646  1A1D  2A1F               	goto	u5260
  8647  1A1E                     u5261:
  8648  1A1E  2A2A               	goto	l155
  8649  1A1F                     u5260:
  8650  1A1F                     l3334:
  8651                           
  8652                           ;LCD.c: 64:         x = 0xC0 + b;
  8653  1A1F  0874               	movf	cursor@b,w
  8654  1A20  3EC0               	addlw	192
  8655  1A21  00F5               	movwf	??_cursor
  8656  1A22  0875               	movf	??_cursor,w
  8657  1A23  00F7               	movwf	cursor@x
  8658  1A24                     l3336:
  8659                           
  8660                           ;LCD.c: 65:         CMDs(x);
  8661  1A24  0877               	movf	cursor@x,w
  8662  1A25  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8663  1A2A                     l155:
  8664  1A2A  0008               	return
  8665  1A2B                     __end_of_cursor:
  8666                           
  8667                           	psect	text27
  8668  1C96                     __ptext27:	
  8669 ;; *************** function _configLCD *****************
  8670 ;; Defined at:
  8671 ;;		line 69 in file "LCD.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;		None
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0, pclath, cstack
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8685 ;;      Params:         0       0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0
  8687 ;;      Temps:          2       0       0       0       0
  8688 ;;      Totals:         2       0       0       0       0
  8689 ;;Total ram usage:        2 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; Hardware stack levels required when called:    2
  8692 ;; This function calls:
  8693 ;;		_CMDs
  8694 ;; This function is called by:
  8695 ;;		_main
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           
  8700                           ;psect for function _configLCD
  8701  1C96                     _configLCD:
  8702  1C96                     l3300:	
  8703                           ;incstack = 0
  8704                           ; Regs used in _configLCD: [wreg+status,2+status,0+pclath+cstack]
  8705                           
  8706                           
  8707                           ;LCD.c: 70:     _delay((unsigned long)((20)*(4000000/4000.0)));
  8708  1C96  301A               	movlw	26
  8709  1C97  00F5               	movwf	??_configLCD+1
  8710  1C98  30F8               	movlw	248
  8711  1C99  00F4               	movwf	??_configLCD
  8712  1C9A                     u5867:
  8713  1C9A  0BF4               	decfsz	??_configLCD,f
  8714  1C9B  2C9A               	goto	u5867
  8715  1C9C  0BF5               	decfsz	??_configLCD+1,f
  8716  1C9D  2C9A               	goto	u5867
  8717  1C9E  0000               	nop
  8718  1C9F                     l3302:
  8719                           
  8720                           ;LCD.c: 71:     CMDs (0x30);
  8721  1C9F  3030               	movlw	48
  8722  1CA0  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8723  1CA5                     l3304:
  8724                           
  8725                           ;LCD.c: 72:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8726  1CA5  3007               	movlw	7
  8727  1CA6  00F5               	movwf	??_configLCD+1
  8728  1CA7  307D               	movlw	125
  8729  1CA8  00F4               	movwf	??_configLCD
  8730  1CA9                     u5877:
  8731  1CA9  0BF4               	decfsz	??_configLCD,f
  8732  1CAA  2CA9               	goto	u5877
  8733  1CAB  0BF5               	decfsz	??_configLCD+1,f
  8734  1CAC  2CA9               	goto	u5877
  8735                           
  8736                           ;LCD.c: 73:     CMDs (0x30);
  8737  1CAD  3030               	movlw	48
  8738  1CAE  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8739  1CB3                     l3306:
  8740                           
  8741                           ;LCD.c: 74:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  8742  1CB3  3021               	movlw	33
  8743  1CB4  00F4               	movwf	??_configLCD
  8744  1CB5                     u5887:
  8745  1CB5  0BF4               	decfsz	??_configLCD,f
  8746  1CB6  2CB5               	goto	u5887
  8747  1CB7                     l3308:
  8748                           
  8749                           ;LCD.c: 75:     CMDs (0x30);
  8750  1CB7  3030               	movlw	48
  8751  1CB8  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8752                           
  8753                           ;LCD.c: 76:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  8754  1CBD  3021               	movlw	33
  8755  1CBE  00F4               	movwf	??_configLCD
  8756  1CBF                     u5897:
  8757  1CBF  0BF4               	decfsz	??_configLCD,f
  8758  1CC0  2CBF               	goto	u5897
  8759  1CC1                     l3310:
  8760                           
  8761                           ;LCD.c: 77:     CMDs (0x38);
  8762  1CC1  3038               	movlw	56
  8763  1CC2  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8764  1CC7                     l3312:
  8765                           
  8766                           ;LCD.c: 78:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8767  1CC7  3013               	movlw	19
  8768  1CC8  00F4               	movwf	??_configLCD
  8769  1CC9                     u5907:
  8770  1CC9  0BF4               	decfsz	??_configLCD,f
  8771  1CCA  2CC9               	goto	u5907
  8772  1CCB  2CCC               	nop2
  8773                           
  8774                           ;LCD.c: 79:     CMDs (0x08);
  8775  1CCC  3008               	movlw	8
  8776  1CCD  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8777  1CD2                     l3314:
  8778                           
  8779                           ;LCD.c: 80:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8780  1CD2  3013               	movlw	19
  8781  1CD3  00F4               	movwf	??_configLCD
  8782  1CD4                     u5917:
  8783  1CD4  0BF4               	decfsz	??_configLCD,f
  8784  1CD5  2CD4               	goto	u5917
  8785  1CD6  2CD7               	nop2
  8786  1CD7                     l3316:
  8787                           
  8788                           ;LCD.c: 81:     CMDs (0x01);
  8789  1CD7  3001               	movlw	1
  8790  1CD8  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8791                           
  8792                           ;LCD.c: 82:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8793  1CDD  3007               	movlw	7
  8794  1CDE  00F5               	movwf	??_configLCD+1
  8795  1CDF  307D               	movlw	125
  8796  1CE0  00F4               	movwf	??_configLCD
  8797  1CE1                     u5927:
  8798  1CE1  0BF4               	decfsz	??_configLCD,f
  8799  1CE2  2CE1               	goto	u5927
  8800  1CE3  0BF5               	decfsz	??_configLCD+1,f
  8801  1CE4  2CE1               	goto	u5927
  8802  1CE5                     l3318:
  8803                           
  8804                           ;LCD.c: 83:     CMDs (0x06);
  8805  1CE5  3006               	movlw	6
  8806  1CE6  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8807  1CEB                     l3320:
  8808                           
  8809                           ;LCD.c: 84:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8810  1CEB  3013               	movlw	19
  8811  1CEC  00F4               	movwf	??_configLCD
  8812  1CED                     u5937:
  8813  1CED  0BF4               	decfsz	??_configLCD,f
  8814  1CEE  2CED               	goto	u5937
  8815  1CEF  2CF0               	nop2
  8816                           
  8817                           ;LCD.c: 85:     CMDs (0x0C);
  8818  1CF0  300C               	movlw	12
  8819  1CF1  160A  158A  21E7  160A  158A  	fcall	_CMDs
  8820  1CF6                     l3322:
  8821                           
  8822                           ;LCD.c: 86:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8823  1CF6  3013               	movlw	19
  8824  1CF7  00F4               	movwf	??_configLCD
  8825  1CF8                     u5947:
  8826  1CF8  0BF4               	decfsz	??_configLCD,f
  8827  1CF9  2CF8               	goto	u5947
  8828  1CFA  2CFB               	nop2
  8829  1CFB                     l158:
  8830  1CFB  0008               	return
  8831  1CFC                     __end_of_configLCD:
  8832                           
  8833                           	psect	text28
  8834  0007                     __ptext28:	
  8835 ;; *************** function _configADC *****************
  8836 ;; Defined at:
  8837 ;;		line 7 in file "ADC.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  ch              1    wreg     unsigned char 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  ch              1    2[COMMON] unsigned char 
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      unsigned char 
  8844 ;; Registers used:
  8845 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8851 ;;      Params:         0       0       0       0       0
  8852 ;;      Locals:         1       0       0       0       0
  8853 ;;      Temps:          2       0       0       0       0
  8854 ;;      Totals:         3       0       0       0       0
  8855 ;;Total ram usage:        3 bytes
  8856 ;; Hardware stack levels used:    1
  8857 ;; This function calls:
  8858 ;;		Nothing
  8859 ;; This function is called by:
  8860 ;;		_main
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           
  8865                           ;psect for function _configADC
  8866  0007                     _configADC:
  8867                           
  8868                           ;incstack = 0
  8869                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
  8870                           ;configADC@ch stored from wreg
  8871  0007  00F2               	movwf	configADC@ch
  8872  0008                     l3346:
  8873                           
  8874                           ;ADC.c: 8:     ADCON0bits.ADCS = 1;
  8875  0008  1283               	bcf	3,5	;RP0=0, select bank0
  8876  0009  1303               	bcf	3,6	;RP1=0, select bank0
  8877  000A  081F               	movf	31,w	;volatile
  8878  000B  393F               	andlw	-193
  8879  000C  3840               	iorlw	64
  8880  000D  009F               	movwf	31	;volatile
  8881  000E                     l3348:
  8882                           
  8883                           ;ADC.c: 9:     ADCON1 = 0;
  8884  000E  1683               	bsf	3,5	;RP0=1, select bank1
  8885  000F  1303               	bcf	3,6	;RP1=0, select bank1
  8886  0010  019F               	clrf	31	;volatile
  8887                           
  8888                           ;ADC.c: 11:     switch (ch) {
  8889  0011  289E               	goto	l3384
  8890  0012                     l83:	
  8891                           ;ADC.c: 12:         case 0:
  8892                           
  8893                           
  8894                           ;ADC.c: 13:             ANSELbits.ANS0 = 1;
  8895  0012  1683               	bsf	3,5	;RP0=1, select bank3
  8896  0013  1703               	bsf	3,6	;RP1=1, select bank3
  8897  0014  1408               	bsf	8,0	;volatile
  8898  0015                     l3350:
  8899                           
  8900                           ;ADC.c: 14:             ADCON0bits.CHS = 0;
  8901  0015  30C3               	movlw	-61
  8902  0016  1283               	bcf	3,5	;RP0=0, select bank0
  8903  0017  1303               	bcf	3,6	;RP1=0, select bank0
  8904  0018  059F               	andwf	31,f	;volatile
  8905                           
  8906                           ;ADC.c: 15:             break;
  8907  0019  28D2               	goto	l84
  8908  001A                     l85:	
  8909                           ;ADC.c: 16:         case 1:
  8910                           
  8911                           
  8912                           ;ADC.c: 17:             ANSELbits.ANS1=1;
  8913  001A  1683               	bsf	3,5	;RP0=1, select bank3
  8914  001B  1703               	bsf	3,6	;RP1=1, select bank3
  8915  001C  1488               	bsf	8,1	;volatile
  8916  001D                     l3352:
  8917                           
  8918                           ;ADC.c: 18:             ADCON0bits.CHS=1;
  8919  001D  1283               	bcf	3,5	;RP0=0, select bank0
  8920  001E  1303               	bcf	3,6	;RP1=0, select bank0
  8921  001F  081F               	movf	31,w	;volatile
  8922  0020  39C3               	andlw	-61
  8923  0021  3804               	iorlw	4
  8924  0022  009F               	movwf	31	;volatile
  8925                           
  8926                           ;ADC.c: 19:             break;
  8927  0023  28D2               	goto	l84
  8928  0024                     l86:	
  8929                           ;ADC.c: 20:         case 2:
  8930                           
  8931                           
  8932                           ;ADC.c: 21:             ANSELbits.ANS2=1;
  8933  0024  1683               	bsf	3,5	;RP0=1, select bank3
  8934  0025  1703               	bsf	3,6	;RP1=1, select bank3
  8935  0026  1508               	bsf	8,2	;volatile
  8936  0027                     l3354:
  8937                           
  8938                           ;ADC.c: 22:             ADCON0bits.CHS=2;
  8939  0027  1283               	bcf	3,5	;RP0=0, select bank0
  8940  0028  1303               	bcf	3,6	;RP1=0, select bank0
  8941  0029  081F               	movf	31,w	;volatile
  8942  002A  39C3               	andlw	-61
  8943  002B  3808               	iorlw	8
  8944  002C  009F               	movwf	31	;volatile
  8945                           
  8946                           ;ADC.c: 23:             break;
  8947  002D  28D2               	goto	l84
  8948  002E                     l87:	
  8949                           ;ADC.c: 24:         case 3:
  8950                           
  8951                           
  8952                           ;ADC.c: 25:             ANSELbits.ANS3=1;
  8953  002E  1683               	bsf	3,5	;RP0=1, select bank3
  8954  002F  1703               	bsf	3,6	;RP1=1, select bank3
  8955  0030  1588               	bsf	8,3	;volatile
  8956  0031                     l3356:
  8957                           
  8958                           ;ADC.c: 26:             ADCON0bits.CHS=3;
  8959  0031  1283               	bcf	3,5	;RP0=0, select bank0
  8960  0032  1303               	bcf	3,6	;RP1=0, select bank0
  8961  0033  081F               	movf	31,w	;volatile
  8962  0034  39C3               	andlw	-61
  8963  0035  380C               	iorlw	12
  8964  0036  009F               	movwf	31	;volatile
  8965                           
  8966                           ;ADC.c: 27:             break;
  8967  0037  28D2               	goto	l84
  8968  0038                     l88:	
  8969                           ;ADC.c: 28:         case 4:
  8970                           
  8971                           
  8972                           ;ADC.c: 29:             ANSELbits.ANS4=1;
  8973  0038  1683               	bsf	3,5	;RP0=1, select bank3
  8974  0039  1703               	bsf	3,6	;RP1=1, select bank3
  8975  003A  1608               	bsf	8,4	;volatile
  8976  003B                     l3358:
  8977                           
  8978                           ;ADC.c: 30:             ADCON0bits.CHS=4;
  8979  003B  1283               	bcf	3,5	;RP0=0, select bank0
  8980  003C  1303               	bcf	3,6	;RP1=0, select bank0
  8981  003D  081F               	movf	31,w	;volatile
  8982  003E  39C3               	andlw	-61
  8983  003F  3810               	iorlw	16
  8984  0040  009F               	movwf	31	;volatile
  8985                           
  8986                           ;ADC.c: 31:             break;
  8987  0041  28D2               	goto	l84
  8988  0042                     l89:	
  8989                           ;ADC.c: 32:         case 5:
  8990                           
  8991                           
  8992                           ;ADC.c: 33:             ANSELbits.ANS5=1;
  8993  0042  1683               	bsf	3,5	;RP0=1, select bank3
  8994  0043  1703               	bsf	3,6	;RP1=1, select bank3
  8995  0044  1688               	bsf	8,5	;volatile
  8996  0045                     l3360:
  8997                           
  8998                           ;ADC.c: 34:             ADCON0bits.CHS=5;
  8999  0045  1283               	bcf	3,5	;RP0=0, select bank0
  9000  0046  1303               	bcf	3,6	;RP1=0, select bank0
  9001  0047  081F               	movf	31,w	;volatile
  9002  0048  39C3               	andlw	-61
  9003  0049  3814               	iorlw	20
  9004  004A  009F               	movwf	31	;volatile
  9005                           
  9006                           ;ADC.c: 35:             break;
  9007  004B  28D2               	goto	l84
  9008  004C                     l90:	
  9009                           ;ADC.c: 36:         case 6:
  9010                           
  9011                           
  9012                           ;ADC.c: 37:             ANSELbits.ANS6=1;
  9013  004C  1683               	bsf	3,5	;RP0=1, select bank3
  9014  004D  1703               	bsf	3,6	;RP1=1, select bank3
  9015  004E  1708               	bsf	8,6	;volatile
  9016  004F                     l3362:
  9017                           
  9018                           ;ADC.c: 38:             ADCON0bits.CHS=6;
  9019  004F  1283               	bcf	3,5	;RP0=0, select bank0
  9020  0050  1303               	bcf	3,6	;RP1=0, select bank0
  9021  0051  081F               	movf	31,w	;volatile
  9022  0052  39C3               	andlw	-61
  9023  0053  3818               	iorlw	24
  9024  0054  009F               	movwf	31	;volatile
  9025                           
  9026                           ;ADC.c: 39:             break;
  9027  0055  28D2               	goto	l84
  9028  0056                     l91:	
  9029                           ;ADC.c: 40:         case 7:
  9030                           
  9031                           
  9032                           ;ADC.c: 41:             ANSELbits.ANS7=1;
  9033  0056  1683               	bsf	3,5	;RP0=1, select bank3
  9034  0057  1703               	bsf	3,6	;RP1=1, select bank3
  9035  0058  1788               	bsf	8,7	;volatile
  9036  0059                     l3364:
  9037                           
  9038                           ;ADC.c: 42:             ADCON0bits.CHS=7;
  9039  0059  1283               	bcf	3,5	;RP0=0, select bank0
  9040  005A  1303               	bcf	3,6	;RP1=0, select bank0
  9041  005B  081F               	movf	31,w	;volatile
  9042  005C  39C3               	andlw	-61
  9043  005D  381C               	iorlw	28
  9044  005E  009F               	movwf	31	;volatile
  9045                           
  9046                           ;ADC.c: 43:             break;
  9047  005F  28D2               	goto	l84
  9048  0060                     l92:	
  9049                           ;ADC.c: 44:         case 8:
  9050                           
  9051                           
  9052                           ;ADC.c: 45:             ANSELHbits.ANS8=1;
  9053  0060  1683               	bsf	3,5	;RP0=1, select bank3
  9054  0061  1703               	bsf	3,6	;RP1=1, select bank3
  9055  0062  1409               	bsf	9,0	;volatile
  9056  0063                     l3366:
  9057                           
  9058                           ;ADC.c: 46:             ADCON0bits.CHS=8;
  9059  0063  1283               	bcf	3,5	;RP0=0, select bank0
  9060  0064  1303               	bcf	3,6	;RP1=0, select bank0
  9061  0065  081F               	movf	31,w	;volatile
  9062  0066  39C3               	andlw	-61
  9063  0067  3820               	iorlw	32
  9064  0068  009F               	movwf	31	;volatile
  9065                           
  9066                           ;ADC.c: 47:             break;
  9067  0069  28D2               	goto	l84
  9068  006A                     l93:	
  9069                           ;ADC.c: 48:         case 9:
  9070                           
  9071                           
  9072                           ;ADC.c: 49:             ANSELHbits.ANS9=1;
  9073  006A  1683               	bsf	3,5	;RP0=1, select bank3
  9074  006B  1703               	bsf	3,6	;RP1=1, select bank3
  9075  006C  1489               	bsf	9,1	;volatile
  9076  006D                     l3368:
  9077                           
  9078                           ;ADC.c: 50:             ADCON0bits.CHS=9;
  9079  006D  1283               	bcf	3,5	;RP0=0, select bank0
  9080  006E  1303               	bcf	3,6	;RP1=0, select bank0
  9081  006F  081F               	movf	31,w	;volatile
  9082  0070  39C3               	andlw	-61
  9083  0071  3824               	iorlw	36
  9084  0072  009F               	movwf	31	;volatile
  9085                           
  9086                           ;ADC.c: 51:             break;
  9087  0073  28D2               	goto	l84
  9088  0074                     l94:	
  9089                           ;ADC.c: 52:         case 10:
  9090                           
  9091                           
  9092                           ;ADC.c: 53:             ANSELHbits.ANS10=1;
  9093  0074  1683               	bsf	3,5	;RP0=1, select bank3
  9094  0075  1703               	bsf	3,6	;RP1=1, select bank3
  9095  0076  1509               	bsf	9,2	;volatile
  9096  0077                     l3370:
  9097                           
  9098                           ;ADC.c: 54:             ADCON0bits.CHS=10;
  9099  0077  1283               	bcf	3,5	;RP0=0, select bank0
  9100  0078  1303               	bcf	3,6	;RP1=0, select bank0
  9101  0079  081F               	movf	31,w	;volatile
  9102  007A  39C3               	andlw	-61
  9103  007B  3828               	iorlw	40
  9104  007C  009F               	movwf	31	;volatile
  9105                           
  9106                           ;ADC.c: 55:             break;
  9107  007D  28D2               	goto	l84
  9108  007E                     l95:	
  9109                           ;ADC.c: 56:         case 11:
  9110                           
  9111                           
  9112                           ;ADC.c: 57:             ANSELHbits.ANS11=1;
  9113  007E  1683               	bsf	3,5	;RP0=1, select bank3
  9114  007F  1703               	bsf	3,6	;RP1=1, select bank3
  9115  0080  1589               	bsf	9,3	;volatile
  9116  0081                     l3372:
  9117                           
  9118                           ;ADC.c: 58:             ADCON0bits.CHS=11;
  9119  0081  1283               	bcf	3,5	;RP0=0, select bank0
  9120  0082  1303               	bcf	3,6	;RP1=0, select bank0
  9121  0083  081F               	movf	31,w	;volatile
  9122  0084  39C3               	andlw	-61
  9123  0085  382C               	iorlw	44
  9124  0086  009F               	movwf	31	;volatile
  9125                           
  9126                           ;ADC.c: 59:             break;
  9127  0087  28D2               	goto	l84
  9128  0088                     l96:	
  9129                           ;ADC.c: 60:         case 12:
  9130                           
  9131                           
  9132                           ;ADC.c: 61:             ANSELHbits.ANS12=1;
  9133  0088  1683               	bsf	3,5	;RP0=1, select bank3
  9134  0089  1703               	bsf	3,6	;RP1=1, select bank3
  9135  008A  1609               	bsf	9,4	;volatile
  9136  008B                     l3374:
  9137                           
  9138                           ;ADC.c: 62:             ADCON0bits.CHS=12;
  9139  008B  1283               	bcf	3,5	;RP0=0, select bank0
  9140  008C  1303               	bcf	3,6	;RP1=0, select bank0
  9141  008D  081F               	movf	31,w	;volatile
  9142  008E  39C3               	andlw	-61
  9143  008F  3830               	iorlw	48
  9144  0090  009F               	movwf	31	;volatile
  9145                           
  9146                           ;ADC.c: 63:             break;
  9147  0091  28D2               	goto	l84
  9148  0092                     l97:	
  9149                           ;ADC.c: 64:         case 13:
  9150                           
  9151                           
  9152                           ;ADC.c: 65:             ANSELHbits.ANS13=1;
  9153  0092  1683               	bsf	3,5	;RP0=1, select bank3
  9154  0093  1703               	bsf	3,6	;RP1=1, select bank3
  9155  0094  1689               	bsf	9,5	;volatile
  9156  0095                     l3376:
  9157                           
  9158                           ;ADC.c: 66:             ADCON0bits.CHS=13;
  9159  0095  1283               	bcf	3,5	;RP0=0, select bank0
  9160  0096  1303               	bcf	3,6	;RP1=0, select bank0
  9161  0097  081F               	movf	31,w	;volatile
  9162  0098  39C3               	andlw	-61
  9163  0099  3834               	iorlw	52
  9164  009A  009F               	movwf	31	;volatile
  9165                           
  9166                           ;ADC.c: 67:             break;
  9167  009B  28D2               	goto	l84
  9168  009C                     l3378:
  9169                           
  9170                           ;ADC.c: 69:             return 0;
  9171  009C  3000               	movlw	0
  9172  009D  28E1               	goto	l99
  9173  009E                     l3384:
  9174  009E  0872               	movf	configADC@ch,w
  9175  009F  00F0               	movwf	??_configADC
  9176  00A0  01F1               	clrf	??_configADC+1
  9177                           
  9178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9179                           ; Switch size 1, requested type "simple"
  9180                           ; Number of cases is 1, Range of values is 0 to 0
  9181                           ; switch strategies available:
  9182                           ; Name         Instructions Cycles
  9183                           ; simple_byte            4     3 (average)
  9184                           ; direct_byte           11     8 (fixed)
  9185                           ; jumptable            260     6 (fixed)
  9186                           ;	Chosen strategy is simple_byte
  9187  00A1  0871               	movf	??_configADC+1,w
  9188  00A2  3A00               	xorlw	0	; case 0
  9189  00A3  1903               	skipnz
  9190  00A4  28A6               	goto	l3790
  9191  00A5  289C               	goto	l3378
  9192  00A6                     l3790:
  9193                           
  9194                           ; Switch size 1, requested type "simple"
  9195                           ; Number of cases is 14, Range of values is 0 to 13
  9196                           ; switch strategies available:
  9197                           ; Name         Instructions Cycles
  9198                           ; simple_byte           43    22 (average)
  9199                           ; direct_byte           50     8 (fixed)
  9200                           ; jumptable            260     6 (fixed)
  9201                           ;	Chosen strategy is simple_byte
  9202  00A6  0870               	movf	??_configADC,w
  9203  00A7  3A00               	xorlw	0	; case 0
  9204  00A8  1903               	skipnz
  9205  00A9  2812               	goto	l83
  9206  00AA  3A01               	xorlw	1	; case 1
  9207  00AB  1903               	skipnz
  9208  00AC  281A               	goto	l85
  9209  00AD  3A03               	xorlw	3	; case 2
  9210  00AE  1903               	skipnz
  9211  00AF  2824               	goto	l86
  9212  00B0  3A01               	xorlw	1	; case 3
  9213  00B1  1903               	skipnz
  9214  00B2  282E               	goto	l87
  9215  00B3  3A07               	xorlw	7	; case 4
  9216  00B4  1903               	skipnz
  9217  00B5  2838               	goto	l88
  9218  00B6  3A01               	xorlw	1	; case 5
  9219  00B7  1903               	skipnz
  9220  00B8  2842               	goto	l89
  9221  00B9  3A03               	xorlw	3	; case 6
  9222  00BA  1903               	skipnz
  9223  00BB  284C               	goto	l90
  9224  00BC  3A01               	xorlw	1	; case 7
  9225  00BD  1903               	skipnz
  9226  00BE  2856               	goto	l91
  9227  00BF  3A0F               	xorlw	15	; case 8
  9228  00C0  1903               	skipnz
  9229  00C1  2860               	goto	l92
  9230  00C2  3A01               	xorlw	1	; case 9
  9231  00C3  1903               	skipnz
  9232  00C4  286A               	goto	l93
  9233  00C5  3A03               	xorlw	3	; case 10
  9234  00C6  1903               	skipnz
  9235  00C7  2874               	goto	l94
  9236  00C8  3A01               	xorlw	1	; case 11
  9237  00C9  1903               	skipnz
  9238  00CA  287E               	goto	l95
  9239  00CB  3A07               	xorlw	7	; case 12
  9240  00CC  1903               	skipnz
  9241  00CD  2888               	goto	l96
  9242  00CE  3A01               	xorlw	1	; case 13
  9243  00CF  1903               	skipnz
  9244  00D0  2892               	goto	l97
  9245  00D1  289C               	goto	l3378
  9246  00D2                     l84:
  9247                           
  9248                           ;ADC.c: 72:     ADCON0bits.ADON = 1;
  9249  00D2  141F               	bsf	31,0	;volatile
  9250  00D3                     l3386:
  9251                           
  9252                           ;ADC.c: 73:     _delay((unsigned long)((0.25)*(4000000/4000.0)));
  9253  00D3  3053               	movlw	83
  9254  00D4  00F0               	movwf	??_configADC
  9255  00D5                     u5957:
  9256  00D5  0BF0               	decfsz	??_configADC,f
  9257  00D6  28D5               	goto	u5957
  9258  00D7                     l3388:
  9259                           
  9260                           ;ADC.c: 74:     ADCON0bits.GO = 1;
  9261  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  9262  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  9263  00D9  149F               	bsf	31,1	;volatile
  9264  00DA                     l3390:
  9265                           
  9266                           ;ADC.c: 77:     if (ADCON0bits.GO_DONE == 1){
  9267  00DA  1C9F               	btfss	31,1	;volatile
  9268  00DB  28DD               	goto	u5301
  9269  00DC  28DE               	goto	u5300
  9270  00DD                     u5301:
  9271  00DD  28DF               	goto	l101
  9272  00DE                     u5300:
  9273  00DE  28DA               	goto	l3390
  9274  00DF                     l101:	
  9275                           ;ADC.c: 80:     else{
  9276                           
  9277                           
  9278                           ;ADC.c: 81:         ADCON0bits.ADON = 0;
  9279  00DF  101F               	bcf	31,0	;volatile
  9280  00E0                     l3396:
  9281                           
  9282                           ;ADC.c: 82:         return ADRESH;
  9283  00E0  081E               	movf	30,w	;volatile
  9284  00E1                     l99:
  9285  00E1  0008               	return
  9286  00E2                     __end_of_configADC:
  9287                           
  9288                           	psect	text29
  9289  1993                     __ptext29:	
  9290 ;; *************** function _clear_LCD *****************
  9291 ;; Defined at:
  9292 ;;		line 52 in file "LCD.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;		None
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, status,2, status,0, pclath, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9306 ;;      Params:         0       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0
  9309 ;;      Totals:         0       0       0       0       0
  9310 ;;Total ram usage:        0 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:    2
  9313 ;; This function calls:
  9314 ;;		_CMDs
  9315 ;; This function is called by:
  9316 ;;		_main
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           
  9321                           ;psect for function _clear_LCD
  9322  1993                     _clear_LCD:
  9323  1993                     l3324:	
  9324                           ;incstack = 0
  9325                           ; Regs used in _clear_LCD: [wreg+status,2+status,0+pclath+cstack]
  9326                           
  9327                           
  9328                           ;LCD.c: 53:     CMDs(0);
  9329  1993  3000               	movlw	0
  9330  1994  160A  158A  21E7  160A  158A  	fcall	_CMDs
  9331                           
  9332                           ;LCD.c: 54:     CMDs(1);
  9333  1999  3001               	movlw	1
  9334  199A  160A  158A  21E7  160A  158A  	fcall	_CMDs
  9335  199F                     l149:
  9336  199F  0008               	return
  9337  19A0                     __end_of_clear_LCD:
  9338                           
  9339                           	psect	text30
  9340  19E7                     __ptext30:	
  9341 ;; *************** function _CMDs *****************
  9342 ;; Defined at:
  9343 ;;		line 42 in file "LCD.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;  a               1    wreg     unsigned char 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  a               1    3[COMMON] unsigned char 
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  1    wreg      void 
  9350 ;; Registers used:
  9351 ;;		wreg, status,2, status,0, pclath, cstack
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9357 ;;      Params:         0       0       0       0       0
  9358 ;;      Locals:         1       0       0       0       0
  9359 ;;      Temps:          2       0       0       0       0
  9360 ;;      Totals:         3       0       0       0       0
  9361 ;;Total ram usage:        3 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; Hardware stack levels required when called:    1
  9364 ;; This function calls:
  9365 ;;		_pin
  9366 ;; This function is called by:
  9367 ;;		_clear_LCD
  9368 ;;		_cursor
  9369 ;;		_configLCD
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           
  9374                           ;psect for function _CMDs
  9375  19E7                     _CMDs:
  9376                           
  9377                           ;incstack = 0
  9378                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  9379                           ;CMDs@a stored from wreg
  9380  19E7  00F3               	movwf	CMDs@a
  9381  19E8                     l2900:
  9382                           
  9383                           ;LCD.c: 43:     RE0 = 0;
  9384  19E8  1283               	bcf	3,5	;RP0=0, select bank0
  9385  19E9  1303               	bcf	3,6	;RP1=0, select bank0
  9386  19EA  1009               	bcf	9,0	;volatile
  9387  19EB                     l2902:
  9388                           
  9389                           ;LCD.c: 44:     pin(a);
  9390  19EB  0873               	movf	CMDs@a,w
  9391  19EC  160A  158A  22D5  160A  158A  	fcall	_pin
  9392  19F1                     l2904:
  9393                           
  9394                           ;LCD.c: 45:     RE1 = 1;
  9395  19F1  1283               	bcf	3,5	;RP0=0, select bank0
  9396  19F2  1303               	bcf	3,6	;RP1=0, select bank0
  9397  19F3  1489               	bsf	9,1	;volatile
  9398  19F4                     l2906:
  9399                           
  9400                           ;LCD.c: 46:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9401  19F4  29F5               	nop2	;2 cycle nop
  9402  19F5  29F6               	nop2	;2 cycle nop
  9403  19F6  0000               	nop
  9404  19F7                     l2908:
  9405                           
  9406                           ;LCD.c: 47:     RE1 = 0;
  9407  19F7  1283               	bcf	3,5	;RP0=0, select bank0
  9408  19F8  1303               	bcf	3,6	;RP1=0, select bank0
  9409  19F9  1089               	bcf	9,1	;volatile
  9410  19FA                     l2910:
  9411                           
  9412                           ;LCD.c: 48:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9413  19FA  29FB               	nop2	;2 cycle nop
  9414  19FB  29FC               	nop2	;2 cycle nop
  9415  19FC  0000               	nop
  9416  19FD                     l2912:
  9417                           
  9418                           ;LCD.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
  9419  19FD  3003               	movlw	3
  9420  19FE  00F2               	movwf	??_CMDs+1
  9421  19FF  3097               	movlw	151
  9422  1A00  00F1               	movwf	??_CMDs
  9423  1A01                     u5967:
  9424  1A01  0BF1               	decfsz	??_CMDs,f
  9425  1A02  2A01               	goto	u5967
  9426  1A03  0BF2               	decfsz	??_CMDs+1,f
  9427  1A04  2A01               	goto	u5967
  9428  1A05  2A06               	nop2
  9429  1A06                     l146:
  9430  1A06  0008               	return
  9431  1A07                     __end_of_CMDs:
  9432                           
  9433                           	psect	text31
  9434  1AD5                     __ptext31:	
  9435 ;; *************** function _pin *****************
  9436 ;; Defined at:
  9437 ;;		line 7 in file "LCD.c"
  9438 ;; Parameters:    Size  Location     Type
  9439 ;;  a               1    wreg     unsigned char 
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;  a               1    0[COMMON] unsigned char 
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  1    wreg      void 
  9444 ;; Registers used:
  9445 ;;		wreg
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9451 ;;      Params:         0       0       0       0       0
  9452 ;;      Locals:         1       0       0       0       0
  9453 ;;      Temps:          0       0       0       0       0
  9454 ;;      Totals:         1       0       0       0       0
  9455 ;;Total ram usage:        1 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_CMDs
  9461 ;;		_write_char
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           
  9466                           ;psect for function _pin
  9467  1AD5                     _pin:
  9468                           
  9469                           ;incstack = 0
  9470                           ; Regs used in _pin: [wreg]
  9471                           ;pin@a stored from wreg
  9472  1AD5  00F0               	movwf	pin@a
  9473  1AD6                     l2418:
  9474                           
  9475                           ;LCD.c: 8:     if(a & 1){
  9476  1AD6  1C70               	btfss	pin@a,0
  9477  1AD7  2AD9               	goto	u2971
  9478  1AD8  2ADA               	goto	u2970
  9479  1AD9                     u2971:
  9480  1AD9  2ADE               	goto	l127
  9481  1ADA                     u2970:
  9482  1ADA                     l2420:
  9483                           
  9484                           ;LCD.c: 9:         RD0=1;}
  9485  1ADA  1283               	bcf	3,5	;RP0=0, select bank0
  9486  1ADB  1303               	bcf	3,6	;RP1=0, select bank0
  9487  1ADC  1408               	bsf	8,0	;volatile
  9488  1ADD  2AE1               	goto	l128
  9489  1ADE                     l127:	
  9490                           ;LCD.c: 10:     else{
  9491                           
  9492                           
  9493                           ;LCD.c: 11:         RD0=0;}
  9494  1ADE  1283               	bcf	3,5	;RP0=0, select bank0
  9495  1ADF  1303               	bcf	3,6	;RP1=0, select bank0
  9496  1AE0  1008               	bcf	8,0	;volatile
  9497  1AE1                     l128:
  9498                           
  9499                           ;LCD.c: 12:     if(a & 2){
  9500  1AE1  1CF0               	btfss	pin@a,1
  9501  1AE2  2AE4               	goto	u2981
  9502  1AE3  2AE5               	goto	u2980
  9503  1AE4                     u2981:
  9504  1AE4  2AE7               	goto	l129
  9505  1AE5                     u2980:
  9506  1AE5                     l2422:
  9507                           
  9508                           ;LCD.c: 13:         RD1=1;}
  9509  1AE5  1488               	bsf	8,1	;volatile
  9510  1AE6  2AE8               	goto	l130
  9511  1AE7                     l129:	
  9512                           ;LCD.c: 14:     else{
  9513                           
  9514                           
  9515                           ;LCD.c: 15:         RD1=0;}
  9516  1AE7  1088               	bcf	8,1	;volatile
  9517  1AE8                     l130:
  9518                           
  9519                           ;LCD.c: 16:     if(a & 4){
  9520  1AE8  1D70               	btfss	pin@a,2
  9521  1AE9  2AEB               	goto	u2991
  9522  1AEA  2AEC               	goto	u2990
  9523  1AEB                     u2991:
  9524  1AEB  2AEE               	goto	l131
  9525  1AEC                     u2990:
  9526  1AEC                     l2424:
  9527                           
  9528                           ;LCD.c: 17:         RD2=1;}
  9529  1AEC  1508               	bsf	8,2	;volatile
  9530  1AED  2AEF               	goto	l132
  9531  1AEE                     l131:	
  9532                           ;LCD.c: 18:     else{
  9533                           
  9534                           
  9535                           ;LCD.c: 19:         RD2=0;}
  9536  1AEE  1108               	bcf	8,2	;volatile
  9537  1AEF                     l132:
  9538                           
  9539                           ;LCD.c: 20:     if(a & 8){
  9540  1AEF  1DF0               	btfss	pin@a,3
  9541  1AF0  2AF2               	goto	u3001
  9542  1AF1  2AF3               	goto	u3000
  9543  1AF2                     u3001:
  9544  1AF2  2AF5               	goto	l133
  9545  1AF3                     u3000:
  9546  1AF3                     l2426:
  9547                           
  9548                           ;LCD.c: 21:         RD3=1;}
  9549  1AF3  1588               	bsf	8,3	;volatile
  9550  1AF4  2AF6               	goto	l134
  9551  1AF5                     l133:	
  9552                           ;LCD.c: 22:     else{
  9553                           
  9554                           
  9555                           ;LCD.c: 23:         RD3=0;}
  9556  1AF5  1188               	bcf	8,3	;volatile
  9557  1AF6                     l134:
  9558                           
  9559                           ;LCD.c: 24:     if(a & 16){
  9560  1AF6  1E70               	btfss	pin@a,4
  9561  1AF7  2AF9               	goto	u3011
  9562  1AF8  2AFA               	goto	u3010
  9563  1AF9                     u3011:
  9564  1AF9  2AFC               	goto	l135
  9565  1AFA                     u3010:
  9566  1AFA                     l2428:
  9567                           
  9568                           ;LCD.c: 25:         RD4=1;}
  9569  1AFA  1608               	bsf	8,4	;volatile
  9570  1AFB  2AFD               	goto	l136
  9571  1AFC                     l135:	
  9572                           ;LCD.c: 26:     else{
  9573                           
  9574                           
  9575                           ;LCD.c: 27:         RD4=0;}
  9576  1AFC  1208               	bcf	8,4	;volatile
  9577  1AFD                     l136:
  9578                           
  9579                           ;LCD.c: 28:     if(a & 32){
  9580  1AFD  1EF0               	btfss	pin@a,5
  9581  1AFE  2B00               	goto	u3021
  9582  1AFF  2B01               	goto	u3020
  9583  1B00                     u3021:
  9584  1B00  2B03               	goto	l137
  9585  1B01                     u3020:
  9586  1B01                     l2430:
  9587                           
  9588                           ;LCD.c: 29:         RD5=1;}
  9589  1B01  1688               	bsf	8,5	;volatile
  9590  1B02  2B04               	goto	l138
  9591  1B03                     l137:	
  9592                           ;LCD.c: 30:     else{
  9593                           
  9594                           
  9595                           ;LCD.c: 31:         RD5=0;}
  9596  1B03  1288               	bcf	8,5	;volatile
  9597  1B04                     l138:
  9598                           
  9599                           ;LCD.c: 32:     if(a & 64){
  9600  1B04  1F70               	btfss	pin@a,6
  9601  1B05  2B07               	goto	u3031
  9602  1B06  2B08               	goto	u3030
  9603  1B07                     u3031:
  9604  1B07  2B0A               	goto	l139
  9605  1B08                     u3030:
  9606  1B08                     l2432:
  9607                           
  9608                           ;LCD.c: 33:         RD6=1;}
  9609  1B08  1708               	bsf	8,6	;volatile
  9610  1B09  2B0B               	goto	l140
  9611  1B0A                     l139:	
  9612                           ;LCD.c: 34:     else{
  9613                           
  9614                           
  9615                           ;LCD.c: 35:         RD6=0;}
  9616  1B0A  1308               	bcf	8,6	;volatile
  9617  1B0B                     l140:
  9618                           
  9619                           ;LCD.c: 36:     if(a & 128){
  9620  1B0B  1FF0               	btfss	pin@a,7
  9621  1B0C  2B0E               	goto	u3041
  9622  1B0D  2B0F               	goto	u3040
  9623  1B0E                     u3041:
  9624  1B0E  2B11               	goto	l141
  9625  1B0F                     u3040:
  9626  1B0F                     l2434:
  9627                           
  9628                           ;LCD.c: 37:         RD7=1;}
  9629  1B0F  1788               	bsf	8,7	;volatile
  9630  1B10  2B12               	goto	l143
  9631  1B11                     l141:	
  9632                           ;LCD.c: 38:     else{
  9633                           
  9634                           
  9635                           ;LCD.c: 39:         RD7=0;}
  9636  1B11  1388               	bcf	8,7	;volatile
  9637  1B12                     l143:
  9638  1B12  0008               	return
  9639  1B13                     __end_of_pin:
  9640  007E                     btemp	set	126	;btemp
  9641  007E                     wtemp0	set	126
  9642                           
  9643                           	psect	config
  9644                           
  9645                           ;Config register CONFIG1 @ 0x2007
  9646                           ;	Oscillator Selection bits
  9647                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9648                           ;	Watchdog Timer Enable bit
  9649                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9650                           ;	Power-up Timer Enable bit
  9651                           ;	PWRTE = OFF, PWRT disabled
  9652                           ;	RE3/MCLR pin function select bit
  9653                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9654                           ;	Code Protection bit
  9655                           ;	CP = OFF, Program memory code protection is disabled
  9656                           ;	Data Code Protection bit
  9657                           ;	CPD = OFF, Data memory code protection is disabled
  9658                           ;	Brown Out Reset Selection bits
  9659                           ;	BOREN = OFF, BOR disabled
  9660                           ;	Internal External Switchover bit
  9661                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9662                           ;	Fail-Safe Clock Monitor Enabled bit
  9663                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9664                           ;	Low Voltage Programming Enable bit
  9665                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9666                           ;	In-Circuit Debugger Mode bit
  9667                           ;	DEBUG = 0x1, unprogrammed default
  9668  2007                     	org	8199
  9669  2007  20D4               	dw	8404
  9670                           
  9671                           ;Config register CONFIG2 @ 0x2008
  9672                           ;	Brown-out Reset Selection bit
  9673                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9674                           ;	Flash Program Memory Self Write Enable bits
  9675                           ;	WRT = OFF, Write protection off
  9676  2008                     	org	8200
  9677  2008  3FFF               	dw	16383
  9678                           
  9679                           	psect	text3_split_1
  9680  01E9                     u5440:
  9681  01E9                     l3502:
  9682  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  9683  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  9684  01EB  0846               	movf	(sprintf@fval+3)^(0+128),w
  9685  01EC  00F3               	movwf	___fleq@ff1+3
  9686  01ED  0845               	movf	(sprintf@fval+2)^(0+128),w
  9687  01EE  00F2               	movwf	___fleq@ff1+2
  9688  01EF  0844               	movf	(sprintf@fval+1)^(0+128),w
  9689  01F0  00F1               	movwf	___fleq@ff1+1
  9690  01F1  0843               	movf	sprintf@fval^(0+128),w
  9691  01F2  00F0               	movwf	___fleq@ff1
  9692  01F3  3000               	movlw	0
  9693  01F4  00F7               	movwf	___fleq@ff2+3
  9694  01F5  3000               	movlw	0
  9695  01F6  00F6               	movwf	___fleq@ff2+2
  9696  01F7  3000               	movlw	0
  9697  01F8  00F5               	movwf	___fleq@ff2+1
  9698  01F9  3000               	movlw	0
  9699  01FA  00F4               	movwf	___fleq@ff2
  9700  01FB  160A  158A  2399  120A  118A  	fcall	___fleq
  9701  0200  1803               	btfsc	3,0
  9702  0201  2A03               	goto	u5451
  9703  0202  2A04               	goto	u5450
  9704  0203                     u5451:
  9705  0203  2AAC               	goto	l3522
  9706  0204                     u5450:
  9707  0204                     l3504:
  9708  0204  1683               	bsf	3,5	;RP0=1, select bank1
  9709  0205  1303               	bcf	3,6	;RP1=0, select bank1
  9710  0206  0846               	movf	(sprintf@fval+3)^(0+128),w
  9711  0207  1283               	bcf	3,5	;RP0=0, select bank0
  9712  0208  1303               	bcf	3,6	;RP1=0, select bank0
  9713  0209  00D4               	movwf	___fltol@f1+3
  9714  020A  1683               	bsf	3,5	;RP0=1, select bank1
  9715  020B  1303               	bcf	3,6	;RP1=0, select bank1
  9716  020C  0845               	movf	(sprintf@fval+2)^(0+128),w
  9717  020D  1283               	bcf	3,5	;RP0=0, select bank0
  9718  020E  1303               	bcf	3,6	;RP1=0, select bank0
  9719  020F  00D3               	movwf	___fltol@f1+2
  9720  0210  1683               	bsf	3,5	;RP0=1, select bank1
  9721  0211  1303               	bcf	3,6	;RP1=0, select bank1
  9722  0212  0844               	movf	(sprintf@fval+1)^(0+128),w
  9723  0213  1283               	bcf	3,5	;RP0=0, select bank0
  9724  0214  1303               	bcf	3,6	;RP1=0, select bank0
  9725  0215  00D2               	movwf	___fltol@f1+1
  9726  0216  1683               	bsf	3,5	;RP0=1, select bank1
  9727  0217  1303               	bcf	3,6	;RP1=0, select bank1
  9728  0218  0843               	movf	sprintf@fval^(0+128),w
  9729  0219  1283               	bcf	3,5	;RP0=0, select bank0
  9730  021A  1303               	bcf	3,6	;RP1=0, select bank0
  9731  021B  00D1               	movwf	___fltol@f1
  9732  021C  120A  158A  20C4  120A  118A  	fcall	___fltol
  9733  0221  1283               	bcf	3,5	;RP0=0, select bank0
  9734  0222  1303               	bcf	3,6	;RP1=0, select bank0
  9735  0223  0854               	movf	?___fltol+3,w
  9736  0224  0453               	iorwf	?___fltol+2,w
  9737  0225  0452               	iorwf	?___fltol+1,w
  9738  0226  0451               	iorwf	?___fltol,w
  9739  0227  1D03               	skipz
  9740  0228  2A2A               	goto	u5461
  9741  0229  2A2B               	goto	u5460
  9742  022A                     u5461:
  9743  022A  2AAC               	goto	l3522
  9744  022B                     u5460:
  9745  022B                     l3506:
  9746  022B  1683               	bsf	3,5	;RP0=1, select bank1
  9747  022C  1303               	bcf	3,6	;RP1=0, select bank1
  9748  022D  0842               	movf	(sprintf@eexp+1)^(0+128),w
  9749  022E  3A80               	xorlw	128
  9750  022F  00FF               	movwf	btemp+1
  9751  0230  3080               	movlw	128
  9752  0231  027F               	subwf	btemp+1,w
  9753  0232  1D03               	skipz
  9754  0233  2A36               	goto	u5475
  9755  0234  3002               	movlw	2
  9756  0235  0241               	subwf	sprintf@eexp^(0+128),w
  9757  0236                     u5475:
  9758  0236  1C03               	skipc
  9759  0237  2A39               	goto	u5471
  9760  0238  2A3A               	goto	u5470
  9761  0239                     u5471:
  9762  0239  2AAC               	goto	l3522
  9763  023A                     u5470:
  9764  023A                     l3508:
  9765                           
  9766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9767  023A  1683               	bsf	3,5	;RP0=1, select bank1
  9768  023B  1303               	bcf	3,6	;RP1=0, select bank1
  9769  023C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  9770  023D  00F3               	movwf	___flge@ff1+3
  9771  023E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  9772  023F  00F2               	movwf	___flge@ff1+2
  9773  0240  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  9774  0241  00F1               	movwf	___flge@ff1+1
  9775  0242  0839               	movf	sprintf@tmpval^(0+128),w
  9776  0243  00F0               	movwf	___flge@ff1
  9777  0244  3040               	movlw	64
  9778  0245  00F7               	movwf	___flge@ff2+3
  9779  0246  3089               	movlw	137
  9780  0247  00F6               	movwf	___flge@ff2+2
  9781  0248  3070               	movlw	112
  9782  0249  00F5               	movwf	___flge@ff2+1
  9783  024A  305F               	movlw	95
  9784  024B  00F4               	movwf	___flge@ff2
  9785  024C  160A  118A  2009  120A  118A  	fcall	___flge
  9786  0251  1803               	btfsc	3,0
  9787  0252  2A54               	goto	u5481
  9788  0253  2A55               	goto	u5480
  9789  0254                     u5481:
  9790  0254  2A5E               	goto	l3512
  9791  0255                     u5480:
  9792  0255                     l3510:
  9793                           
  9794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9795  0255  30F7               	movlw	247
  9796  0256  1683               	bsf	3,5	;RP0=1, select bank1
  9797  0257  1303               	bcf	3,6	;RP1=0, select bank1
  9798  0258  07C1               	addwf	sprintf@eexp^(0+128),f
  9799  0259  1803               	skipnc
  9800  025A  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  9801  025B  30FF               	movlw	255
  9802  025C  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  9803                           
  9804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9805  025D  2A66               	goto	l3514
  9806  025E                     l3512:
  9807                           
  9808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9809  025E  30F8               	movlw	248
  9810  025F  1683               	bsf	3,5	;RP0=1, select bank1
  9811  0260  1303               	bcf	3,6	;RP1=0, select bank1
  9812  0261  07C1               	addwf	sprintf@eexp^(0+128),f
  9813  0262  1803               	skipnc
  9814  0263  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  9815  0264  30FF               	movlw	255
  9816  0265  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  9817  0266                     l3514:
  9818                           
  9819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9820  0266  0841               	movf	sprintf@eexp^(0+128),w
  9821  0267  120A  158A  2140  120A  118A  	fcall	_scale
  9822  026C  1283               	bcf	3,5	;RP0=0, select bank0
  9823  026D  1303               	bcf	3,6	;RP1=0, select bank0
  9824  026E  0841               	movf	?_scale+3,w
  9825  026F  1683               	bsf	3,5	;RP0=1, select bank1
  9826  0270  1303               	bcf	3,6	;RP1=0, select bank1
  9827  0271  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  9828  0272  1283               	bcf	3,5	;RP0=0, select bank0
  9829  0273  1303               	bcf	3,6	;RP1=0, select bank0
  9830  0274  0840               	movf	?_scale+2,w
  9831  0275  1683               	bsf	3,5	;RP0=1, select bank1
  9832  0276  1303               	bcf	3,6	;RP1=0, select bank1
  9833  0277  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  9834  0278  1283               	bcf	3,5	;RP0=0, select bank0
  9835  0279  1303               	bcf	3,6	;RP1=0, select bank0
  9836  027A  083F               	movf	?_scale+1,w
  9837  027B  1683               	bsf	3,5	;RP0=1, select bank1
  9838  027C  1303               	bcf	3,6	;RP1=0, select bank1
  9839  027D  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  9840  027E  1283               	bcf	3,5	;RP0=0, select bank0
  9841  027F  1303               	bcf	3,6	;RP1=0, select bank0
  9842  0280  083E               	movf	?_scale,w
  9843  0281  1683               	bsf	3,5	;RP0=1, select bank1
  9844  0282  1303               	bcf	3,6	;RP1=0, select bank1
  9845  0283  00B9               	movwf	sprintf@tmpval^(0+128)
  9846  0284                     l3516:
  9847  0284  0846               	movf	(sprintf@fval+3)^(0+128),w
  9848  0285  00F3               	movwf	__div_to_l_@f1+3
  9849  0286  0845               	movf	(sprintf@fval+2)^(0+128),w
  9850  0287  00F2               	movwf	__div_to_l_@f1+2
  9851  0288  0844               	movf	(sprintf@fval+1)^(0+128),w
  9852  0289  00F1               	movwf	__div_to_l_@f1+1
  9853  028A  0843               	movf	sprintf@fval^(0+128),w
  9854  028B  00F0               	movwf	__div_to_l_@f1
  9855  028C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  9856  028D  00F7               	movwf	__div_to_l_@f2+3
  9857  028E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  9858  028F  00F6               	movwf	__div_to_l_@f2+2
  9859  0290  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  9860  0291  00F5               	movwf	__div_to_l_@f2+1
  9861  0292  0839               	movf	sprintf@tmpval^(0+128),w
  9862  0293  00F4               	movwf	__div_to_l_@f2
  9863  0294  160A  158A  2742  120A  118A  	fcall	__div_to_l_
  9864  0299  0873               	movf	?__div_to_l_+3,w
  9865  029A  1683               	bsf	3,5	;RP0=1, select bank1
  9866  029B  1303               	bcf	3,6	;RP1=0, select bank1
  9867  029C  00C0               	movwf	(sprintf@val+3)^(0+128)
  9868  029D  0872               	movf	?__div_to_l_+2,w
  9869  029E  00BF               	movwf	(sprintf@val+2)^(0+128)
  9870  029F  0871               	movf	?__div_to_l_+1,w
  9871  02A0  00BE               	movwf	(sprintf@val+1)^(0+128)
  9872  02A1  0870               	movf	?__div_to_l_,w
  9873  02A2  00BD               	movwf	sprintf@val^(0+128)
  9874  02A3                     l3520:
  9875                           
  9876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9877  02A3  3000               	movlw	0
  9878  02A4  00C6               	movwf	(sprintf@fval+3)^(0+128)
  9879  02A5  3000               	movlw	0
  9880  02A6  00C5               	movwf	(sprintf@fval+2)^(0+128)
  9881  02A7  3000               	movlw	0
  9882  02A8  00C4               	movwf	(sprintf@fval+1)^(0+128)
  9883  02A9  3000               	movlw	0
  9884  02AA  00C3               	movwf	sprintf@fval^(0+128)
  9885                           
  9886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9887  02AB  2B30               	goto	l3528
  9888  02AC                     l3522:
  9889                           
  9890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9891  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  9892  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  9893  02AE  0846               	movf	(sprintf@fval+3)^(0+128),w
  9894  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  9895  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  9896  02B1  00D4               	movwf	___fltol@f1+3
  9897  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  9898  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  9899  02B4  0845               	movf	(sprintf@fval+2)^(0+128),w
  9900  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  9901  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  9902  02B7  00D3               	movwf	___fltol@f1+2
  9903  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  9904  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  9905  02BA  0844               	movf	(sprintf@fval+1)^(0+128),w
  9906  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  9907  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  9908  02BD  00D2               	movwf	___fltol@f1+1
  9909  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  9910  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  9911  02C0  0843               	movf	sprintf@fval^(0+128),w
  9912  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  9913  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  9914  02C3  00D1               	movwf	___fltol@f1
  9915  02C4  120A  158A  20C4  120A  118A  	fcall	___fltol
  9916  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  9917  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  9918  02CB  0854               	movf	?___fltol+3,w
  9919  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  9920  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  9921  02CE  00C0               	movwf	(sprintf@val+3)^(0+128)
  9922  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  9923  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  9924  02D1  0853               	movf	?___fltol+2,w
  9925  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  9926  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  9927  02D4  00BF               	movwf	(sprintf@val+2)^(0+128)
  9928  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  9929  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  9930  02D7  0852               	movf	?___fltol+1,w
  9931  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  9932  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  9933  02DA  00BE               	movwf	(sprintf@val+1)^(0+128)
  9934  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  9935  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  9936  02DD  0851               	movf	?___fltol,w
  9937  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  9938  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  9939  02E0  00BD               	movwf	sprintf@val^(0+128)
  9940  02E1                     l3524:
  9941                           
  9942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9943  02E1  0840               	movf	(sprintf@val+3)^(0+128),w
  9944  02E2  00F3               	movwf	___xxtofl@val+3
  9945  02E3  083F               	movf	(sprintf@val+2)^(0+128),w
  9946  02E4  00F2               	movwf	___xxtofl@val+2
  9947  02E5  083E               	movf	(sprintf@val+1)^(0+128),w
  9948  02E6  00F1               	movwf	___xxtofl@val+1
  9949  02E7  083D               	movf	sprintf@val^(0+128),w
  9950  02E8  00F0               	movwf	___xxtofl@val
  9951  02E9  3000               	movlw	0
  9952  02EA  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  9953  02EF  0873               	movf	?___xxtofl+3,w
  9954  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  9955  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  9956  02F2  00E9               	movwf	___flsub@a+3
  9957  02F3  0872               	movf	?___xxtofl+2,w
  9958  02F4  00E8               	movwf	___flsub@a+2
  9959  02F5  0871               	movf	?___xxtofl+1,w
  9960  02F6  00E7               	movwf	___flsub@a+1
  9961  02F7  0870               	movf	?___xxtofl,w
  9962  02F8  00E6               	movwf	___flsub@a
  9963  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  9964  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  9965  02FB  0846               	movf	(sprintf@fval+3)^(0+128),w
  9966  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  9967  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  9968  02FE  00ED               	movwf	___flsub@b+3
  9969  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  9970  0300  1303               	bcf	3,6	;RP1=0, select bank1
  9971  0301  0845               	movf	(sprintf@fval+2)^(0+128),w
  9972  0302  1283               	bcf	3,5	;RP0=0, select bank0
  9973  0303  1303               	bcf	3,6	;RP1=0, select bank0
  9974  0304  00EC               	movwf	___flsub@b+2
  9975  0305  1683               	bsf	3,5	;RP0=1, select bank1
  9976  0306  1303               	bcf	3,6	;RP1=0, select bank1
  9977  0307  0844               	movf	(sprintf@fval+1)^(0+128),w
  9978  0308  1283               	bcf	3,5	;RP0=0, select bank0
  9979  0309  1303               	bcf	3,6	;RP1=0, select bank0
  9980  030A  00EB               	movwf	___flsub@b+1
  9981  030B  1683               	bsf	3,5	;RP0=1, select bank1
  9982  030C  1303               	bcf	3,6	;RP1=0, select bank1
  9983  030D  0843               	movf	sprintf@fval^(0+128),w
  9984  030E  1283               	bcf	3,5	;RP0=0, select bank0
  9985  030F  1303               	bcf	3,6	;RP1=0, select bank0
  9986  0310  00EA               	movwf	___flsub@b
  9987  0311  160A  158A  222B  120A  118A  	fcall	___flsub
  9988  0316  1283               	bcf	3,5	;RP0=0, select bank0
  9989  0317  1303               	bcf	3,6	;RP1=0, select bank0
  9990  0318  0869               	movf	?___flsub+3,w
  9991  0319  1683               	bsf	3,5	;RP0=1, select bank1
  9992  031A  1303               	bcf	3,6	;RP1=0, select bank1
  9993  031B  00C6               	movwf	(sprintf@fval+3)^(0+128)
  9994  031C  1283               	bcf	3,5	;RP0=0, select bank0
  9995  031D  1303               	bcf	3,6	;RP1=0, select bank0
  9996  031E  0868               	movf	?___flsub+2,w
  9997  031F  1683               	bsf	3,5	;RP0=1, select bank1
  9998  0320  1303               	bcf	3,6	;RP1=0, select bank1
  9999  0321  00C5               	movwf	(sprintf@fval+2)^(0+128)
 10000  0322  1283               	bcf	3,5	;RP0=0, select bank0
 10001  0323  1303               	bcf	3,6	;RP1=0, select bank0
 10002  0324  0867               	movf	?___flsub+1,w
 10003  0325  1683               	bsf	3,5	;RP0=1, select bank1
 10004  0326  1303               	bcf	3,6	;RP1=0, select bank1
 10005  0327  00C4               	movwf	(sprintf@fval+1)^(0+128)
 10006  0328  1283               	bcf	3,5	;RP0=0, select bank0
 10007  0329  1303               	bcf	3,6	;RP1=0, select bank0
 10008  032A  0866               	movf	?___flsub,w
 10009  032B  1683               	bsf	3,5	;RP0=1, select bank1
 10010  032C  1303               	bcf	3,6	;RP1=0, select bank1
 10011  032D  00C3               	movwf	sprintf@fval^(0+128)
 10012  032E                     l3526:
 10013                           
 10014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10015  032E  01C1               	clrf	sprintf@eexp^(0+128)
 10016  032F  01C2               	clrf	(sprintf@eexp+1)^(0+128)
 10017  0330                     l3528:
 10018                           
 10019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10020  0330  01CA               	clrf	sprintf@c^(0+128)
 10021  0331  0ACA               	incf	sprintf@c^(0+128),f
 10022  0332                     l3534:
 10023                           
 10024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10025  0332  084A               	movf	sprintf@c^(0+128),w
 10026  0333  00AB               	movwf	??_sprintf^(0+128)
 10027  0334  3001               	movlw	1
 10028  0335                     u5495:
 10029  0335  1003               	clrc
 10030  0336  0DAB               	rlf	??_sprintf^(0+128),f
 10031  0337  3EFF               	addlw	-1
 10032  0338  1D03               	skipz
 10033  0339  2B35               	goto	u5495
 10034  033A  1003               	clrc
 10035  033B  0D2B               	rlf	??_sprintf^(0+128),w
 10036  033C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10037  033D  0084               	movwf	4
 10038  033E  120A  158A  200A  120A  118A  	fcall	stringdir
 10039  0343  00AC               	movwf	(??_sprintf+1)^(0+128)
 10040  0344  120A  158A  200A  120A  118A  	fcall	stringdir
 10041  0349  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
 10042  034A  120A  158A  200A  120A  118A  	fcall	stringdir
 10043  034F  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
 10044  0350  120A  158A  200A  120A  118A  	fcall	stringdir
 10045  0355  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
 10046  0356  082F               	movf	(??_sprintf+4)^(0+128),w
 10047  0357  0240               	subwf	(sprintf@val+3)^(0+128),w
 10048  0358  1D03               	skipz
 10049  0359  2B64               	goto	u5505
 10050  035A  082E               	movf	(??_sprintf+3)^(0+128),w
 10051  035B  023F               	subwf	(sprintf@val+2)^(0+128),w
 10052  035C  1D03               	skipz
 10053  035D  2B64               	goto	u5505
 10054  035E  082D               	movf	(??_sprintf+2)^(0+128),w
 10055  035F  023E               	subwf	(sprintf@val+1)^(0+128),w
 10056  0360  1D03               	skipz
 10057  0361  2B64               	goto	u5505
 10058  0362  082C               	movf	(??_sprintf+1)^(0+128),w
 10059  0363  023D               	subwf	sprintf@val^(0+128),w
 10060  0364                     u5505:
 10061  0364  1803               	skipnc
 10062  0365  2B67               	goto	u5501
 10063  0366  2B68               	goto	u5500
 10064  0367                     u5501:
 10065  0367  2B69               	goto	l3538
 10066  0368                     u5500:
 10067  0368  2B73               	goto	l3540
 10068  0369                     l3538:
 10069  0369  3001               	movlw	1
 10070  036A  00AB               	movwf	??_sprintf^(0+128)
 10071  036B  082B               	movf	??_sprintf^(0+128),w
 10072  036C  07CA               	addwf	sprintf@c^(0+128),f
 10073  036D  300A               	movlw	10
 10074  036E  064A               	xorwf	sprintf@c^(0+128),w
 10075  036F  1D03               	btfss	3,2
 10076  0370  2B72               	goto	u5511
 10077  0371  2B73               	goto	u5510
 10078  0372                     u5511:
 10079  0372  2B32               	goto	l3534
 10080  0373                     u5510:
 10081  0373                     l3540:
 10082                           
 10083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10084  0373  084A               	movf	sprintf@c^(0+128),w
 10085  0374  0748               	addwf	sprintf@prec^(0+128),w
 10086  0375  00AB               	movwf	??_sprintf^(0+128)
 10087  0376  0849               	movf	(sprintf@prec+1)^(0+128),w
 10088  0377  1803               	skipnc
 10089  0378  0A49               	incf	(sprintf@prec+1)^(0+128),w
 10090  0379  00AC               	movwf	(??_sprintf^(0+128)+1)
 10091  037A  0841               	movf	sprintf@eexp^(0+128),w
 10092  037B  072B               	addwf	??_sprintf^(0+128),w
 10093  037C  00AD               	movwf	(??_sprintf+2)^(0+128)
 10094  037D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10095  037E  1803               	skipnc
 10096  037F  0A42               	incf	(sprintf@eexp+1)^(0+128),w
 10097  0380  072C               	addwf	(??_sprintf+1)^(0+128),w
 10098  0381  00AE               	movwf	(??_sprintf+3)^(0+128)
 10099  0382  082D               	movf	(??_sprintf+2)^(0+128),w
 10100  0383  02B7               	subwf	sprintf@width^(0+128),f
 10101  0384  082E               	movf	(??_sprintf+3)^(0+128),w
 10102  0385  1C03               	skipc
 10103  0386  03B8               	decf	(sprintf@width+1)^(0+128),f
 10104  0387  02B8               	subwf	(sprintf@width+1)^(0+128),f
 10105                           
 10106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10107  0388  0848               	movf	sprintf@prec^(0+128),w
 10108  0389  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 10109  038A  1903               	btfsc	3,2
 10110  038B  2B8D               	goto	u5521
 10111  038C  2B8E               	goto	u5520
 10112  038D                     u5521:
 10113  038D  2B94               	goto	l3544
 10114  038E                     u5520:
 10115  038E                     l3542:
 10116                           
 10117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10118  038E  30FF               	movlw	255
 10119  038F  07B7               	addwf	sprintf@width^(0+128),f
 10120  0390  1803               	skipnc
 10121  0391  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10122  0392  30FF               	movlw	255
 10123  0393  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10124  0394                     l3544:
 10125                           
 10126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10127  0394  3003               	movlw	3
 10128  0395  0535               	andwf	sprintf@flag^(0+128),w
 10129  0396  00AB               	movwf	??_sprintf^(0+128)
 10130  0397  3000               	movlw	0
 10131  0398  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10132  0399  00AC               	movwf	(??_sprintf+1)^(0+128)
 10133  039A  082B               	movf	??_sprintf^(0+128),w
 10134  039B  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10135  039C  1903               	btfsc	3,2
 10136  039D  2B9F               	goto	u5531
 10137  039E  2BA0               	goto	u5530
 10138  039F                     u5531:
 10139  039F  2BB5               	goto	l3554
 10140  03A0                     u5530:
 10141  03A0                     l3546:
 10142                           
 10143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10144  03A0  30FF               	movlw	255
 10145  03A1  07B7               	addwf	sprintf@width^(0+128),f
 10146  03A2  1803               	skipnc
 10147  03A3  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10148  03A4  30FF               	movlw	255
 10149  03A5  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10150  03A6  2BB5               	goto	l3554
 10151  03A7                     l3548:
 10152                           
 10153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10154  03A7  3020               	movlw	32
 10155  03A8  1683               	bsf	3,5	;RP0=1, select bank1
 10156  03A9  1303               	bcf	3,6	;RP1=0, select bank1
 10157  03AA  00AB               	movwf	??_sprintf^(0+128)
 10158  03AB  0847               	movf	sprintf@sp^(0+128),w
 10159  03AC  0084               	movwf	4
 10160  03AD  082B               	movf	??_sprintf^(0+128),w
 10161  03AE  1383               	bcf	3,7	;select IRP bank0
 10162  03AF  0080               	movwf	0
 10163  03B0                     l3550:
 10164  03B0  3001               	movlw	1
 10165  03B1  00AB               	movwf	??_sprintf^(0+128)
 10166  03B2  082B               	movf	??_sprintf^(0+128),w
 10167  03B3  07C7               	addwf	sprintf@sp^(0+128),f
 10168  03B4  2BA0               	goto	l3546
 10169  03B5                     l3554:
 10170                           
 10171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10172  03B5  0838               	movf	(sprintf@width+1)^(0+128),w
 10173  03B6  3A80               	xorlw	128
 10174  03B7  00FF               	movwf	btemp+1
 10175  03B8  3080               	movlw	128
 10176  03B9  027F               	subwf	btemp+1,w
 10177  03BA  1D03               	skipz
 10178  03BB  2BBE               	goto	u5545
 10179  03BC  3001               	movlw	1
 10180  03BD  0237               	subwf	sprintf@width^(0+128),w
 10181  03BE                     u5545:
 10182  03BE  1803               	skipnc
 10183  03BF  2BC1               	goto	u5541
 10184  03C0  2BC2               	goto	u5540
 10185  03C1                     u5541:
 10186  03C1  2BA7               	goto	l3548
 10187  03C2                     u5540:
 10188  03C2                     l3556:
 10189                           
 10190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10191  03C2  3003               	movlw	3
 10192  03C3  1683               	bsf	3,5	;RP0=1, select bank1
 10193  03C4  1303               	bcf	3,6	;RP1=0, select bank1
 10194  03C5  0535               	andwf	sprintf@flag^(0+128),w
 10195  03C6  00AB               	movwf	??_sprintf^(0+128)
 10196  03C7  3000               	movlw	0
 10197  03C8  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10198  03C9  00AC               	movwf	(??_sprintf+1)^(0+128)
 10199  03CA  082B               	movf	??_sprintf^(0+128),w
 10200  03CB  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10201  03CC  1903               	btfsc	3,2
 10202  03CD  2BCF               	goto	u5551
 10203  03CE  2BD0               	goto	u5550
 10204  03CF                     u5551:
 10205  03CF  2C62               	goto	l372
 10206  03D0                     u5550:
 10207  03D0                     l3558:
 10208                           
 10209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10210  03D0  302D               	movlw	45
 10211  03D1  00AB               	movwf	??_sprintf^(0+128)
 10212  03D2  0847               	movf	sprintf@sp^(0+128),w
 10213  03D3  0084               	movwf	4
 10214  03D4  082B               	movf	??_sprintf^(0+128),w
 10215  03D5  1383               	bcf	3,7	;select IRP bank0
 10216  03D6  0080               	movwf	0
 10217  03D7                     l3560:
 10218  03D7  3001               	movlw	1
 10219  03D8  00AB               	movwf	??_sprintf^(0+128)
 10220  03D9  082B               	movf	??_sprintf^(0+128),w
 10221  03DA  07C7               	addwf	sprintf@sp^(0+128),f
 10222  03DB  2C62               	goto	l372
 10223  03DC                     l3562:
 10224                           
 10225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10226  03DC  084A               	movf	sprintf@c^(0+128),w
 10227  03DD  00AB               	movwf	??_sprintf^(0+128)
 10228  03DE  3001               	movlw	1
 10229  03DF                     u5565:
 10230  03DF  1003               	clrc
 10231  03E0  0DAB               	rlf	??_sprintf^(0+128),f
 10232  03E1  3EFF               	addlw	-1
 10233  03E2  1D03               	skipz
 10234  03E3  2BDF               	goto	u5565
 10235  03E4  1003               	clrc
 10236  03E5  0D2B               	rlf	??_sprintf^(0+128),w
 10237  03E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10238  03E7  0084               	movwf	4
 10239  03E8  120A  158A  200A  120A  118A  	fcall	stringdir
 10240  03ED  00F0               	movwf	___lldiv@divisor
 10241  03EE  120A  158A  200A  120A  118A  	fcall	stringdir
 10242  03F3  00F1               	movwf	___lldiv@divisor+1
 10243  03F4  120A  158A  200A  120A  118A  	fcall	stringdir
 10244  03F9  00F2               	movwf	___lldiv@divisor+2
 10245  03FA  120A  158A  200A  120A  118A  	fcall	stringdir
 10246  03FF  00F3               	movwf	___lldiv@divisor+3
 10247  0400  0840               	movf	(sprintf@val+3)^(0+128),w
 10248  0401  00F7               	movwf	___lldiv@dividend+3
 10249  0402  083F               	movf	(sprintf@val+2)^(0+128),w
 10250  0403  00F6               	movwf	___lldiv@dividend+2
 10251  0404  083E               	movf	(sprintf@val+1)^(0+128),w
 10252  0405  00F5               	movwf	___lldiv@dividend+1
 10253  0406  083D               	movf	sprintf@val^(0+128),w
 10254  0407  00F4               	movwf	___lldiv@dividend
 10255  0408  160A  158A  24FC  120A  118A  	fcall	___lldiv
 10256  040D  0873               	movf	?___lldiv+3,w
 10257  040E  1683               	bsf	3,5	;RP0=1, select bank1
 10258  040F  1303               	bcf	3,6	;RP1=0, select bank1
 10259  0410  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10260  0411  0872               	movf	?___lldiv+2,w
 10261  0412  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10262  0413  0871               	movf	?___lldiv+1,w
 10263  0414  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10264  0415  0870               	movf	?___lldiv,w
 10265  0416  00B9               	movwf	sprintf@tmpval^(0+128)
 10266  0417                     l3564:
 10267                           
 10268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10269  0417  3000               	movlw	0
 10270  0418  1283               	bcf	3,5	;RP0=0, select bank0
 10271  0419  1303               	bcf	3,6	;RP1=0, select bank0
 10272  041A  00A3               	movwf	___llmod@divisor+3
 10273  041B  3000               	movlw	0
 10274  041C  00A2               	movwf	___llmod@divisor+2
 10275  041D  3000               	movlw	0
 10276  041E  00A1               	movwf	___llmod@divisor+1
 10277  041F  300A               	movlw	10
 10278  0420  00A0               	movwf	___llmod@divisor
 10279  0421  1683               	bsf	3,5	;RP0=1, select bank1
 10280  0422  1303               	bcf	3,6	;RP1=0, select bank1
 10281  0423  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10282  0424  1283               	bcf	3,5	;RP0=0, select bank0
 10283  0425  1303               	bcf	3,6	;RP1=0, select bank0
 10284  0426  00A7               	movwf	___llmod@dividend+3
 10285  0427  1683               	bsf	3,5	;RP0=1, select bank1
 10286  0428  1303               	bcf	3,6	;RP1=0, select bank1
 10287  0429  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10288  042A  1283               	bcf	3,5	;RP0=0, select bank0
 10289  042B  1303               	bcf	3,6	;RP1=0, select bank0
 10290  042C  00A6               	movwf	___llmod@dividend+2
 10291  042D  1683               	bsf	3,5	;RP0=1, select bank1
 10292  042E  1303               	bcf	3,6	;RP1=0, select bank1
 10293  042F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10294  0430  1283               	bcf	3,5	;RP0=0, select bank0
 10295  0431  1303               	bcf	3,6	;RP1=0, select bank0
 10296  0432  00A5               	movwf	___llmod@dividend+1
 10297  0433  1683               	bsf	3,5	;RP0=1, select bank1
 10298  0434  1303               	bcf	3,6	;RP1=0, select bank1
 10299  0435  0839               	movf	sprintf@tmpval^(0+128),w
 10300  0436  1283               	bcf	3,5	;RP0=0, select bank0
 10301  0437  1303               	bcf	3,6	;RP1=0, select bank0
 10302  0438  00A4               	movwf	___llmod@dividend
 10303  0439  160A  158A  23E7  120A  118A  	fcall	___llmod
 10304  043E  1283               	bcf	3,5	;RP0=0, select bank0
 10305  043F  1303               	bcf	3,6	;RP1=0, select bank0
 10306  0440  0823               	movf	?___llmod+3,w
 10307  0441  1683               	bsf	3,5	;RP0=1, select bank1
 10308  0442  1303               	bcf	3,6	;RP1=0, select bank1
 10309  0443  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10310  0444  1283               	bcf	3,5	;RP0=0, select bank0
 10311  0445  1303               	bcf	3,6	;RP1=0, select bank0
 10312  0446  0822               	movf	?___llmod+2,w
 10313  0447  1683               	bsf	3,5	;RP0=1, select bank1
 10314  0448  1303               	bcf	3,6	;RP1=0, select bank1
 10315  0449  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10316  044A  1283               	bcf	3,5	;RP0=0, select bank0
 10317  044B  1303               	bcf	3,6	;RP1=0, select bank0
 10318  044C  0821               	movf	?___llmod+1,w
 10319  044D  1683               	bsf	3,5	;RP0=1, select bank1
 10320  044E  1303               	bcf	3,6	;RP1=0, select bank1
 10321  044F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10322  0450  1283               	bcf	3,5	;RP0=0, select bank0
 10323  0451  1303               	bcf	3,6	;RP1=0, select bank0
 10324  0452  0820               	movf	?___llmod,w
 10325  0453  1683               	bsf	3,5	;RP0=1, select bank1
 10326  0454  1303               	bcf	3,6	;RP1=0, select bank1
 10327  0455  00B9               	movwf	sprintf@tmpval^(0+128)
 10328  0456                     l3566:
 10329                           
 10330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10331  0456  0839               	movf	sprintf@tmpval^(0+128),w
 10332  0457  3E30               	addlw	48
 10333  0458  00AB               	movwf	??_sprintf^(0+128)
 10334  0459  0847               	movf	sprintf@sp^(0+128),w
 10335  045A  0084               	movwf	4
 10336  045B  082B               	movf	??_sprintf^(0+128),w
 10337  045C  1383               	bcf	3,7	;select IRP bank0
 10338  045D  0080               	movwf	0
 10339  045E  3001               	movlw	1
 10340  045F  00AB               	movwf	??_sprintf^(0+128)
 10341  0460  082B               	movf	??_sprintf^(0+128),w
 10342  0461  07C7               	addwf	sprintf@sp^(0+128),f
 10343  0462                     l372:	
 10344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10345                           
 10346                           
 10347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10348  0462  3001               	movlw	1
 10349  0463  02CA               	subwf	sprintf@c^(0+128),f
 10350  0464  0A4A               	incf	sprintf@c^(0+128),w
 10351  0465  1D03               	btfss	3,2
 10352  0466  2C68               	goto	u5571
 10353  0467  2C69               	goto	u5570
 10354  0468                     u5571:
 10355  0468  2BDC               	goto	l3562
 10356  0469                     u5570:
 10357  0469  2C7D               	goto	l3574
 10358  046A                     l3568:
 10359                           
 10360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10361  046A  3030               	movlw	48
 10362  046B  1683               	bsf	3,5	;RP0=1, select bank1
 10363  046C  1303               	bcf	3,6	;RP1=0, select bank1
 10364  046D  00AB               	movwf	??_sprintf^(0+128)
 10365  046E  0847               	movf	sprintf@sp^(0+128),w
 10366  046F  0084               	movwf	4
 10367  0470  082B               	movf	??_sprintf^(0+128),w
 10368  0471  1383               	bcf	3,7	;select IRP bank0
 10369  0472  0080               	movwf	0
 10370  0473                     l3570:
 10371  0473  3001               	movlw	1
 10372  0474  00AB               	movwf	??_sprintf^(0+128)
 10373  0475  082B               	movf	??_sprintf^(0+128),w
 10374  0476  07C7               	addwf	sprintf@sp^(0+128),f
 10375  0477                     l3572:
 10376                           
 10377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10378  0477  30FF               	movlw	255
 10379  0478  07C1               	addwf	sprintf@eexp^(0+128),f
 10380  0479  1803               	skipnc
 10381  047A  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10382  047B  30FF               	movlw	255
 10383  047C  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10384  047D                     l3574:
 10385                           
 10386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10387  047D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10388  047E  3A80               	xorlw	128
 10389  047F  00FF               	movwf	btemp+1
 10390  0480  3080               	movlw	128
 10391  0481  027F               	subwf	btemp+1,w
 10392  0482  1D03               	skipz
 10393  0483  2C86               	goto	u5585
 10394  0484  3001               	movlw	1
 10395  0485  0241               	subwf	sprintf@eexp^(0+128),w
 10396  0486                     u5585:
 10397  0486  1803               	skipnc
 10398  0487  2C89               	goto	u5581
 10399  0488  2C8A               	goto	u5580
 10400  0489                     u5581:
 10401  0489  2C6A               	goto	l3568
 10402  048A                     u5580:
 10403  048A                     l3576:
 10404                           
 10405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10406  048A  1683               	bsf	3,5	;RP0=1, select bank1
 10407  048B  1303               	bcf	3,6	;RP1=0, select bank1
 10408  048C  0849               	movf	(sprintf@prec+1)^(0+128),w
 10409  048D  3A80               	xorlw	128
 10410  048E  00FF               	movwf	btemp+1
 10411  048F  3080               	movlw	128
 10412  0490  027F               	subwf	btemp+1,w
 10413  0491  1D03               	skipz
 10414  0492  2C95               	goto	u5595
 10415  0493  3009               	movlw	9
 10416  0494  0248               	subwf	sprintf@prec^(0+128),w
 10417  0495                     u5595:
 10418  0495  1C03               	skipc
 10419  0496  2C98               	goto	u5591
 10420  0497  2C99               	goto	u5590
 10421  0498                     u5591:
 10422  0498  2CA0               	goto	l3580
 10423  0499                     u5590:
 10424  0499                     l3578:
 10425                           
 10426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10427  0499  3008               	movlw	8
 10428  049A  1683               	bsf	3,5	;RP0=1, select bank1
 10429  049B  1303               	bcf	3,6	;RP1=0, select bank1
 10430  049C  00AB               	movwf	??_sprintf^(0+128)
 10431  049D  082B               	movf	??_sprintf^(0+128),w
 10432  049E  00CA               	movwf	sprintf@c^(0+128)
 10433  049F  2CA6               	goto	l379
 10434  04A0                     l3580:
 10435                           
 10436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10437  04A0  1683               	bsf	3,5	;RP0=1, select bank1
 10438  04A1  1303               	bcf	3,6	;RP1=0, select bank1
 10439  04A2  0848               	movf	sprintf@prec^(0+128),w
 10440  04A3  00AB               	movwf	??_sprintf^(0+128)
 10441  04A4  082B               	movf	??_sprintf^(0+128),w
 10442  04A5  00CA               	movwf	sprintf@c^(0+128)
 10443  04A6                     l379:
 10444                           
 10445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10446  04A6  084A               	movf	sprintf@c^(0+128),w
 10447  04A7  00AB               	movwf	??_sprintf^(0+128)
 10448  04A8  01AC               	clrf	(??_sprintf^(0+128)+1)
 10449  04A9  082B               	movf	??_sprintf^(0+128),w
 10450  04AA  02C8               	subwf	sprintf@prec^(0+128),f
 10451  04AB  082C               	movf	(??_sprintf+1)^(0+128),w
 10452  04AC  1C03               	skipc
 10453  04AD  03C9               	decf	(sprintf@prec+1)^(0+128),f
 10454  04AE  02C9               	subwf	(sprintf@prec+1)^(0+128),f
 10455  04AF                     l3582:
 10456                           
 10457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10458  04AF  084A               	movf	sprintf@c^(0+128),w
 10459  04B0  1903               	btfsc	3,2
 10460  04B1  2CB3               	goto	u5601
 10461  04B2  2CB4               	goto	u5600
 10462  04B3                     u5601:
 10463  04B3  2CBF               	goto	l3588
 10464  04B4                     u5600:
 10465  04B4                     l3584:
 10466                           
 10467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10468  04B4  302E               	movlw	46
 10469  04B5  00AB               	movwf	??_sprintf^(0+128)
 10470  04B6  0847               	movf	sprintf@sp^(0+128),w
 10471  04B7  0084               	movwf	4
 10472  04B8  082B               	movf	??_sprintf^(0+128),w
 10473  04B9  1383               	bcf	3,7	;select IRP bank0
 10474  04BA  0080               	movwf	0
 10475  04BB                     l3586:
 10476  04BB  3001               	movlw	1
 10477  04BC  00AB               	movwf	??_sprintf^(0+128)
 10478  04BD  082B               	movf	??_sprintf^(0+128),w
 10479  04BE  07C7               	addwf	sprintf@sp^(0+128),f
 10480  04BF                     l3588:
 10481                           
 10482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10483  04BF  084A               	movf	sprintf@c^(0+128),w
 10484  04C0  120A  158A  2140  120A  118A  	fcall	_scale
 10485  04C5  1283               	bcf	3,5	;RP0=0, select bank0
 10486  04C6  1303               	bcf	3,6	;RP1=0, select bank0
 10487  04C7  0841               	movf	?_scale+3,w
 10488  04C8  1683               	bsf	3,5	;RP0=1, select bank1
 10489  04C9  1303               	bcf	3,6	;RP1=0, select bank1
 10490  04CA  00B3               	movwf	(_sprintf$1147+3)^(0+128)
 10491  04CB  1283               	bcf	3,5	;RP0=0, select bank0
 10492  04CC  1303               	bcf	3,6	;RP1=0, select bank0
 10493  04CD  0840               	movf	?_scale+2,w
 10494  04CE  1683               	bsf	3,5	;RP0=1, select bank1
 10495  04CF  1303               	bcf	3,6	;RP1=0, select bank1
 10496  04D0  00B2               	movwf	(_sprintf$1147+2)^(0+128)
 10497  04D1  1283               	bcf	3,5	;RP0=0, select bank0
 10498  04D2  1303               	bcf	3,6	;RP1=0, select bank0
 10499  04D3  083F               	movf	?_scale+1,w
 10500  04D4  1683               	bsf	3,5	;RP0=1, select bank1
 10501  04D5  1303               	bcf	3,6	;RP1=0, select bank1
 10502  04D6  00B1               	movwf	(_sprintf$1147+1)^(0+128)
 10503  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 10504  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 10505  04D9  083E               	movf	?_scale,w
 10506  04DA  1683               	bsf	3,5	;RP0=1, select bank1
 10507  04DB  1303               	bcf	3,6	;RP1=0, select bank1
 10508  04DC  00B0               	movwf	_sprintf$1147^(0+128)
 10509  04DD                     l3590:
 10510                           
 10511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10512  04DD  0833               	movf	(_sprintf$1147+3)^(0+128),w
 10513  04DE  1283               	bcf	3,5	;RP0=0, select bank0
 10514  04DF  1303               	bcf	3,6	;RP1=0, select bank0
 10515  04E0  00AB               	movwf	___flmul@a+3
 10516  04E1  1683               	bsf	3,5	;RP0=1, select bank1
 10517  04E2  1303               	bcf	3,6	;RP1=0, select bank1
 10518  04E3  0832               	movf	(_sprintf$1147+2)^(0+128),w
 10519  04E4  1283               	bcf	3,5	;RP0=0, select bank0
 10520  04E5  1303               	bcf	3,6	;RP1=0, select bank0
 10521  04E6  00AA               	movwf	___flmul@a+2
 10522  04E7  1683               	bsf	3,5	;RP0=1, select bank1
 10523  04E8  1303               	bcf	3,6	;RP1=0, select bank1
 10524  04E9  0831               	movf	(_sprintf$1147+1)^(0+128),w
 10525  04EA  1283               	bcf	3,5	;RP0=0, select bank0
 10526  04EB  1303               	bcf	3,6	;RP1=0, select bank0
 10527  04EC  00A9               	movwf	___flmul@a+1
 10528  04ED  1683               	bsf	3,5	;RP0=1, select bank1
 10529  04EE  1303               	bcf	3,6	;RP1=0, select bank1
 10530  04EF  0830               	movf	_sprintf$1147^(0+128),w
 10531  04F0  1283               	bcf	3,5	;RP0=0, select bank0
 10532  04F1  1303               	bcf	3,6	;RP1=0, select bank0
 10533  04F2  00A8               	movwf	___flmul@a
 10534  04F3  1683               	bsf	3,5	;RP0=1, select bank1
 10535  04F4  1303               	bcf	3,6	;RP1=0, select bank1
 10536  04F5  0846               	movf	(sprintf@fval+3)^(0+128),w
 10537  04F6  1283               	bcf	3,5	;RP0=0, select bank0
 10538  04F7  1303               	bcf	3,6	;RP1=0, select bank0
 10539  04F8  00A7               	movwf	___flmul@b+3
 10540  04F9  1683               	bsf	3,5	;RP0=1, select bank1
 10541  04FA  1303               	bcf	3,6	;RP1=0, select bank1
 10542  04FB  0845               	movf	(sprintf@fval+2)^(0+128),w
 10543  04FC  1283               	bcf	3,5	;RP0=0, select bank0
 10544  04FD  1303               	bcf	3,6	;RP1=0, select bank0
 10545  04FE  00A6               	movwf	___flmul@b+2
 10546  04FF  1683               	bsf	3,5	;RP0=1, select bank1
 10547  0500  1303               	bcf	3,6	;RP1=0, select bank1
 10548  0501  0844               	movf	(sprintf@fval+1)^(0+128),w
 10549  0502  1283               	bcf	3,5	;RP0=0, select bank0
 10550  0503  1303               	bcf	3,6	;RP1=0, select bank0
 10551  0504  00A5               	movwf	___flmul@b+1
 10552  0505  1683               	bsf	3,5	;RP0=1, select bank1
 10553  0506  1303               	bcf	3,6	;RP1=0, select bank1
 10554  0507  0843               	movf	sprintf@fval^(0+128),w
 10555  0508  1283               	bcf	3,5	;RP0=0, select bank0
 10556  0509  1303               	bcf	3,6	;RP1=0, select bank0
 10557  050A  00A4               	movwf	___flmul@b
 10558  050B  120A  158A  249F  120A  118A  	fcall	___flmul
 10559  0510  1283               	bcf	3,5	;RP0=0, select bank0
 10560  0511  1303               	bcf	3,6	;RP1=0, select bank0
 10561  0512  0827               	movf	?___flmul+3,w
 10562  0513  00D4               	movwf	___fltol@f1+3
 10563  0514  0826               	movf	?___flmul+2,w
 10564  0515  00D3               	movwf	___fltol@f1+2
 10565  0516  0825               	movf	?___flmul+1,w
 10566  0517  00D2               	movwf	___fltol@f1+1
 10567  0518  0824               	movf	?___flmul,w
 10568  0519  00D1               	movwf	___fltol@f1
 10569  051A  120A  158A  20C4  120A  118A  	fcall	___fltol
 10570  051F  1283               	bcf	3,5	;RP0=0, select bank0
 10571  0520  1303               	bcf	3,6	;RP1=0, select bank0
 10572  0521  0854               	movf	?___fltol+3,w
 10573  0522  1683               	bsf	3,5	;RP0=1, select bank1
 10574  0523  1303               	bcf	3,6	;RP1=0, select bank1
 10575  0524  00C0               	movwf	(sprintf@val+3)^(0+128)
 10576  0525  1283               	bcf	3,5	;RP0=0, select bank0
 10577  0526  1303               	bcf	3,6	;RP1=0, select bank0
 10578  0527  0853               	movf	?___fltol+2,w
 10579  0528  1683               	bsf	3,5	;RP0=1, select bank1
 10580  0529  1303               	bcf	3,6	;RP1=0, select bank1
 10581  052A  00BF               	movwf	(sprintf@val+2)^(0+128)
 10582  052B  1283               	bcf	3,5	;RP0=0, select bank0
 10583  052C  1303               	bcf	3,6	;RP1=0, select bank0
 10584  052D  0852               	movf	?___fltol+1,w
 10585  052E  1683               	bsf	3,5	;RP0=1, select bank1
 10586  052F  1303               	bcf	3,6	;RP1=0, select bank1
 10587  0530  00BE               	movwf	(sprintf@val+1)^(0+128)
 10588  0531  1283               	bcf	3,5	;RP0=0, select bank0
 10589  0532  1303               	bcf	3,6	;RP1=0, select bank0
 10590  0533  0851               	movf	?___fltol,w
 10591  0534  1683               	bsf	3,5	;RP0=1, select bank1
 10592  0535  1303               	bcf	3,6	;RP1=0, select bank1
 10593  0536  00BD               	movwf	sprintf@val^(0+128)
 10594                           
 10595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10596  0537  2E19               	goto	l3600
 10597  0538                     l3592:
 10598                           
 10599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10600  0538  084A               	movf	sprintf@c^(0+128),w
 10601  0539  00AB               	movwf	??_sprintf^(0+128)
 10602  053A  3001               	movlw	1
 10603  053B                     u5615:
 10604  053B  1003               	clrc
 10605  053C  0DAB               	rlf	??_sprintf^(0+128),f
 10606  053D  3EFF               	addlw	-1
 10607  053E  1D03               	skipz
 10608  053F  2D3B               	goto	u5615
 10609  0540  1003               	clrc
 10610  0541  0D2B               	rlf	??_sprintf^(0+128),w
 10611  0542  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10612  0543  0084               	movwf	4
 10613  0544  120A  158A  200A  120A  118A  	fcall	stringdir
 10614  0549  00F0               	movwf	___lldiv@divisor
 10615  054A  120A  158A  200A  120A  118A  	fcall	stringdir
 10616  054F  00F1               	movwf	___lldiv@divisor+1
 10617  0550  120A  158A  200A  120A  118A  	fcall	stringdir
 10618  0555  00F2               	movwf	___lldiv@divisor+2
 10619  0556  120A  158A  200A  120A  118A  	fcall	stringdir
 10620  055B  00F3               	movwf	___lldiv@divisor+3
 10621  055C  0840               	movf	(sprintf@val+3)^(0+128),w
 10622  055D  00F7               	movwf	___lldiv@dividend+3
 10623  055E  083F               	movf	(sprintf@val+2)^(0+128),w
 10624  055F  00F6               	movwf	___lldiv@dividend+2
 10625  0560  083E               	movf	(sprintf@val+1)^(0+128),w
 10626  0561  00F5               	movwf	___lldiv@dividend+1
 10627  0562  083D               	movf	sprintf@val^(0+128),w
 10628  0563  00F4               	movwf	___lldiv@dividend
 10629  0564  160A  158A  24FC  120A  118A  	fcall	___lldiv
 10630  0569  0873               	movf	?___lldiv+3,w
 10631  056A  1683               	bsf	3,5	;RP0=1, select bank1
 10632  056B  1303               	bcf	3,6	;RP1=0, select bank1
 10633  056C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10634  056D  0872               	movf	?___lldiv+2,w
 10635  056E  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10636  056F  0871               	movf	?___lldiv+1,w
 10637  0570  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10638  0571  0870               	movf	?___lldiv,w
 10639  0572  00B9               	movwf	sprintf@tmpval^(0+128)
 10640  0573                     l3594:
 10641                           
 10642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10643  0573  3000               	movlw	0
 10644  0574  1283               	bcf	3,5	;RP0=0, select bank0
 10645  0575  1303               	bcf	3,6	;RP1=0, select bank0
 10646  0576  00A3               	movwf	___llmod@divisor+3
 10647  0577  3000               	movlw	0
 10648  0578  00A2               	movwf	___llmod@divisor+2
 10649  0579  3000               	movlw	0
 10650  057A  00A1               	movwf	___llmod@divisor+1
 10651  057B  300A               	movlw	10
 10652  057C  00A0               	movwf	___llmod@divisor
 10653  057D  1683               	bsf	3,5	;RP0=1, select bank1
 10654  057E  1303               	bcf	3,6	;RP1=0, select bank1
 10655  057F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10656  0580  1283               	bcf	3,5	;RP0=0, select bank0
 10657  0581  1303               	bcf	3,6	;RP1=0, select bank0
 10658  0582  00A7               	movwf	___llmod@dividend+3
 10659  0583  1683               	bsf	3,5	;RP0=1, select bank1
 10660  0584  1303               	bcf	3,6	;RP1=0, select bank1
 10661  0585  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10662  0586  1283               	bcf	3,5	;RP0=0, select bank0
 10663  0587  1303               	bcf	3,6	;RP1=0, select bank0
 10664  0588  00A6               	movwf	___llmod@dividend+2
 10665  0589  1683               	bsf	3,5	;RP0=1, select bank1
 10666  058A  1303               	bcf	3,6	;RP1=0, select bank1
 10667  058B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10668  058C  1283               	bcf	3,5	;RP0=0, select bank0
 10669  058D  1303               	bcf	3,6	;RP1=0, select bank0
 10670  058E  00A5               	movwf	___llmod@dividend+1
 10671  058F  1683               	bsf	3,5	;RP0=1, select bank1
 10672  0590  1303               	bcf	3,6	;RP1=0, select bank1
 10673  0591  0839               	movf	sprintf@tmpval^(0+128),w
 10674  0592  1283               	bcf	3,5	;RP0=0, select bank0
 10675  0593  1303               	bcf	3,6	;RP1=0, select bank0
 10676  0594  00A4               	movwf	___llmod@dividend
 10677  0595  160A  158A  23E7  120A  118A  	fcall	___llmod
 10678  059A  1283               	bcf	3,5	;RP0=0, select bank0
 10679  059B  1303               	bcf	3,6	;RP1=0, select bank0
 10680  059C  0823               	movf	?___llmod+3,w
 10681  059D  1683               	bsf	3,5	;RP0=1, select bank1
 10682  059E  1303               	bcf	3,6	;RP1=0, select bank1
 10683  059F  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10684  05A0  1283               	bcf	3,5	;RP0=0, select bank0
 10685  05A1  1303               	bcf	3,6	;RP1=0, select bank0
 10686  05A2  0822               	movf	?___llmod+2,w
 10687  05A3  1683               	bsf	3,5	;RP0=1, select bank1
 10688  05A4  1303               	bcf	3,6	;RP1=0, select bank1
 10689  05A5  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10690  05A6  1283               	bcf	3,5	;RP0=0, select bank0
 10691  05A7  1303               	bcf	3,6	;RP1=0, select bank0
 10692  05A8  0821               	movf	?___llmod+1,w
 10693  05A9  1683               	bsf	3,5	;RP0=1, select bank1
 10694  05AA  1303               	bcf	3,6	;RP1=0, select bank1
 10695  05AB  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10696  05AC  1283               	bcf	3,5	;RP0=0, select bank0
 10697  05AD  1303               	bcf	3,6	;RP1=0, select bank0
 10698  05AE  0820               	movf	?___llmod,w
 10699  05AF  1683               	bsf	3,5	;RP0=1, select bank1
 10700  05B0  1303               	bcf	3,6	;RP1=0, select bank1
 10701  05B1  00B9               	movwf	sprintf@tmpval^(0+128)
 10702  05B2                     l3596:
 10703                           
 10704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10705  05B2  0839               	movf	sprintf@tmpval^(0+128),w
 10706  05B3  3E30               	addlw	48
 10707  05B4  00AB               	movwf	??_sprintf^(0+128)
 10708  05B5  0847               	movf	sprintf@sp^(0+128),w
 10709  05B6  0084               	movwf	4
 10710  05B7  082B               	movf	??_sprintf^(0+128),w
 10711  05B8  1383               	bcf	3,7	;select IRP bank0
 10712  05B9  0080               	movwf	0
 10713  05BA  3001               	movlw	1
 10714  05BB  00AB               	movwf	??_sprintf^(0+128)
 10715  05BC  082B               	movf	??_sprintf^(0+128),w
 10716  05BD  07C7               	addwf	sprintf@sp^(0+128),f
 10717  05BE                     l3598:
 10718                           
 10719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10720  05BE  084A               	movf	sprintf@c^(0+128),w
 10721  05BF  00AB               	movwf	??_sprintf^(0+128)
 10722  05C0  3001               	movlw	1
 10723  05C1                     u5625:
 10724  05C1  1003               	clrc
 10725  05C2  0DAB               	rlf	??_sprintf^(0+128),f
 10726  05C3  3EFF               	addlw	-1
 10727  05C4  1D03               	skipz
 10728  05C5  2DC1               	goto	u5625
 10729  05C6  1003               	clrc
 10730  05C7  0D2B               	rlf	??_sprintf^(0+128),w
 10731  05C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10732  05C9  0084               	movwf	4
 10733  05CA  120A  158A  200A  120A  118A  	fcall	stringdir
 10734  05CF  1283               	bcf	3,5	;RP0=0, select bank0
 10735  05D0  1303               	bcf	3,6	;RP1=0, select bank0
 10736  05D1  00A0               	movwf	___llmod@divisor
 10737  05D2  120A  158A  200A  120A  118A  	fcall	stringdir
 10738  05D7  00A1               	movwf	___llmod@divisor+1
 10739  05D8  120A  158A  200A  120A  118A  	fcall	stringdir
 10740  05DD  00A2               	movwf	___llmod@divisor+2
 10741  05DE  120A  158A  200A  120A  118A  	fcall	stringdir
 10742  05E3  00A3               	movwf	___llmod@divisor+3
 10743  05E4  1683               	bsf	3,5	;RP0=1, select bank1
 10744  05E5  1303               	bcf	3,6	;RP1=0, select bank1
 10745  05E6  0840               	movf	(sprintf@val+3)^(0+128),w
 10746  05E7  1283               	bcf	3,5	;RP0=0, select bank0
 10747  05E8  1303               	bcf	3,6	;RP1=0, select bank0
 10748  05E9  00A7               	movwf	___llmod@dividend+3
 10749  05EA  1683               	bsf	3,5	;RP0=1, select bank1
 10750  05EB  1303               	bcf	3,6	;RP1=0, select bank1
 10751  05EC  083F               	movf	(sprintf@val+2)^(0+128),w
 10752  05ED  1283               	bcf	3,5	;RP0=0, select bank0
 10753  05EE  1303               	bcf	3,6	;RP1=0, select bank0
 10754  05EF  00A6               	movwf	___llmod@dividend+2
 10755  05F0  1683               	bsf	3,5	;RP0=1, select bank1
 10756  05F1  1303               	bcf	3,6	;RP1=0, select bank1
 10757  05F2  083E               	movf	(sprintf@val+1)^(0+128),w
 10758  05F3  1283               	bcf	3,5	;RP0=0, select bank0
 10759  05F4  1303               	bcf	3,6	;RP1=0, select bank0
 10760  05F5  00A5               	movwf	___llmod@dividend+1
 10761  05F6  1683               	bsf	3,5	;RP0=1, select bank1
 10762  05F7  1303               	bcf	3,6	;RP1=0, select bank1
 10763  05F8  083D               	movf	sprintf@val^(0+128),w
 10764  05F9  1283               	bcf	3,5	;RP0=0, select bank0
 10765  05FA  1303               	bcf	3,6	;RP1=0, select bank0
 10766  05FB  00A4               	movwf	___llmod@dividend
 10767  05FC  160A  158A  23E7  120A  118A  	fcall	___llmod
 10768  0601  1283               	bcf	3,5	;RP0=0, select bank0
 10769  0602  1303               	bcf	3,6	;RP1=0, select bank0
 10770  0603  0823               	movf	?___llmod+3,w
 10771  0604  1683               	bsf	3,5	;RP0=1, select bank1
 10772  0605  1303               	bcf	3,6	;RP1=0, select bank1
 10773  0606  00C0               	movwf	(sprintf@val+3)^(0+128)
 10774  0607  1283               	bcf	3,5	;RP0=0, select bank0
 10775  0608  1303               	bcf	3,6	;RP1=0, select bank0
 10776  0609  0822               	movf	?___llmod+2,w
 10777  060A  1683               	bsf	3,5	;RP0=1, select bank1
 10778  060B  1303               	bcf	3,6	;RP1=0, select bank1
 10779  060C  00BF               	movwf	(sprintf@val+2)^(0+128)
 10780  060D  1283               	bcf	3,5	;RP0=0, select bank0
 10781  060E  1303               	bcf	3,6	;RP1=0, select bank0
 10782  060F  0821               	movf	?___llmod+1,w
 10783  0610  1683               	bsf	3,5	;RP0=1, select bank1
 10784  0611  1303               	bcf	3,6	;RP1=0, select bank1
 10785  0612  00BE               	movwf	(sprintf@val+1)^(0+128)
 10786  0613  1283               	bcf	3,5	;RP0=0, select bank0
 10787  0614  1303               	bcf	3,6	;RP1=0, select bank0
 10788  0615  0820               	movf	?___llmod,w
 10789  0616  1683               	bsf	3,5	;RP0=1, select bank1
 10790  0617  1303               	bcf	3,6	;RP1=0, select bank1
 10791  0618  00BD               	movwf	sprintf@val^(0+128)
 10792  0619                     l3600:
 10793                           
 10794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10795  0619  3001               	movlw	1
 10796  061A  02CA               	subwf	sprintf@c^(0+128),f
 10797  061B  0A4A               	incf	sprintf@c^(0+128),w
 10798  061C  1D03               	btfss	3,2
 10799  061D  2E1F               	goto	u5631
 10800  061E  2E20               	goto	u5630
 10801  061F                     u5631:
 10802  061F  2D38               	goto	l3592
 10803  0620                     u5630:
 10804  0620  2E32               	goto	l3608
 10805  0621                     l3602:
 10806                           
 10807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10808  0621  3030               	movlw	48
 10809  0622  00AB               	movwf	??_sprintf^(0+128)
 10810  0623  0847               	movf	sprintf@sp^(0+128),w
 10811  0624  0084               	movwf	4
 10812  0625  082B               	movf	??_sprintf^(0+128),w
 10813  0626  1383               	bcf	3,7	;select IRP bank0
 10814  0627  0080               	movwf	0
 10815  0628                     l3604:
 10816  0628  3001               	movlw	1
 10817  0629  00AB               	movwf	??_sprintf^(0+128)
 10818  062A  082B               	movf	??_sprintf^(0+128),w
 10819  062B  07C7               	addwf	sprintf@sp^(0+128),f
 10820  062C                     l3606:
 10821                           
 10822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10823  062C  30FF               	movlw	255
 10824  062D  07C8               	addwf	sprintf@prec^(0+128),f
 10825  062E  1803               	skipnc
 10826  062F  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 10827  0630  30FF               	movlw	255
 10828  0631  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 10829  0632                     l3608:
 10830                           
 10831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10832  0632  0848               	movf	sprintf@prec^(0+128),w
 10833  0633  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 10834  0634  1D03               	btfss	3,2
 10835  0635  2E37               	goto	u5641
 10836  0636  2E38               	goto	u5640
 10837  0637                     u5641:
 10838  0637  2E21               	goto	l3602
 10839  0638                     u5640:
 10840  0638  2FD6               	goto	l3688
 10841  0639                     l3610:
 10842                           
 10843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10844  0639  0834               	movf	sprintf@ap^(0+128),w
 10845  063A  0084               	movwf	4
 10846  063B  1383               	bcf	3,7	;select IRP bank0
 10847  063C  0800               	movf	0,w
 10848  063D  00AB               	movwf	??_sprintf^(0+128)
 10849  063E  0A84               	incf	4,f
 10850  063F  0800               	movf	0,w
 10851  0640  00AC               	movwf	(??_sprintf^(0+128)+1)
 10852  0641  082B               	movf	??_sprintf^(0+128),w
 10853  0642  00BD               	movwf	sprintf@val^(0+128)
 10854  0643  082C               	movf	(??_sprintf+1)^(0+128),w
 10855  0644  00BE               	movwf	(sprintf@val+1)^(0+128)
 10856  0645  3000               	movlw	0
 10857  0646  1BBE               	btfsc	(sprintf@val+1)^(0+128),7
 10858  0647  30FF               	movlw	255
 10859  0648  00BF               	movwf	(sprintf@val+2)^(0+128)
 10860  0649  00C0               	movwf	(sprintf@val+3)^(0+128)
 10861  064A                     l3612:
 10862  064A  3002               	movlw	2
 10863  064B  00AB               	movwf	??_sprintf^(0+128)
 10864  064C  082B               	movf	??_sprintf^(0+128),w
 10865  064D  07B4               	addwf	sprintf@ap^(0+128),f
 10866  064E                     l3614:
 10867                           
 10868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 10869  064E  1FC0               	btfss	(sprintf@val+3)^(0+128),7
 10870  064F  2E51               	goto	u5651
 10871  0650  2E52               	goto	u5650
 10872  0651                     u5651:
 10873  0651  2E61               	goto	l3620
 10874  0652                     u5650:
 10875  0652                     l3616:
 10876                           
 10877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 10878  0652  3003               	movlw	3
 10879  0653  04B5               	iorwf	sprintf@flag^(0+128),f
 10880  0654  3000               	movlw	0
 10881  0655  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
 10882  0656                     l3618:
 10883                           
 10884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 10885  0656  09BD               	comf	sprintf@val^(0+128),f
 10886  0657  09BE               	comf	(sprintf@val+1)^(0+128),f
 10887  0658  09BF               	comf	(sprintf@val+2)^(0+128),f
 10888  0659  09C0               	comf	(sprintf@val+3)^(0+128),f
 10889  065A  0ABD               	incf	sprintf@val^(0+128),f
 10890  065B  1903               	skipnz
 10891  065C  0ABE               	incf	(sprintf@val+1)^(0+128),f
 10892  065D  1903               	skipnz
 10893  065E  0ABF               	incf	(sprintf@val+2)^(0+128),f
 10894  065F  1903               	skipnz
 10895  0660  0AC0               	incf	(sprintf@val+3)^(0+128),f
 10896  0661                     l3620:
 10897                           
 10898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 10899  0661  0848               	movf	sprintf@prec^(0+128),w
 10900  0662  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 10901  0663  1D03               	btfss	3,2
 10902  0664  2E66               	goto	u5661
 10903  0665  2E67               	goto	u5660
 10904  0666                     u5661:
 10905  0666  2E75               	goto	l3626
 10906  0667                     u5660:
 10907  0667                     l3622:
 10908  0667  0840               	movf	(sprintf@val+3)^(0+128),w
 10909  0668  043F               	iorwf	(sprintf@val+2)^(0+128),w
 10910  0669  043E               	iorwf	(sprintf@val+1)^(0+128),w
 10911  066A  043D               	iorwf	sprintf@val^(0+128),w
 10912  066B  1D03               	skipz
 10913  066C  2E6E               	goto	u5671
 10914  066D  2E6F               	goto	u5670
 10915  066E                     u5671:
 10916  066E  2E75               	goto	l3626
 10917  066F                     u5670:
 10918  066F                     l3624:
 10919                           
 10920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10921  066F  3001               	movlw	1
 10922  0670  07C8               	addwf	sprintf@prec^(0+128),f
 10923  0671  1803               	skipnc
 10924  0672  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 10925  0673  3000               	movlw	0
 10926  0674  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 10927  0675                     l3626:
 10928                           
 10929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10930  0675  01CA               	clrf	sprintf@c^(0+128)
 10931  0676  0ACA               	incf	sprintf@c^(0+128),f
 10932  0677                     l3632:
 10933                           
 10934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10935  0677  084A               	movf	sprintf@c^(0+128),w
 10936  0678  00AB               	movwf	??_sprintf^(0+128)
 10937  0679  3001               	movlw	1
 10938  067A                     u5685:
 10939  067A  1003               	clrc
 10940  067B  0DAB               	rlf	??_sprintf^(0+128),f
 10941  067C  3EFF               	addlw	-1
 10942  067D  1D03               	skipz
 10943  067E  2E7A               	goto	u5685
 10944  067F  1003               	clrc
 10945  0680  0D2B               	rlf	??_sprintf^(0+128),w
 10946  0681  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10947  0682  0084               	movwf	4
 10948  0683  120A  158A  200A  120A  118A  	fcall	stringdir
 10949  0688  00AC               	movwf	(??_sprintf+1)^(0+128)
 10950  0689  120A  158A  200A  120A  118A  	fcall	stringdir
 10951  068E  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
 10952  068F  120A  158A  200A  120A  118A  	fcall	stringdir
 10953  0694  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
 10954  0695  120A  158A  200A  120A  118A  	fcall	stringdir
 10955  069A  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
 10956  069B  082F               	movf	(??_sprintf+4)^(0+128),w
 10957  069C  0240               	subwf	(sprintf@val+3)^(0+128),w
 10958  069D  1D03               	skipz
 10959  069E  2EA9               	goto	u5695
 10960  069F  082E               	movf	(??_sprintf+3)^(0+128),w
 10961  06A0  023F               	subwf	(sprintf@val+2)^(0+128),w
 10962  06A1  1D03               	skipz
 10963  06A2  2EA9               	goto	u5695
 10964  06A3  082D               	movf	(??_sprintf+2)^(0+128),w
 10965  06A4  023E               	subwf	(sprintf@val+1)^(0+128),w
 10966  06A5  1D03               	skipz
 10967  06A6  2EA9               	goto	u5695
 10968  06A7  082C               	movf	(??_sprintf+1)^(0+128),w
 10969  06A8  023D               	subwf	sprintf@val^(0+128),w
 10970  06A9                     u5695:
 10971  06A9  1803               	skipnc
 10972  06AA  2EAC               	goto	u5691
 10973  06AB  2EAD               	goto	u5690
 10974  06AC                     u5691:
 10975  06AC  2EAE               	goto	l3636
 10976  06AD                     u5690:
 10977  06AD  2EB8               	goto	l3638
 10978  06AE                     l3636:
 10979  06AE  3001               	movlw	1
 10980  06AF  00AB               	movwf	??_sprintf^(0+128)
 10981  06B0  082B               	movf	??_sprintf^(0+128),w
 10982  06B1  07CA               	addwf	sprintf@c^(0+128),f
 10983  06B2  300A               	movlw	10
 10984  06B3  064A               	xorwf	sprintf@c^(0+128),w
 10985  06B4  1D03               	btfss	3,2
 10986  06B5  2EB7               	goto	u5701
 10987  06B6  2EB8               	goto	u5700
 10988  06B7                     u5701:
 10989  06B7  2E77               	goto	l3632
 10990  06B8                     u5700:
 10991  06B8                     l3638:
 10992                           
 10993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10994  06B8  0849               	movf	(sprintf@prec+1)^(0+128),w
 10995  06B9  3A80               	xorlw	128
 10996  06BA  3C80               	sublw	128
 10997  06BB  1D03               	skipz
 10998  06BC  2EBF               	goto	u5715
 10999  06BD  0848               	movf	sprintf@prec^(0+128),w
 11000  06BE  024A               	subwf	sprintf@c^(0+128),w
 11001  06BF                     u5715:
 11002  06BF  1803               	skipnc
 11003  06C0  2EC2               	goto	u5711
 11004  06C1  2EC3               	goto	u5710
 11005  06C2                     u5711:
 11006  06C2  2ECA               	goto	l3642
 11007  06C3                     u5710:
 11008  06C3                     l3640:
 11009                           
 11010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11011  06C3  1683               	bsf	3,5	;RP0=1, select bank1
 11012  06C4  1303               	bcf	3,6	;RP1=0, select bank1
 11013  06C5  0848               	movf	sprintf@prec^(0+128),w
 11014  06C6  00AB               	movwf	??_sprintf^(0+128)
 11015  06C7  082B               	movf	??_sprintf^(0+128),w
 11016  06C8  00CA               	movwf	sprintf@c^(0+128)
 11017  06C9  2EE2               	goto	l3646
 11018  06CA                     l3642:
 11019  06CA  1683               	bsf	3,5	;RP0=1, select bank1
 11020  06CB  1303               	bcf	3,6	;RP1=0, select bank1
 11021  06CC  0849               	movf	(sprintf@prec+1)^(0+128),w
 11022  06CD  3A80               	xorlw	128
 11023  06CE  00AB               	movwf	??_sprintf^(0+128)
 11024  06CF  3080               	movlw	128
 11025  06D0  022B               	subwf	??_sprintf^(0+128),w
 11026  06D1  1D03               	skipz
 11027  06D2  2ED5               	goto	u5725
 11028  06D3  084A               	movf	sprintf@c^(0+128),w
 11029  06D4  0248               	subwf	sprintf@prec^(0+128),w
 11030  06D5                     u5725:
 11031  06D5  1803               	skipnc
 11032  06D6  2ED8               	goto	u5721
 11033  06D7  2ED9               	goto	u5720
 11034  06D8                     u5721:
 11035  06D8  2EE2               	goto	l3646
 11036  06D9                     u5720:
 11037  06D9                     l3644:
 11038                           
 11039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11040  06D9  1683               	bsf	3,5	;RP0=1, select bank1
 11041  06DA  1303               	bcf	3,6	;RP1=0, select bank1
 11042  06DB  084A               	movf	sprintf@c^(0+128),w
 11043  06DC  00AB               	movwf	??_sprintf^(0+128)
 11044  06DD  01AC               	clrf	(??_sprintf^(0+128)+1)
 11045  06DE  082B               	movf	??_sprintf^(0+128),w
 11046  06DF  00C8               	movwf	sprintf@prec^(0+128)
 11047  06E0  082C               	movf	(??_sprintf+1)^(0+128),w
 11048  06E1  00C9               	movwf	(sprintf@prec+1)^(0+128)
 11049  06E2                     l3646:
 11050                           
 11051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11052  06E2  1683               	bsf	3,5	;RP0=1, select bank1
 11053  06E3  1303               	bcf	3,6	;RP1=0, select bank1
 11054  06E4  0837               	movf	sprintf@width^(0+128),w
 11055  06E5  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11056  06E6  1903               	btfsc	3,2
 11057  06E7  2EE9               	goto	u5731
 11058  06E8  2EEA               	goto	u5730
 11059  06E9                     u5731:
 11060  06E9  2EFC               	goto	l3652
 11061  06EA                     u5730:
 11062  06EA                     l3648:
 11063  06EA  3003               	movlw	3
 11064  06EB  0535               	andwf	sprintf@flag^(0+128),w
 11065  06EC  00AB               	movwf	??_sprintf^(0+128)
 11066  06ED  3000               	movlw	0
 11067  06EE  0536               	andwf	(sprintf@flag+1)^(0+128),w
 11068  06EF  00AC               	movwf	(??_sprintf+1)^(0+128)
 11069  06F0  082B               	movf	??_sprintf^(0+128),w
 11070  06F1  042C               	iorwf	(??_sprintf^(0+128)+1),w
 11071  06F2  1903               	btfsc	3,2
 11072  06F3  2EF5               	goto	u5741
 11073  06F4  2EF6               	goto	u5740
 11074  06F5                     u5741:
 11075  06F5  2EFC               	goto	l3652
 11076  06F6                     u5740:
 11077  06F6                     l3650:
 11078                           
 11079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11080  06F6  30FF               	movlw	255
 11081  06F7  07B7               	addwf	sprintf@width^(0+128),f
 11082  06F8  1803               	skipnc
 11083  06F9  0AB8               	incf	(sprintf@width+1)^(0+128),f
 11084  06FA  30FF               	movlw	255
 11085  06FB  07B8               	addwf	(sprintf@width+1)^(0+128),f
 11086  06FC                     l3652:
 11087                           
 11088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11089  06FC  1F36               	btfss	(sprintf@flag+1)^(0+128),6
 11090  06FD  2EFF               	goto	u5751
 11091  06FE  2F00               	goto	u5750
 11092  06FF                     u5751:
 11093  06FF  2F1B               	goto	l3660
 11094  0700                     u5750:
 11095  0700                     l3654:
 11096                           
 11097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11098  0700  0849               	movf	(sprintf@prec+1)^(0+128),w
 11099  0701  3A80               	xorlw	128
 11100  0702  00AB               	movwf	??_sprintf^(0+128)
 11101  0703  0838               	movf	(sprintf@width+1)^(0+128),w
 11102  0704  3A80               	xorlw	128
 11103  0705  022B               	subwf	??_sprintf^(0+128),w
 11104  0706  1D03               	skipz
 11105  0707  2F0A               	goto	u5765
 11106  0708  0837               	movf	sprintf@width^(0+128),w
 11107  0709  0248               	subwf	sprintf@prec^(0+128),w
 11108  070A                     u5765:
 11109  070A  1803               	skipnc
 11110  070B  2F0D               	goto	u5761
 11111  070C  2F0E               	goto	u5760
 11112  070D                     u5761:
 11113  070D  2F17               	goto	l3658
 11114  070E                     u5760:
 11115  070E                     l3656:
 11116                           
 11117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11118  070E  1683               	bsf	3,5	;RP0=1, select bank1
 11119  070F  1303               	bcf	3,6	;RP1=0, select bank1
 11120  0710  0848               	movf	sprintf@prec^(0+128),w
 11121  0711  02B7               	subwf	sprintf@width^(0+128),f
 11122  0712  0849               	movf	(sprintf@prec+1)^(0+128),w
 11123  0713  1C03               	skipc
 11124  0714  03B8               	decf	(sprintf@width+1)^(0+128),f
 11125  0715  02B8               	subwf	(sprintf@width+1)^(0+128),f
 11126  0716  2F1B               	goto	l3660
 11127  0717                     l3658:
 11128                           
 11129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11130  0717  1683               	bsf	3,5	;RP0=1, select bank1
 11131  0718  1303               	bcf	3,6	;RP1=0, select bank1
 11132  0719  01B7               	clrf	sprintf@width^(0+128)
 11133  071A  01B8               	clrf	(sprintf@width+1)^(0+128)
 11134  071B                     l3660:
 11135                           
 11136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11137  071B  0838               	movf	(sprintf@width+1)^(0+128),w
 11138  071C  3A80               	xorlw	128
 11139  071D  3C80               	sublw	128
 11140  071E  1D03               	skipz
 11141  071F  2F22               	goto	u5775
 11142  0720  0837               	movf	sprintf@width^(0+128),w
 11143  0721  024A               	subwf	sprintf@c^(0+128),w
 11144  0722                     u5775:
 11145  0722  1803               	skipnc
 11146  0723  2F25               	goto	u5771
 11147  0724  2F26               	goto	u5770
 11148  0725                     u5771:
 11149  0725  2F32               	goto	l3664
 11150  0726                     u5770:
 11151  0726                     l3662:
 11152                           
 11153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11154  0726  1683               	bsf	3,5	;RP0=1, select bank1
 11155  0727  1303               	bcf	3,6	;RP1=0, select bank1
 11156  0728  084A               	movf	sprintf@c^(0+128),w
 11157  0729  00AB               	movwf	??_sprintf^(0+128)
 11158  072A  01AC               	clrf	(??_sprintf^(0+128)+1)
 11159  072B  082B               	movf	??_sprintf^(0+128),w
 11160  072C  02B7               	subwf	sprintf@width^(0+128),f
 11161  072D  082C               	movf	(??_sprintf+1)^(0+128),w
 11162  072E  1C03               	skipc
 11163  072F  03B8               	decf	(sprintf@width+1)^(0+128),f
 11164  0730  02B8               	subwf	(sprintf@width+1)^(0+128),f
 11165  0731  2F36               	goto	l3666
 11166  0732                     l3664:
 11167                           
 11168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11169  0732  1683               	bsf	3,5	;RP0=1, select bank1
 11170  0733  1303               	bcf	3,6	;RP1=0, select bank1
 11171  0734  01B7               	clrf	sprintf@width^(0+128)
 11172  0735  01B8               	clrf	(sprintf@width+1)^(0+128)
 11173  0736                     l3666:
 11174                           
 11175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11176  0736  0837               	movf	sprintf@width^(0+128),w
 11177  0737  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11178  0738  1903               	btfsc	3,2
 11179  0739  2F3B               	goto	u5781
 11180  073A  2F3C               	goto	u5780
 11181  073B                     u5781:
 11182  073B  2F53               	goto	l3674
 11183  073C                     u5780:
 11184  073C                     l3668:
 11185                           
 11186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11187  073C  3020               	movlw	32
 11188  073D  00AB               	movwf	??_sprintf^(0+128)
 11189  073E  0847               	movf	sprintf@sp^(0+128),w
 11190  073F  0084               	movwf	4
 11191  0740  082B               	movf	??_sprintf^(0+128),w
 11192  0741  1383               	bcf	3,7	;select IRP bank0
 11193  0742  0080               	movwf	0
 11194  0743                     l3670:
 11195  0743  3001               	movlw	1
 11196  0744  00AB               	movwf	??_sprintf^(0+128)
 11197  0745  082B               	movf	??_sprintf^(0+128),w
 11198  0746  07C7               	addwf	sprintf@sp^(0+128),f
 11199  0747                     l3672:
 11200  0747  30FF               	movlw	255
 11201  0748  07B7               	addwf	sprintf@width^(0+128),f
 11202  0749  1803               	skipnc
 11203  074A  0AB8               	incf	(sprintf@width+1)^(0+128),f
 11204  074B  30FF               	movlw	255
 11205  074C  07B8               	addwf	(sprintf@width+1)^(0+128),f
 11206  074D  0837               	movf	sprintf@width^(0+128),w
 11207  074E  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11208  074F  1D03               	btfss	3,2
 11209  0750  2F52               	goto	u5791
 11210  0751  2F53               	goto	u5790
 11211  0752                     u5791:
 11212  0752  2F3C               	goto	l3668
 11213  0753                     u5790:
 11214  0753                     l3674:
 11215                           
 11216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11217  0753  3003               	movlw	3
 11218  0754  0535               	andwf	sprintf@flag^(0+128),w
 11219  0755  00AB               	movwf	??_sprintf^(0+128)
 11220  0756  3000               	movlw	0
 11221  0757  0536               	andwf	(sprintf@flag+1)^(0+128),w
 11222  0758  00AC               	movwf	(??_sprintf+1)^(0+128)
 11223  0759  082B               	movf	??_sprintf^(0+128),w
 11224  075A  042C               	iorwf	(??_sprintf^(0+128)+1),w
 11225  075B  1903               	btfsc	3,2
 11226  075C  2F5E               	goto	u5801
 11227  075D  2F5F               	goto	u5800
 11228  075E                     u5801:
 11229  075E  2FC8               	goto	l3686
 11230  075F                     u5800:
 11231  075F                     l3676:
 11232                           
 11233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11234  075F  302D               	movlw	45
 11235  0760  00AB               	movwf	??_sprintf^(0+128)
 11236  0761  0847               	movf	sprintf@sp^(0+128),w
 11237  0762  0084               	movwf	4
 11238  0763  082B               	movf	??_sprintf^(0+128),w
 11239  0764  1383               	bcf	3,7	;select IRP bank0
 11240  0765  0080               	movwf	0
 11241  0766                     l3678:
 11242  0766  3001               	movlw	1
 11243  0767  00AB               	movwf	??_sprintf^(0+128)
 11244  0768  082B               	movf	??_sprintf^(0+128),w
 11245  0769  07C7               	addwf	sprintf@sp^(0+128),f
 11246  076A  2FC8               	goto	l3686
 11247  076B                     l3680:
 11248                           
 11249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11250  076B  3000               	movlw	0
 11251  076C  1283               	bcf	3,5	;RP0=0, select bank0
 11252  076D  1303               	bcf	3,6	;RP1=0, select bank0
 11253  076E  00A3               	movwf	___llmod@divisor+3
 11254  076F  3000               	movlw	0
 11255  0770  00A2               	movwf	___llmod@divisor+2
 11256  0771  3000               	movlw	0
 11257  0772  00A1               	movwf	___llmod@divisor+1
 11258  0773  300A               	movlw	10
 11259  0774  00A0               	movwf	___llmod@divisor
 11260  0775  1683               	bsf	3,5	;RP0=1, select bank1
 11261  0776  1303               	bcf	3,6	;RP1=0, select bank1
 11262  0777  0848               	movf	sprintf@prec^(0+128),w
 11263  0778  00AB               	movwf	??_sprintf^(0+128)
 11264  0779  3001               	movlw	1
 11265  077A                     u5815:
 11266  077A  1003               	clrc
 11267  077B  0DAB               	rlf	??_sprintf^(0+128),f
 11268  077C  3EFF               	addlw	-1
 11269  077D  1D03               	skipz
 11270  077E  2F7A               	goto	u5815
 11271  077F  1003               	clrc
 11272  0780  0D2B               	rlf	??_sprintf^(0+128),w
 11273  0781  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11274  0782  0084               	movwf	4
 11275  0783  120A  158A  200A  120A  118A  	fcall	stringdir
 11276  0788  00F0               	movwf	___lldiv@divisor
 11277  0789  120A  158A  200A  120A  118A  	fcall	stringdir
 11278  078E  00F1               	movwf	___lldiv@divisor+1
 11279  078F  120A  158A  200A  120A  118A  	fcall	stringdir
 11280  0794  00F2               	movwf	___lldiv@divisor+2
 11281  0795  120A  158A  200A  120A  118A  	fcall	stringdir
 11282  079A  00F3               	movwf	___lldiv@divisor+3
 11283  079B  0840               	movf	(sprintf@val+3)^(0+128),w
 11284  079C  00F7               	movwf	___lldiv@dividend+3
 11285  079D  083F               	movf	(sprintf@val+2)^(0+128),w
 11286  079E  00F6               	movwf	___lldiv@dividend+2
 11287  079F  083E               	movf	(sprintf@val+1)^(0+128),w
 11288  07A0  00F5               	movwf	___lldiv@dividend+1
 11289  07A1  083D               	movf	sprintf@val^(0+128),w
 11290  07A2  00F4               	movwf	___lldiv@dividend
 11291  07A3  160A  158A  24FC  120A  118A  	fcall	___lldiv
 11292  07A8  0873               	movf	?___lldiv+3,w
 11293  07A9  1283               	bcf	3,5	;RP0=0, select bank0
 11294  07AA  1303               	bcf	3,6	;RP1=0, select bank0
 11295  07AB  00A7               	movwf	___llmod@dividend+3
 11296  07AC  0872               	movf	?___lldiv+2,w
 11297  07AD  00A6               	movwf	___llmod@dividend+2
 11298  07AE  0871               	movf	?___lldiv+1,w
 11299  07AF  00A5               	movwf	___llmod@dividend+1
 11300  07B0  0870               	movf	?___lldiv,w
 11301  07B1  00A4               	movwf	___llmod@dividend
 11302  07B2  160A  158A  23E7  120A  118A  	fcall	___llmod
 11303  07B7  1283               	bcf	3,5	;RP0=0, select bank0
 11304  07B8  1303               	bcf	3,6	;RP1=0, select bank0
 11305  07B9  0820               	movf	?___llmod,w
 11306  07BA  3E30               	addlw	48
 11307  07BB  1683               	bsf	3,5	;RP0=1, select bank1
 11308  07BC  1303               	bcf	3,6	;RP1=0, select bank1
 11309  07BD  00AC               	movwf	(??_sprintf+1)^(0+128)
 11310  07BE  082C               	movf	(??_sprintf+1)^(0+128),w
 11311  07BF  00CA               	movwf	sprintf@c^(0+128)
 11312  07C0                     l3682:
 11313                           
 11314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11315  07C0  084A               	movf	sprintf@c^(0+128),w
 11316  07C1  00AB               	movwf	??_sprintf^(0+128)
 11317  07C2  0847               	movf	sprintf@sp^(0+128),w
 11318  07C3  0084               	movwf	4
 11319  07C4  082B               	movf	??_sprintf^(0+128),w
 11320  07C5  1383               	bcf	3,7	;select IRP bank0
 11321  07C6  0080               	movwf	0
 11322  07C7  2F66               	goto	l3678
 11323  07C8                     l3686:
 11324                           
 11325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11326  07C8  30FF               	movlw	255
 11327  07C9  07C8               	addwf	sprintf@prec^(0+128),f
 11328  07CA  1803               	skipnc
 11329  07CB  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11330  07CC  30FF               	movlw	255
 11331  07CD  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11332  07CE  0A48               	incf	sprintf@prec^(0+128),w
 11333  07CF  1D03               	skipz
 11334  07D0  2FD5               	goto	u5821
 11335  07D1  0A49               	incf	(sprintf@prec+1)^(0+128),w
 11336  07D2  1D03               	btfss	3,2
 11337  07D3  2FD5               	goto	u5821
 11338  07D4  2FD6               	goto	u5820
 11339  07D5                     u5821:
 11340  07D5  2F6B               	goto	l3680
 11341  07D6                     u5820:
 11342  07D6                     l3688:
 11343                           
 11344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11345  07D6  3001               	movlw	1
 11346  07D7  07A0               	addwf	sprintf@f^(0+128),f
 11347  07D8  30FF               	movlw	-1
 11348  07D9  0720               	addwf	sprintf@f^(0+128),w
 11349  07DA  0084               	movwf	4
 11350  07DB  120A  158A  200A  120A  118A  	fcall	stringdir
 11351  07E0  00AB               	movwf	??_sprintf^(0+128)
 11352  07E1  082B               	movf	??_sprintf^(0+128),w
 11353  07E2  00CA               	movwf	sprintf@c^(0+128)
 11354  07E3  084A               	movf	sprintf@c^(0+128),w
 11355  07E4  1D03               	btfss	3,2
 11356  07E5  2FE7               	goto	u5831
 11357  07E6  2FEA               	goto	u5830
 11358  07E7                     u5831:
 11359  07E7  160A  118A  2D48   	goto	l3408
 11360  07EA                     u5830:
 11361  07EA                     l3690:
 11362                           
 11363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11364  07EA  0847               	movf	sprintf@sp^(0+128),w
 11365  07EB  0084               	movwf	4
 11366  07EC  1383               	bcf	3,7	;select IRP bank0
 11367  07ED  0180               	clrf	0
 11368  07EE                     l409:
 11369  07EE  0008               	return
 11370  07EF                     __end_of_sprintf:

Data Sizes:
    Strings     30
    Constant    144
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     47      78
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_string@a	PTR unsigned char  size(2) Largest target is 20
		 -> BUFFER(BANK1[20]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _write_string->_write_char
    _write_char->_pin
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _cursor->_CMDs
    _configLCD->_CMDs
    _clear_LCD->_CMDs
    _CMDs->_pin

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   39325
                                             43 BANK1      4     4      0
                            ___flmul
                           ___xxtofl
                          _clear_LCD
                          _configADC
                          _configLCD
                             _cursor
                              _setup
                            _sprintf
                       _write_string
 ---------------------------------------------------------------------------------
 (1) _write_string                                         7     5      2     440
                                              3 COMMON     7     5      2
                         _write_char
 ---------------------------------------------------------------------------------
 (2) _write_char                                           2     2      0     198
                                              1 COMMON     2     2      0
                                _pin
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   32736
                                              0 BANK1     43    32     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cursor                                               4     3      1     484
                                              4 COMMON     4     3      1
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _configLCD                                            2     2      0     198
                                              4 COMMON     2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _clear_LCD                                            0     0      0     198
                               _CMDs
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     198
                                              1 COMMON     3     3      0
                                _pin
 ---------------------------------------------------------------------------------
 (3) _pin                                                  1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _clear_LCD
     _CMDs
       _pin
   _configADC
   _configLCD
     _CMDs
       _pin
   _cursor
     _CMDs
       _pin
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _write_string
     _write_char
       _pin

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2F      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AC      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 18:03:19 2021

                      pc 0002                       l90 004C                       l91 0056  
                     l83 0012                       l67 19CA                       l92 0060  
                     l84 00D2                       l93 006A                       l85 001A  
                     l94 0074                       l86 0024                       l95 007E  
                     l87 002E                       l96 0088                       l88 0038  
                     l97 0092                       l89 0042                       _V1 00D3  
                     _V2 00CF                       l99 00E1             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076  
                    l101 00DF                      l130 1AE8                      l131 1AEE  
                    l140 1B0B                      l132 1AEF                      l141 1B11  
                    l133 1AF5                      l134 1AF6                      l310 12B5  
                    l143 1B12                      l135 1AFC                      l127 1ADE  
                    l136 1AFD                      l128 1AE1                      l137 1B03  
                    l129 1AE7                      l161 19E6                      l138 1B04  
                    l146 1A06                      l139 1B0A                      l155 1A2A  
                    l149 199F                      l413 1A5B                      l317 0C9E  
                    l158 1CFB                      l415 1A73                      l167 1B54  
                    l600 1BD1                      l601 1BE6                      l409 07EE  
                    l339 1605                      l604 1025                      l612 1992  
                    l372 0462                      l630 1F41                      l607 1091  
                    l623 092A                      l631 1EB3                      l608 10AA  
                    l616 093F                      l449 1D61                      l641 1F34  
                    l626 093F                      l634 1F04                      l379 04A6  
                    l740 1319                      l900 19B1                      l566 1DCA  
                    l583 1FFF                      l719 1B98                      l744 13C0  
                    l584 1F64                      l761 148B                      l753 153D  
                    l729 1AD4                      l746 1397                      l594 1FF2  
                    l842 0F6B                      l771 14D1                      l587 1FC2  
                    l579 1C95                      l836 0FFF                      l765 14AF  
                    l669 1C3C                      l782 1531                      l774 150F  
                    l599 1BB5                      l783 153D                      l855 1A88  
                    l880 1DED                      l848 0FF3                      l857 1A9A  
                    l786 1A4E                      l882 1E84                      l893 1E4E  
                    l894 1E5A                      l886 1E32                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      _RE0 0048  
                    _RD3 0043                      _RE1 0049                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    _pin 1AD5                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076             ___flmul@aexp 0036             ___flmul@bexp 0037  
           ___flmul@sign 0031             ___flmul@temp 003C             ___flmul@prod 0038  
           ___fltol@exp1 005B                     l3000 1E98                     l3010 1EB4  
                   l3020 1EDD                     l3012 1EBA                     l3004 1EA1  
                   l3110 1A69                     l3102 1A4F                     l3030 1F08  
                   l3022 1EEB                     l3014 1EC9                     l3120 1D0F  
                   l3112 1A6F                     l3104 1A51                     l3024 1EF5  
                   l3016 1ECB                     l3210 091F                     l3202 0906  
                   l3130 1D49                     l3122 1D1C                     l3106 1A55  
                   l3050 1F42                     l3026 1EF6                     l3018 1ED4  
                   l2410 1A82                     l2420 1ADA                     l3300 1C96  
                   l3140 1B99                     l3212 092F                     l3204 0918  
                   l3132 1D4A                     l3124 1D20                     l3116 1CFC  
                   l3220 1BF4                     l3108 1A62                     l3052 1F4F  
                   l3044 1F29                     l3036 1F10                     l3028 1EFE  
                   l2412 1A91                     l2404 1A75                     l2500 1C66  
                   l2430 1B01                     l2422 1AE5                     l3310 1CC1  
                   l3302 1C9F                     l3142 1BAD                     l3214 0934  
                   l3134 1D53                     l3126 1D29                     l3118 1D0C  
                   l3230 1C2E                     l3222 1C01                     l3070 1F89  
                   l3062 1F65                     l3046 1F39                     l3038 1F22  
                   l2414 1A96                     l2406 1A77                     l2502 1C6A  
                   l2510 1C87                     l2432 1B08                     l2424 1AEC  
                   l3320 1CEB                     l3312 1CC7                     l3304 1CA5  
                   l3144 1BC9                     l3160 1045                     l3152 1009  
                   l2600 1301                     l3128 1D3B                     l3136 1D59  
                   l3224 1C05                     l3232 1C34                     l3216 1BE7  
                   l3080 1FBC                     l3072 1F92                     l3064 1F6D  
                   l3056 1F58                     l2408 1A7E                     l2520 1B57  
                   l2440 1D69                     l2512 1C8C                     l2504 1C74  
                   l2434 1B0F                     l2426 1AF3                     l2418 1AD6  
                   l3322 1CF6                     l3314 1CD2                     l3306 1CB3  
                   l3330 1A12                     l3146 1BE3                     l3162 1069  
                   l3154 101D                     l2610 131F                     l2602 1306  
                   l3226 1C17                     l3218 1BF1                     l3250 1DF5  
                   l3242 1DCC                     l3082 1FC6                     l3090 1FE0  
                   l3074 1FA4                     l3066 1F7E                     l2530 1B6F  
                   l2522 1B5D                     l2450 1D7D                     l2442 1D6E  
                   l2514 1C91                     l2506 1C7A                     l3410 154E  
                   l2428 1AFA                     l3324 1993                     l3316 1CD7  
                   l3308 1CB7                     l3332 1A19                     l3148 1BE5  
                   l3164 106D                     l3156 1039                     l3172 1988  
                   l2700 1493                     l2620 1333                     l2612 1323  
                   l2604 130E                     l3236 1A2B                     l3180 08C4  
                   l3228 1C25                     l3260 1E17                     l3244 1DD1  
                   l3076 1FB2                     l3068 1F80                     l2532 1B80  
                   l2524 1B60                     l2540 1B94                     l2460 1D93  
                   l2452 1D7F                     l2444 1D70                     l2436 1D62  
                   l2508 1C81                     l3500 17EA                     l3420 1572  
                   l3412 1555                     l3340 1B16                     l3350 0015  
                   l3318 1CE5                     l3334 1A1F                     l3326 1A08  
                   l3166 10A7                     l3158 1041                     l3174 1990  
                   l2710 14AE                     l2702 1498                     l2630 1347  
                   l2622 1337                     l2614 1327                     l2606 130F  
                   l3238 1A2F                     l3190 08F0                     l3182 08D1  
                   l3270 1E48                     l3262 1E1B                     l3254 1DFE  
                   l3246 1DD5                     l3078 1FB3                     l2534 1B86  
                   l2526 1B67                     l2518 1B55                     l2550 1AAB  
                   l2470 1DB6                     l2462 1D97                     l2454 1D85  
                   l2446 1D74                     l2438 1D65                     l3510 0255  
                   l3502 01E9                     l3430 15BC                     l3422 1587  
                   l3414 155A                     l3406 1541                     l3342 1B32  
                   _ADC0 00D9                     _ADC1 00D8                     l3360 0045  
                   l3352 001D                     l3336 1A24                     l3328 1A0D  
                   l3168 10A9                     l3176 1992                     l2712 14B3  
                   l2720 14BF                     l2640 135B                     l2632 134B  
                   l2624 133B                     l2616 132B                     l2608 1311  
                   l3192 08F8                     l3280 1E7B                     l3272 1E52  
                   l3264 1E29                     l3256 1E03                     l3248 1DE5  
                   l3096 1FE7                     l3088 1FCE                     l2800 0D03  
                   l2536 1B87                     l2528 1B6B                     l2560 1ACA  
                   l2552 1AAF                     l2544 1A9B                     l2464 1DA8  
                   l2456 1D88                     l2472 1DBC                     l2448 1D79  
                   l2480 1C3D                     l3600 0619                     l3520 02A3  
                   l3512 025E                     l3504 0204                     l3440 15EC  
                   l3432 15BD                     l3424 159A                     l3416 155E  
                   l3408 1548                     l3344 1B38                     l3370 0077  
                   l3362 004F                     l3354 0027                     l3346 0008  
                   l3290 19B9                     l2714 14B6                     l2706 14A1  
                   l2722 14C3                     l2650 139B                     l2642 135F  
                   l2634 134F                     l2626 133F                     l2618 132F  
                   l2570 12C3                     l3194 08FA                     l3186 08DA  
                   l3282 1E7C                     l3274 1E5C                     l3266 1E39  
                   l3258 1E10                     l3098 1FF7                     l2810 0D46  
                   l2538 1B8E                     l2554 1AB3                     l2546 1AA1  
                   l2562 1AD0                     l2474 1DC1                     l2466 1DAE  
                   l2458 1D8F                     l2490 1C4D                     l2482 1C3E  
                   l3602 0621                     l3514 0266                     l3506 022B  
                   l3522 02AC                     l3610 0639                     l3450 1607  
                   l3442 15F0                     l3434 15C1                     l3426 159E  
                   l3418 156E                     l3338 1B13                     l2900 19E8  
                   l3372 0081                     l3364 0059                     l3356 0031  
                   l3348 000E                     l3292 19C2                     l2740 150B  
                   l2732 14D6                     l2724 14C4                     l2716 14B8  
                   l2708 14AA                     l2660 13B4                     l2652 13A4  
                   l2636 1353                     l2628 1343                     l2644 1363  
                   l2580 12DA                     l2572 12C7                     l3196 08FE  
                   l3188 08EF                     l3276 1E72                     l3268 1E44  
                   l2820 0DCF                     l2812 0D62                     l2804 0D0C  
                   l2556 1ABD                     l2548 1AA4                     l2476 1DC6  
                   l2468 1DAF                     l2492 1C52                     l2484 1C42  
                   l3620 0661                     l3612 064A                     l3604 0628  
                   l3540 0373                     l3524 02E1                     l3516 0284  
                   l3508 023A                     l3460 164D                     l3452 1629  
                   l3436 15C4                     l3444 1601                     l3428 15AE  
                   l3700 00E2                     l2910 19FA                     l2902 19EB  
                   l3390 00DA                     l3374 008B                     l3366 0063  
                   l3358 003B                     l3294 19C3                     l3286 19B2  
                   l2750 1527                     l2742 1514                     l2734 14DB  
                   l2726 14C8                     l2718 14BD                     l2670 13D2  
                   l2654 13A6                     l2662 13B8                     l2646 1364  
                   l2638 1357                     l2590 12F0                     l2582 12DB  
                   l2574 12C8                     l2566 12B6                     l3278 1E77  
                   l2830 0E42                     l2822 0DDF                     l2814 0D8E  
                   l2806 0D1C                     l2558 1AC3                     l2494 1C58  
                   l2486 1C47                     l3622 0667                     l3614 064E  
                   l3606 062C                     l3550 03B0                     l3542 038E  
                   l3534 0332                     l3526 032E                     l3470 168B  
                   l3462 1651                     l3454 1637                     l3446 1603  
                   l3438 15D9                     l3710 00FE                     l3702 00E7  
                   l2912 19FD                     l2904 19F1                     l3376 0095  
                   l3368 006D                     l3384 009E                     l3296 19C6  
                   l3288 19B6                     l2752 152B                     l2744 1519  
                   l2736 14E9                     l2728 14CE                     l2680 13FC  
                   l2672 13E9                     l2664 13C4                     l2656 13AA  
                   l2648 137B                     l2592 12F1                     l2576 12CD  
                   l2584 12DD                     l2568 12BD                     l2840 0EEF  
                   l2832 0E5F                     l2824 0DFC                     l2816 0DAA  
                   l2808 0D29                     l2760 0C9F                     l2496 1C5B  
                   l2488 1C49                     l3640 06C3                     l3632 0677  
                   l3624 066F                     l3616 0652                     l3608 0632  
                   l3560 03D7                     l3544 0394                     l3528 0330  
                   l3480 16DB                     l3472 16A4                     l3464 166A  
                   l3456 163B                     l2920 19D8                     l3720 01A9  
                   l3712 0107                     l3704 00EC                     l2906 19F4  
                   l3386 00D3                     l3378 009C                     l3298 19C9  
                   l2754 152D                     l2746 1521                     l2738 14ED  
                   l2690 1425                     l2682 1400                     l2674 13ED  
                   l2666 13C9                     l2658 13AB                     l2594 12F7  
                   l2586 12E5                     l2578 12D2                     l2850 0F3B  
                   l2842 0F17                     l2834 0E8C                     l2826 0E0C  
                   l2818 0DC6                     l2770 0CB6                     l2762 0CA6  
                   l2930 10B4                     l2498 1C62                     l3650 06F6  
                   l3642 06CA                     l3626 0675                     l3618 0656  
                   l3570 0473                     l3562 03DC                     l3546 03A0  
                   l3554 03B5                     l3538 0369                     l3490 1768  
                   l3482 16DF                     l3474 16AF                     l3466 1683  
                   l3458 163F                     l2922 19DB                     l2914 19CC  
                   l3722 01C6                     l3714 0112                     l3706 00F1  
                   l2908 19F7                     l3396 00E0                     l3388 00D7  
                   l2756 1538                     l2748 1526                     l2692 1463  
                   l2684 1401                     l2676 13F1                     l2596 12FB  
                   l2588 12EA                     l2860 0F50                     l2852 0F3C  
                   l2844 0F20                     l2836 0E9C                     l2828 0E29  
                   l2780 0CD2                     l2772 0CBB                     l2764 0CAC  
                   l3660 071B                     l3652 06FC                     l3644 06D9  
                   l3636 06AE                     l3580 04A0                     l3572 0477  
                   l3564 0417                     l3556 03C2                     l3548 03A7  
                   l3492 1771                     l3484 16E5                     l3476 16B5  
                   l3468 1687                     l2924 19DE                     l2916 19CF  
                   l3724 01CE                     l3716 011D                     l3708 00F6  
                   l2758 153C                     l2694 1469                     l2686 140A  
                   l2678 13FA                     l2598 12FC                     l2870 0F75  
                   l2862 0F54                     l2854 0F45                     l2846 0F2E  
                   l2838 0EC9                     l2790 0CE7                     l2782 0CD8  
                   l2774 0CC3                     l2766 0CB0                     l2942 1272  
                   l2950 0949                     l3670 0743                     l3662 0726  
                   l3654 0700                     l3646 06E2                     l3638 06B8  
                   l3590 04DD                     l3582 04AF                     l3574 047D  
                   l3566 0456                     l3558 03D0                     l3494 178C  
                   l3486 1704                     l3478 16C8                     l2926 19E1  
                   l2918 19D5                     l3726 01D7                     l3718 0163  
                   l2696 146E                     l2688 140F                     l2880 0FB3  
                   l2872 0F83                     l2864 0F68                     l2848 0F37  
                   l2856 0F4B                     l2792 0CEF                     l2784 0CDC  
                   l2776 0CC5                     l2768 0CB1                     l2936 11C1  
                   l2928 10AE                     l2960 0A3F                     l2952 0950  
                   l3680 076B                     l3672 0747                     l3664 0732  
                   l3656 070E                     l3648 06EA                     l3592 0538  
                   l3584 04B4                     l3576 048A                     l3568 046A  
                   l3488 174F                     l3496 1794                     l2698 147D  
                   l2890 0FE7                     l2882 0FBE                     l2874 0F87  
                   l2858 0F4F                     l2794 0CF1                     l2786 0CDD  
                   l2778 0CCD                     l2938 11C7                     l2970 0AFB  
                   l2946 0943                     l3682 07C0                     l3674 0753  
                   l3666 0736                     l3658 0717                     l3594 0573  
                   l3586 04BB                     l3578 0499                     l3498 17A3  
                   l3690 07EA                     l2892 0FEB                     l2884 0FCD  
                   l2876 0FA0                     l2868 0F70                     l2796 0CF9  
                   l2788 0CE2                     l2964 0AC7                     l2948 0947  
                   l3676 075F                     l3668 073C                     l3596 05B2  
                   l3588 04BF                     l3790 00A6                     l2894 0FEC  
                   l2886 0FD7                     l2878 0FA6                     l2798 0CFE  
                   l2990 19A8                     l2982 0C72                     l2958 0A38  
                   l3678 0766                     l3686 07C8                     l3598 05BE  
                   l2896 0FF7                     l2888 0FD9                     l2992 19AE  
                   l2976 0BE3                     l2968 0AF4                     l3688 07D6  
                   l2994 19B0                     l2986 19A1                     l2978 0BEA  
                   l2988 19A2                     l3788 161B                     l2998 1E85  
                   ?_pin 0070                     STR_1 08B1                     STR_2 08A0  
                   _CMDs 19E7                     u3000 1AF3                     u3001 1AF2  
                   u3010 1AFA                     u3011 1AF9                     u3020 1B01  
                   u3021 1B00                     u3030 1B08                     u3110 1DA8  
                   u3031 1B07                     u3111 1DA7                     u3040 1B0F  
                   u3200 1C74                     u3041 1B0E                     u4001 0E7E  
                   u3105 1D98                     u3201 1C73                     u4002 0E85  
                   u3130 1DBC                     u3050 1D69                     u4011 0EAB  
                   u4003 0E8C                     u3131 1DBB                     u3115 1DA4  
                   u3051 1D68                     u4100 0F4F                     u4020 0ED5  
                   u4012 0EB2                     u3300 1B94                     u3140 1DC1  
                   u3060 1D74                     u3220 1C87                     u4101 0F4E  
                   u4013 0EB9                     u3301 1B93                     u3141 1DC0  
                   u3125 1DB0                     u3061 1D73                     u3221 1C86  
                   u3205 1C70                     u4110 0F54                     u3310 1AA1  
                   u3070 1D85                     u3230 1C8C                     u3150 1C42  
                   u4111 0F53                     u4031 0EE1                     u3311 1AA0  
                   u3071 1D84                     u3231 1C8B                     u3215 1C7B  
                   u3151 1C41                     u3400 12F0                     u5000 0917  
                   u4120 0F68                     u4040 0EFD                     u4032 0EE8  
                   u3240 1B5D                     u4200 10B4                     u3160 1C4D  
                   u3401 12EF                     u5001 0916                     u4121 0F67  
                   u4033 0EEF                     u4025 0ED0                     u3241 1B5C  
                   u4201 10B3                     u3161 1C4C                     u3410 12FB  
                   u5010 091E                     u4130 0F6F                     u3330 1AB3  
                   u3090 1D97                     u3170 1C58                     u3411 12FA  
                   u5011 091D                     u4131 0F6E                     u4051 0F09  
                   u3331 1AB2                     u3091 1D96                     u3171 1C57  
                   u3500 13AA                     u3420 1301                     u5100 1C34  
                   u4140 0F75                     u4052 0F10                     u3260 1B6F  
                   u3340 1ABD                     u3501 13A9                     u3421 1300  
                   u5101 1C33                     u4141 0F74                     u4053 0F17  
                   u4045 0EF8                     u3261 1B6E                     u3341 1ABC  
                   u3325 1AA5                     u3085 1D89                     u3430 1306  
                   u5030 092F                     u5110 1DD1                     u4150 0F87  
                   u3190 1C6A                     u3431 1305                     u5031 092E  
                   u5111 1DD0                     u4151 0F86                     u3255 1B61  
                   u4215 10D1                     u3191 1C69                     u3600 1425  
                   u3520 13C0                     u3440 131F                     u5040 0934  
                   u5200 1E4E                     u5120 1DD5                     u4160 0F96  
                   u4080 0F3B                     u3280 1B80                     u3360 1AD0  
                   u4240 11C7                     u3601 1424                     u3521 13BF  
                   u3441 131E                     u5041 0933                     u5025 0921  
                   u5201 1E4D                     u5121 1DD4                     u4081 0F3A  
                   u4065 0F19                     u3281 1B7F                     u3361 1ACF  
                   u3345 1AB9                     u4241 11C6                     u4225 112B  
                   u3185 1C5C                     u4305 0970                     u3530 13C4  
                   u3450 1323                     u3370 12C7                     u5050 1BF1  
                   u5210 1E52                     u5130 1DF5                     u4170 0FB3  
                   u4410 0BEA                     u4330 0A3F                     u3611 143C  
                   u3603 1421                     u3531 13C3                     u3515 13AD  
                   u3451 1322                     u3371 12C6                     u5051 1BF0  
                   u5211 1E51                     u5131 1DF4                     u4171 0FB2  
                   u4075 0F30                     u3275 1B70                     u3355 1AC4  
                   u4235 1180                     u4411 0BE9                     u4331 0A3E  
                   u4315 09AC                     u5300 00DE                     u3700 14C3  
                   u3620 1450                     u3612 143D                     u3540 13C9  
                   u3460 137B                     u3380 12CD                     u5220 1E67  
                   u4500 1EEB                     u4180 0FCD                     u5301 00DD  
                   u3701 14C2                     u3621 1451                     u3613 1442  
                   u3541 13C8                     u3461 137A                     u3381 12CC  
                   u4501 1EEA                     u4181 0FCC                     u4165 0F91  
                   u3285 1B7C                     u4405 0BA2                     u4325 09F7  
                   u3710 14C8                     u3630 146E                     u3622 1456  
                   u3614 1443                     u3470 1386                     u3390 12D2  
                   u5070 1C05                     u5230 1E77                     u5150 1E16  
                   u4190 0FEB                     u5310 154E                     u3711 14C7  
                   u3631 146D                     u3623 1457                     u3615 1448  
                   u3551 13DB                     u3471 1384                     u3391 12D1  
                   u5071 1C04                     u5231 1E76                     u5151 1E15  
                   u4191 0FEA                     u4175 0FAF                     u4095 0F3E  
                   u3295 1B88                     u4255 11E4                     u5311 154D  
                   u3800 1526                     u3720 14CE                     u3640 1493  
                   u3616 1449                     u3560 13ED                     u3552 13E2  
                   u3480 1387                     u5080 1C17                     u5240 1E7B  
                   u4600 1F4F                     u4520 1F04                     u4280 0947  
                   u5400 16DF                     u5320 156E                     u3801 1525  
                   u3721 14CD                     u3641 1492                     u3561 13EC  
                   u3553 13E9                     u3465 1377                     u5081 1C16  
                   u5065 1BF6                     u5241 1E7A                     u5225 1E62  
                   u5145 1E08                     u4601 1F4E                     u4521 1F03  
                   u4505 1EE7                     u4185 0FC9                     u4265 1231  
                   u4425 0BFD                     u4345 0A52                     u4281 0946  
                   u5401 16DE                     u5321 156D                     u5250 1A0D  
                   u3810 152B                     u3730 14D5                     u3650 1498  
                   u3570 13F1                     u3490 139B                     u5170 1E38  
                   u4610 1F63                     u4530 1F08                     u4450 19A8  
                   u4370 0AFB                     u4290 0950                     u5410 1768  
                   u5330 15AE                     u5251 1A0C                     u3811 152A  
                   u3731 14D4                     u3651 1497                     u3571 13F0  
                   u3491 139A                     u5171 1E37                     u4611 1F62  
                   u4531 1F07                     u4515 1EF7                     u4275 127D  
                   u4451 19A7                     u4435 0C39                     u4371 0AFA  
                   u4355 0A8E                     u4291 094F                     u5411 1767  
                   u5331 15AD                     u5260 1A1F                     u3820 153C  
                   u3740 14DB                     u3580 1400                     u4700 1FE6  
                   u4540 1F0F                     u2940 1A82                     u3900 0D03  
                   u4460 19AE                     u5500 0368                     u5420 178C  
                   u5340 15BC                     u5261 1A1E                     u3821 153B  
                   u3741 14DA                     u3581 13FF                     u5085 1C13  
                   u5165 1E2A                     u4701 1FE5                     u4541 1F0E  
                   u2941 1A81                     u3901 0D02                     u4461 19AD  
                   u4445 0C75                     u4365 0ACA                     u5501 0367  
                   u5421 178B                     u5341 15BB                     u3750 14ED  
                   u3670 14AE                     u5190 1E48                     u4630 1FA4  
                   u4470 1E98                     u3830 0CB0                     u5510 0373  
                   u5430 17A3                     u5350 1600                     u5270 1B20  
                   u3751 14EC                     u3671 14AD                     u5095 1C26  
                   u5191 1E47                     u4631 1FA3                     u4471 1E97  
                   u3911 0D54                     u3831 0CAF                     u5511 0372  
                   u5431 17A2                     u5351 15FF                     u3760 14FC  
                   u3680 14B3                     u4720 1FF7                     u4560 1F21  
                   u4480 1EB2                     u2960 1A96                     u3912 0D5B  
                   u3840 0CB6                     u5600 04B4                     u5520 038E  
                   u5440 01E9                     u5360 1637                     u5280 1B42  
                   u3681 14B2                     u3665 14A3                     u5185 1E3D  
                   u4721 1FF6                     u4625 1F8B                     u4561 1F20  
                   u4481 1EB1                     u2961 1A95                     u3921 0D70  
                   u3913 0D62                     u3841 0CB5                     u4385 0B1B  
                   u5601 04B3                     u5521 038D                     u5505 0364  
                   u5441 17FA                     u5361 1634                     u2970 1ADA  
                   u3770 150B                     u3690 14BD                     u4810 1D3B  
                   u4730 1A55                     u4650 1FC2                     u4570 1F28  
                   u3922 0D77                     u3850 0CBB                     u5530 03A0  
                   u5450 0204                     u5370 163B                     u5290 1B54  
                   u2971 1AD9                     u3771 150A                     u3691 14BC  
                   u3595 1403                     u4811 1D3A                     u4731 1A54  
                   u4715 1FE9                     u4651 1FC1                     u4635 1FA0  
                   u4571 1F27                     u4555 1F11                     u2955 1A89  
                   u3931 0D9C                     u3923 0D7E                     u3851 0CBA  
                   u4395 0B57                     u5531 039F                     u5451 0203  
                   u5435 179F                     u5371 163A                     u5291 1B53  
                   u2980 1AE5                     u3780 1514                     u4660 1FC6  
                   u3932 0DA3                     u3860 0CDC                     u5700 06B8  
                   u5540 03C2                     u5460 022B                     u5380 166A  
                   _RCIF 0065                     u2981 1AE4                     u4901 1054  
                   u3781 1513                     u3765 14F7                     u4805 1D22  
                   u4661 1FC5                     u4645 1FB5                     u3941 0DB8  
                   u3933 0DAA                     u3861 0CDB                     u5701 06B7  
                   u5541 03C1                     u5461 022A                     u5445 17F5  
                   u5381 1669                     u2990 1AEC                     u4910 106D  
                   u4902 1055                     u3790 1519                     u4830 1D59  
                   u4670 1FCD                     u4590 1F39                     u3942 0DBF  
                   u3870 0CE2                     u5710 06C3                     u5630 0620  
                   u5550 03D0                     u5470 023A                     u5390 16A4  
                   u2991 1AEB                     u4911 106C                     u4903 105A  
                   u3791 1518                     u4831 1D58                     u4815 1D37  
                   u4671 1FCC                     u4591 1F38                     u4495 1ED6  
                   u3943 0DC6                     u3871 0CE1                     u5711 06C2  
                   u5631 061F                     u5615 053B                     u5551 03CF  
                   u5471 0239                     u5391 16A3                     u4840 1BAD  
                   u4904 105B                     u4760 1A6F                     u3880 0CE7  
                   u5800 075F                     u5720 06D9                     u5640 0638  
                   u5480 0255                     u4841 1BAC                     u4921 107C  
                   u4905 1060                     u4825 1D4B                     u4761 1A6E  
                   u4745 1A5C                     u4585 1F2B                     u3961 0DEE  
                   u3881 0CE6                     u5801 075E                     u5721 06D8  
                   u5641 0637                     u5625 05C1                     u5545 03BE  
                   u5481 0254                     u4850 1BC9                     u4930 10A7  
                   u4922 107D                     u4906 1061                     u4770 1D0C  
                   u4690 1FDF                     u3962 0DF5                     u3890 0CFE  
                   u5730 06EA                     u5650 0652                     u5570 0469  
                   u4851 1BC8                     u4931 10A6                     u4923 1082  
                   u4771 1D0B                     u4755 1A63                     u4691 1FDE  
                   u3971 0E1B                     u3963 0DFC                     u3955 0DC8  
                   u3891 0CFD                     u5731 06E9                     u5715 06BF  
                   u5651 0651                     u5571 0468                     u5475 0236  
                   u4860 1BE3                     u4924 1083                     u4940 1990  
                   u3972 0E22                     u5820 07D6                     u5740 06F6  
                   u5660 0667                     u5580 048A                     u4861 1BE2  
                   u4925 1088                     u4941 198F                     u4685 1FCF  
                   u3973 0E29                     u5821 07D5                     u5741 06F5  
                   u5725 06D5                     u5661 0666                     u5581 0489  
                   u5565 03DF                     u4926 1089                     u4870 101D  
                   u4950 08D1                     u4790 1D20                     u5830 07EA  
                   u5750 0700                     u5670 066F                     u5590 0499  
                   u4935 10A3                     u4871 101C                     u4951 08D0  
                   u4791 1D1F                     u3991 0E51                     u5831 07E7  
                   u5815 077A                     u5751 06FF                     u5671 066E  
                   u5591 0498                     u5495 0335                     u4880 1039  
                   u4960 08E8                     u3992 0E58                     u5760 070E  
                   u4865 1BDF                     u4881 1038                     u4785 1D11  
                   u3993 0E5F                     u3985 0E2B                     u5761 070D  
                   u5585 0486                     u4890 1045                     u4970 08FE  
                   u5770 0726                     u5690 06AD                     u5907 1CC9  
                   u4891 1044                     u4971 08FD                     u5771 0725  
                   u5691 06AC                     u5595 0495                     u4980 0905  
                   u5780 073C                     u5917 1CD4                     u4981 0904  
                   u4965 08E3                     u5781 073B                     u5765 070A  
                   u5685 067A                     u5790 0753                     u5927 1CE1  
                   u5791 0752                     u5775 0722                     u5695 06A9  
                   u5847 01DF                     u5937 1CED                     u5857 19E3  
                   u5947 1CF8                     u5867 1C9A                     u4995 0907  
                   u5957 00D5                     u5877 1CA9                     u5967 1A01  
                   u5887 1CB5                     u5897 1CBF                     _TRMT 04C1  
                   _main 00E2                     btemp 007E                     pin@a 0070  
                   start 0000             _sprintf$1147 00B0                    ??_pin 0070  
                  CMDs@a 0073                    ?_CMDs 0070            ___fltol@sign1 005A  
        __end_of___fladd 153E                    ?_main 0070          __end_of___awdiv 1DCB  
        __end_of___flneg 1993          __end_of___awmod 1C96          __end_of___flmul 1000  
        __end_of___flsub 1A4F          __end_of___fltol 0940                    _ANSEL 0188  
        __end_of___lldiv 1D62          ___awdiv@divisor 0077          __end_of___llmod 1C3D  
        __end_of___lwdiv 1B99            write_string@a 0073            write_string@i 0078  
        __end_of___lwmod 1AD5          ___awdiv@counter 0020                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISD 0088  
                  _TRISE 0089                    _TXREG 0019          __end_of_dpowers 08A0  
                  _scale 0940          __end_of_isdigit 19B2                    _setup 19B2  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 07EF             __end_of_CMDs 1A07          __initialization 07EF  
           __end_of_main 01E9                   ??_CMDs 0071                   ??_main 00CB  
  __size_of_write_string 0042     __size_of__tdiv_to_l_ 00BD                   _ADCON1 009F  
       ___llmod@dividend 0024                   ?_scale 003E                   _ADRESH 001E  
       ___awdiv@dividend 0079                   ?_setup 0070                   _ANSELH 0189  
                 _BUFFER 00DA         __end_of___xxtofl 1E85         __end_of__powers_ 0844  
                 ___flge 1009                   ___fleq 1B99             _write_string 1B13  
              ??___fladd 005A                   ___wmul 1A4F                ??___awdiv 007B  
              ??___flneg 0074                ??___awmod 0074                ??___flmul 002C  
              ??___flsub 007E                ??___fltol 0055                ??___lldiv 0078  
              ??___llmod 0028                ??___lwdiv 007A                ??___lwmod 0074  
                 _cursor 1A07                   _fround 10AB         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_isdigit 0070  
     __size_of__Umul8_16 0027                ??_sprintf 00AB               ___flge@ff1 0070  
             ___flge@ff2 0074             ___xxtofl@arg 007A             ___xxtofl@exp 0079  
           ___xxtofl@val 0070               ___fleq@ff1 0070               ___fleq@ff2 0074  
__end_of__initialization 07FC               ___flneg@f1 0070               ___fltol@f1 0051  
         __pcstackCOMMON 0070            __end_of_scale 0C9F            __end_of_setup 19CB  
     __size_of_clear_LCD 000D               __div_to_l_ 1F42       __size_of_configADC 00DB  
     __size_of_configLCD 0066          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0042          __div_to_l_@quot 0020             sprintf@width 00B7  
                ??_setup 0070               __pbssBANK0 006E               __pbssBANK1 00CF  
          __div_to_l_@f1 0070            __div_to_l_@f2 0074        __end_of__Umul8_16 1A9B  
             __pmaintext 00E2                  ?___flge 0070                  ?___fleq 0070  
                ?___wmul 0070                  ?_cursor 0074                  ?_fround 003E  
              ?___xxtofl 0070               __stringtab 0800        __end_of_clear_LCD 19A0  
      __end_of__npowers_ 0878               _scale$1146 004C        __end_of_configADC 00E2  
      __end_of_configLCD 1CFC          __size_of___flge 00A2          __size_of___fleq 004E  
                ___fladd 12B6                  ___awdiv 1D62                  ___flneg 1988  
                ___awmod 1C3D                  ___flmul 0C9F                  ___flsub 1A2B  
                ___fltol 08C4                  ___lldiv 1CFC          __size_of___wmul 0025  
                ___llmod 1BE7                  ___lwdiv 1B55                  ___lwmod 1A9B  
              _ANSELbits 0188          __size_of_cursor 0024          __size_of_fround 020B  
                __ptext1 1B13                  __ptext2 19CB                  __ptext3 153E  
                __ptext4 0940                  __ptext5 1C3D                  __ptext6 1D62  
                __ptext7 19A0                  __ptext8 10AB                  __ptext9 1A9B  
            ?__div_to_l_ 0070                  _dpowers 0878                  _isdigit 19A0  
           __size_of_pin 003E               ??___xxtofl 0074         ___awmod@dividend 0072  
                _sprintf 153E                  clrloop0 1002     end_of_initialization 07FC  
                cursor@a 0076                  cursor@b 0074                  cursor@x 0077  
        ___lldiv@divisor 0070          ___lldiv@counter 007D                _RCSTAbits 0018  
                psplit$0 D002B           __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0074  
          ??__tdiv_to_l_ 0078              ___fladd@grs 0065            ___xxtofl@sign 0078  
              _TRISAbits 0085              ___flmul@grs 0032                _TXSTAbits 0098  
    __size_of__div_to_l_ 00BE           __end_of___flge 10AB           __end_of___fleq 1BE7  
         __end_of___wmul 1A74               _write_char 19CB           __end_of_cursor 1A2B  
         __end_of_fround 12B6        pnum$text3_split_1 002B      start_initialization 07EF  
    __end_of__tdiv_to_l_ 1F42              __end_of_pin 1B13          ___llmod@divisor 0020  
        ___llmod@counter 0029                 ??___flge 0078                 ??___fleq 0078  
               ??___wmul 0074                __Umul8_16 1A74                 ??_cursor 0075  
               ??_fround 0042            sprintf@tmpval 00B9                ___fladd@a 0056  
              ___fladd@b 0052               fround@prec 0051                ___flmul@a 0028  
              ___flmul@b 0024                ___flsub@a 0066                ___flsub@b 006A  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00BA              sprintf@flag 00B5              sprintf@eexp 00C1  
            sprintf@fval 00C3              sprintf@prec 00C8                _clear_LCD 1993  
       ___lwdiv@dividend 0078                 ?___fladd 0052                 ?___awdiv 0077  
               ?___flneg 0070                 ?___awmod 0070                 ?___flmul 0024  
               ?___flsub 0066                 ?___fltol 0051                 ?___lldiv 0070  
               ?___llmod 0020                __npowers_ 0844               ?__Umul8_16 0070  
               ?___lwdiv 0076                 ?___lwmod 0070                _configADC 0007  
              _configLCD 1C96              ?_write_char 0070                __pstrings 0800  
            __tdiv_to_l_ 1E85             ??__div_to_l_ 0078                 ?_isdigit 0070  
              _readUSART 006F                _entregado 006E         ___lwdiv@quotient 007B  
               ?_sprintf 00A0           __size_of_scale 035F           __size_of_setup 0019  
         ___wmul@product 0074                clear_ram0 1001                 _PIE1bits 008C  
             ?_clear_LCD 0070                 _PIR1bits 000C       __end_of__div_to_l_ 2000  
          ?_write_string 0073               ?_configADC 0070               ?_configLCD 0070  
             _ADCON0bits 001F              __stringbase 080F        ___wmul@multiplier 0070  
            write_char@a 0072      __size_of_write_char 001C           ??_write_string 0075  
            ??__Umul8_16 0072         __size_of___fladd 0288         __size_of___awdiv 0069  
       __size_of___flneg 000B         __size_of___awmod 0059         __size_of___flmul 0361  
       __size_of___flsub 0024         __size_of___fltol 007C         __size_of___lldiv 0066  
       __size_of___llmod 0056         __size_of___lwdiv 0044         __size_of___lwmod 003A  
            _fround$1144 004D              _fround$1145 0049       __end_of__stringtab 0810  
            _isdigit$955 0070               _ANSELHbits 0189               sprintf@val 00BD  
               ___xxtofl 1DCB         __size_of_isdigit 0012          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 1B55                 __ptext11 0C9F  
               __ptext20 1A2B                 __ptext12 1A74                 __ptext21 12B6  
               __ptext13 1E85                 __ptext30 19E7                 __ptext22 1988  
               __ptext14 1F42                 __ptext31 1AD5                 __ptext23 1009  
               __ptext15 1DCB                 __ptext24 1B99                 __ptext16 1A4F  
               __ptext25 19B2                 __ptext17 1BE7                 __ptext26 1A07  
               __ptext18 1CFC                 __ptext27 1C96                 __ptext19 08C4  
               __ptext28 0007                 __ptext29 1993                 __powers_ 0810  
               _contador 00D7         __size_of_sprintf F2B1            __size_of_CMDs 0020  
          __size_of_main 0107                pnum$text3 000D              ??_clear_LCD 0074  
            ??_configADC 0070              ??_configLCD 0074               _INTCONbits 000B  
               isdigit@c 0071                 scale@scl 0050                sprintf@ap 00B4  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024                sprintf@sp 00C7  
       __tdiv_to_l_@quot 0020         ___lwmod@dividend 0072         ___lldiv@dividend 0074  
              stringcode 080A             ??_write_char 0071             ?__tdiv_to_l_ 0070  
 __Umul8_16@multiplicand 0070                 sprintf@c 00CA                 sprintf@f 00A0  
       ___lldiv@quotient 0079          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 080A                 stringtab 0800     __end_of_write_string 1B55  
          ___fladd@signs 0062             ___fladd@aexp 0063             ___fladd@bexp 0064  
   __Umul8_16@multiplier 0078       __end_of_write_char 19E7              configADC@ch 0072  
      __Umul8_16@product 0074  
